!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/dusseche/cub3d/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220828.0/
$(NAME)	minilibx_linux/Makefile	/^$(NAME)	: $(OBJ)$/;"	t
$(NOM)	mlx/Makefile	/^$(NOM):	$(OBJ)$/;"	t
$(OBJ_DIR)/%.o	minilibx_linux/Makefile	/^$(OBJ_DIR)\/%.o: %.c$/;"	t
${NAME}	libft/Makefile	/^${NAME}: ${OBJS}$/;"	t
%.o	libft/Makefile	/^%.o: %.c$/;"	t
BACK	include/config.h	/^# define BACK /;"	d
BACKWARD	include/structs.h	/^enum e_player_direction{ FORWARD, BACKWARD, RIGHT, LEFT, NB_DIRECTION };$/;"	e	enum:e_player_direction
BG	include/config.h	/^# define BG /;"	d
BONUS_TEXTURES_SOLIDS	include/bonus.h	/^#define BONUS_TEXTURES_SOLIDS /;"	d
C	include/structs.h	/^enum e_identifiers { NO, SO, EA, WE, F, C };$/;"	e	enum:e_identifiers
CAM	include/structs.h	/^enum log_type { DATA, PARAM, CAM, PLAYER, MAP };$/;"	e	enum:log_type
CAM_ANGLE	include/config.h	/^# define CAM_ANGLE /;"	d
CAM_QUALITY	include/config.h	/^# define CAM_QUALITY /;"	d
CC	libft/Makefile	/^CC = gcc$/;"	m
CC	minilibx_linux/Makefile	/^	CC = clang$/;"	m
CC	minilibx_linux/Makefile	/^CC	= gcc$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CFLAGS	minilibx_linux/Makefile	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CLIC	include/config.h	/^# define CLIC /;"	d
CONTROLS	include/config.h	/^# define CONTROLS /;"	d
CONTROLS_KEYS	include/config.h	/^# define CONTROLS_KEYS /;"	d
CUB3D_H	include/cub3d.h	/^# define CUB3D_H$/;"	d
DATA	include/structs.h	/^enum log_type { DATA, PARAM, CAM, PLAYER, MAP };$/;"	e	enum:log_type
DEBUG_LOG_FILENAME	include/config.h	/^# define DEBUG_LOG_FILENAME /;"	d
DEFAULT_ROTATION_ANGLE	include/config.h	/^# define DEFAULT_ROTATION_ANGLE /;"	d
DOWN_ARROW	include/config.h	/^# define DOWN_ARROW /;"	d
E	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	e	enum:e_direction
EA	include/structs.h	/^enum e_identifiers { NO, SO, EA, WE, F, C };$/;"	e	enum:e_identifiers
EAST	include/structs.h	/^enum e_cardinal { NORTH, SOUTH, EAST, WEST };$/;"	e	enum:e_cardinal
EAST_CHAR	include/config.h	/^# define EAST_CHAR /;"	d
EMPTY	include/config.h	/^# define EMPTY /;"	d
ENTER	include/config.h	/^#  define ENTER /;"	d
ENV_DISPLAY	minilibx_linux/mlx_int.h	/^# define ENV_DISPLAY /;"	d
ERR_DATA_FILTER	mlx/mlx_png.c	/^#define	ERR_DATA_FILTER	/;"	d	file:
ERR_DATA_MISMATCH	mlx/mlx_png.c	/^#define	ERR_DATA_MISMATCH	/;"	d	file:
ERR_MAGIC_SIZE	mlx/mlx_png.c	/^#define	ERR_MAGIC_SIZE	/;"	d	file:
ERR_MAGIC_WRONG	mlx/mlx_png.c	/^#define	ERR_MAGIC_WRONG	/;"	d	file:
ERR_NO_TRUECOLOR	minilibx_linux/mlx_int.h	/^# define ERR_NO_TRUECOLOR /;"	d
ERR_STRUCT_CRC	mlx/mlx_png.c	/^#define	ERR_STRUCT_CRC	/;"	d	file:
ERR_STRUCT_DAT	mlx/mlx_png.c	/^#define	ERR_STRUCT_DAT	/;"	d	file:
ERR_STRUCT_END	mlx/mlx_png.c	/^#define	ERR_STRUCT_END	/;"	d	file:
ERR_STRUCT_HDR	mlx/mlx_png.c	/^#define	ERR_STRUCT_HDR	/;"	d	file:
ERR_STRUCT_INCIMPL	mlx/mlx_png.c	/^#define	ERR_STRUCT_INCIMPL /;"	d	file:
ERR_STRUCT_INCOMPLETE	mlx/mlx_png.c	/^#define	ERR_STRUCT_INCOMPLETE	/;"	d	file:
ERR_STRUCT_MISSCHK	mlx/mlx_png.c	/^#define	ERR_STRUCT_MISSCHK	/;"	d	file:
ERR_ZLIB	mlx/mlx_png.c	/^#define	ERR_ZLIB	/;"	d	file:
EXIT	include/config.h	/^# define EXIT /;"	d
EXPOSE_X	include/config.h	/^#  define EXPOSE_X /;"	d
EXTRAS	include/config.h	/^# define EXTRAS /;"	d
F	include/structs.h	/^enum e_identifiers { NO, SO, EA, WE, F, C };$/;"	e	enum:e_identifiers
FLOOR	include/config.h	/^# define FLOOR /;"	d
FONT_HEIGHT	mlx/mlx_int.h	/^#define	FONT_HEIGHT	/;"	d
FONT_WIDTH	mlx/mlx_int.h	/^#define FONT_WIDTH	/;"	d
FORWARD	include/structs.h	/^enum e_player_direction{ FORWARD, BACKWARD, RIGHT, LEFT, NB_DIRECTION };$/;"	e	enum:e_player_direction
GREEN	include/config.h	/^# define GREEN /;"	d
HIGH_RES	include/config.h	/^# define HIGH_RES /;"	d
INC	minilibx_linux/Makefile	/^INC	=%%%%$/;"	m
IS_BLOCK	include/config.h	/^# define IS_BLOCK /;"	d
KEY_A	include/config.h	/^#  define KEY_A /;"	d
KEY_C	include/config.h	/^#  define KEY_C /;"	d
KEY_D	include/config.h	/^#  define KEY_D /;"	d
KEY_DOWN	include/config.h	/^#  define KEY_DOWN /;"	d
KEY_E	include/config.h	/^#  define KEY_E /;"	d
KEY_ESC	include/config.h	/^#  define KEY_ESC /;"	d
KEY_F	include/config.h	/^#  define KEY_F /;"	d
KEY_IN	include/config.h	/^#  define KEY_IN /;"	d
KEY_LEFT	include/config.h	/^#  define KEY_LEFT /;"	d
KEY_M	include/config.h	/^#  define KEY_M /;"	d
KEY_OUT	include/config.h	/^#  define KEY_OUT /;"	d
KEY_P	include/config.h	/^#  define KEY_P /;"	d
KEY_Q	include/config.h	/^#  define KEY_Q /;"	d
KEY_R	include/config.h	/^#  define KEY_R /;"	d
KEY_RIGHT	include/config.h	/^#  define KEY_RIGHT /;"	d
KEY_S	include/config.h	/^#  define KEY_S /;"	d
KEY_UP	include/config.h	/^#  define KEY_UP /;"	d
KEY_W	include/config.h	/^#  define KEY_W /;"	d
KEY_X	include/config.h	/^#  define KEY_X /;"	d
KEY_Z	include/config.h	/^#  define KEY_Z /;"	d
LANE	include/config.h	/^# define LANE /;"	d
LAYOUT	include/config.h	/^# define LAYOUT /;"	d
LEFT	include/structs.h	/^enum e_player_direction{ FORWARD, BACKWARD, RIGHT, LEFT, NB_DIRECTION };$/;"	e	enum:e_player_direction
LEFT_ARROW	include/config.h	/^# define LEFT_ARROW /;"	d
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
LINE_HEIGHT	include/structs.h	/^enum e_others {LINE_WIDTH = (int)SCREEN_WIDTH \/ (int)CAM_QUALITY, LINE_HEIGHT = (int)SCREEN_HEI/;"	e	enum:e_others
LINE_WIDTH	include/structs.h	/^enum e_others {LINE_WIDTH = (int)SCREEN_WIDTH \/ (int)CAM_QUALITY, LINE_HEIGHT = (int)SCREEN_HEI/;"	e	enum:e_others
LOCALHOST	minilibx_linux/mlx_int.h	/^# define LOCALHOST /;"	d
LOGO	include/config.h	/^# define LOGO /;"	d
LOW_RES	include/config.h	/^# define LOW_RES /;"	d
MAP	include/structs.h	/^enum log_type { DATA, PARAM, CAM, PLAYER, MAP };$/;"	e	enum:log_type
MAPCASES	include/config.h	/^# define MAPCASES /;"	d
MAX_EVENT	mlx/mlx_int.h	/^#define	MAX_EVENT	/;"	d
MAX_PIXEL_NB	mlx/mlx_int.h	/^#define MAX_PIXEL_NB	/;"	d
MID_RES	include/config.h	/^# define MID_RES /;"	d
MLX_H	minilibx_linux/mlx.h	/^#define	MLX_H$/;"	d
MLX_H	mlx/mlx.h	/^#define	MLX_H$/;"	d
MLX_INT_H	minilibx_linux/mlx_int.h	/^# define MLX_INT_H$/;"	d
MLX_MAX_EVENT	minilibx_linux/mlx_int.h	/^# define MLX_MAX_EVENT /;"	d
MLX_TYPE_SHM	minilibx_linux/mlx_int.h	/^# define MLX_TYPE_SHM /;"	d
MLX_TYPE_SHM_PIXMAP	minilibx_linux/mlx_int.h	/^# define MLX_TYPE_SHM_PIXMAP /;"	d
MLX_TYPE_XIMAGE	minilibx_linux/mlx_int.h	/^# define MLX_TYPE_XIMAGE /;"	d
MlxWin	mlx/mlx_new_window.h	/^@interface MlxWin : NSOpenGLView$/;"	i
MlxWin	mlx/mlx_new_window.m	/^@implementation MlxWin$/;"	I
N	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	e	enum:e_direction
NAME	libft/Makefile	/^NAME = libft.a$/;"	m
NAME	minilibx_linux/Makefile	/^NAME		= libmlx.a$/;"	m
NAME_UNAME	minilibx_linux/Makefile	/^NAME_UNAME	= libmlx_$(UNAME).a$/;"	m
NB_DIRECTION	include/structs.h	/^enum e_player_direction{ FORWARD, BACKWARD, RIGHT, LEFT, NB_DIRECTION };$/;"	e	enum:e_player_direction
NB_TEXTURES	include/config.h	/^# define NB_TEXTURES /;"	d
NE	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	e	enum:e_direction
NEW_BG	include/config.h	/^# define NEW_BG /;"	d
NEW_GAME	include/config.h	/^# define NEW_GAME /;"	d
NO	include/structs.h	/^enum e_identifiers { NO, SO, EA, WE, F, C };$/;"	e	enum:e_identifiers
NOM	mlx/Makefile	/^NOM=libmlx.a$/;"	m
NORTH	include/structs.h	/^enum e_cardinal { NORTH, SOUTH, EAST, WEST };$/;"	e	enum:e_cardinal
NORTH_CHAR	include/config.h	/^# define NORTH_CHAR /;"	d
NSWindowEvent	mlx/mlx_new_window.h	/^@interface NSWindowEvent : NSWindow$/;"	i
NSWindowEvent	mlx/mlx_new_window.m	/^@implementation NSWindowEvent$/;"	I
NW	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	e	enum:e_direction
OBJ	minilibx_linux/Makefile	/^OBJ	= $(addprefix $(OBJ_DIR)\/,$(SRC:%.c=%.o))$/;"	m
OBJ	mlx/Makefile	/^OBJ=$(OBJ1:.m=.o)$/;"	m
OBJ1	mlx/Makefile	/^OBJ1=$(SRC:.c=.o)$/;"	m
OBJS	libft/Makefile	/^OBJS := ${SRCS:c=o}$/;"	m
OBJ_DIR	minilibx_linux/Makefile	/^OBJ_DIR = obj$/;"	m
ON_DESTROY	include/config.h	/^#  define ON_DESTROY /;"	d
ON_MOUSEDOWN	include/config.h	/^# define ON_MOUSEDOWN /;"	d
ON_MOUSEUP	include/config.h	/^# define ON_MOUSEUP /;"	d
ORIGIN_PLANE_SCALE	include/config.h	/^# define ORIGIN_PLANE_SCALE /;"	d
PARAM	include/structs.h	/^enum log_type { DATA, PARAM, CAM, PLAYER, MAP };$/;"	e	enum:log_type
PI	include/config.h	/^# define PI /;"	d
PLAYER	include/structs.h	/^enum log_type { DATA, PARAM, CAM, PLAYER, MAP };$/;"	e	enum:log_type
PLAYER_MAP_ARROW	include/config.h	/^# define PLAYER_MAP_ARROW /;"	d
PNG_HDR_SIZE	mlx/mlx_png.c	/^#define PNG_HDR_SIZE	/;"	d	file:
PNG_MAGIC_SIZE	mlx/mlx_png.c	/^#define	PNG_MAGIC_SIZE	/;"	d	file:
PROTOTYPES_H	include/prototypes.h	/^# define PROTOTYPES_H$/;"	d
RED	include/config.h	/^# define RED /;"	d
RESOLUTION	include/config.h	/^# define RESOLUTION /;"	d
RETURN	minilibx_linux/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RETURN	mlx/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RIGHT	include/structs.h	/^enum e_player_direction{ FORWARD, BACKWARD, RIGHT, LEFT, NB_DIRECTION };$/;"	e	enum:e_player_direction
RIGH_ARROW	include/config.h	/^# define RIGH_ARROW /;"	d
S	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	e	enum:e_direction
SCREEN_HEIGHT	include/config.h	/^# define SCREEN_HEIGHT /;"	d
SCREEN_WIDTH	include/config.h	/^# define SCREEN_WIDTH /;"	d
SE	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	e	enum:e_direction
SENSIVITY	include/config.h	/^# define SENSIVITY /;"	d
SETTINGS	include/config.h	/^# define SETTINGS /;"	d
SHIFT	include/config.h	/^#  define SHIFT /;"	d
SO	include/structs.h	/^enum e_identifiers { NO, SO, EA, WE, F, C };$/;"	e	enum:e_identifiers
SOUTH	include/structs.h	/^enum e_cardinal { NORTH, SOUTH, EAST, WEST };$/;"	e	enum:e_cardinal
SOUTH_CHAR	include/config.h	/^# define SOUTH_CHAR /;"	d
SPRITE	include/structs.h	/^enum e_sprite {SPRITE = -1};$/;"	e	enum:e_sprite
SPRITES_TEXTURES	include/config.h	/^# define SPRITES_TEXTURES /;"	d
SRC	minilibx_linux/Makefile	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	mlx/Makefile	/^SRC= mlx_shaders.c mlx_new_window.m mlx_init_loop.m mlx_new_image.m mlx_xpm.c mlx_int_str_to_wor/;"	m
SRCS	libft/Makefile	/^SRCS = error_msg.c ft_atoi.c ft_atoi_err.c ft_bzero.c ft_calloc.c \\$/;"	m
STEPS_PER_BOX	include/config.h	/^# define STEPS_PER_BOX /;"	d
SW	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	e	enum:e_direction
UNAME	minilibx_linux/Makefile	/^UNAME = $(shell uname)$/;"	m
UNIQ_BPP	mlx/mlx_int.h	/^#define UNIQ_BPP	/;"	d
UNITS_PER_BOX	include/config.h	/^# define UNITS_PER_BOX /;"	d
UP_ARROW	include/config.h	/^# define UP_ARROW /;"	d
W	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	e	enum:e_direction
WALL	include/config.h	/^# define WALL /;"	d
WALL_SIZE	include/config.h	/^# define WALL_SIZE /;"	d
WARN_SHM_ATTACH	minilibx_linux/mlx_int.h	/^# define WARN_SHM_ATTACH /;"	d
WE	include/structs.h	/^enum e_identifiers { NO, SO, EA, WE, F, C };$/;"	e	enum:e_identifiers
WEST	include/structs.h	/^enum e_cardinal { NORTH, SOUTH, EAST, WEST };$/;"	e	enum:e_cardinal
WEST_CHAR	include/config.h	/^# define WEST_CHAR /;"	d
X_ShmAttach	minilibx_linux/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
Z_CHUNK	mlx/mlx_png.c	/^#define	Z_CHUNK	/;"	d	file:
__anone97f5d2d0108	mlx/font.c	/^static const struct {$/;"	s	file:
_x	include/structs.h	/^enum x_or_y { _x, _y };$/;"	e	enum:x_or_y
_y	include/structs.h	/^enum x_or_y { _x, _y };$/;"	e	enum:x_or_y
a	include/structs.h	/^	unsigned int	a;$/;"	m	struct:s_key_status	typeref:typename:unsigned int
acceptsFirstResponder	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
add_img_to_ctx	mlx/mlx_new_image.m	/^mlx_img_ctx_t	*add_img_to_ctx(mlx_img_list_t *img, mlx_win_list_t *win)$/;"	f
add_obstacle	src/raycasting.c	/^void	add_obstacle(t_data *data, t_rayponse ray, char map_case, int dir, t_list **obstacles_ls)$/;"	f	typeref:typename:void
address	include/structs.h	/^	int *address;$/;"	m	struct:s_img_data	typeref:typename:int *
adress	include/structs.h	/^	char *adress;$/;"	m	struct:s_img_data	typeref:typename:char *
all	libft/Makefile	/^all: ${NAME}$/;"	t
all	minilibx_linux/Makefile	/^all	: $(NAME)$/;"	t
all	mlx/Makefile	/^all: $(NOM)$/;"	t
angle	include/structs.h	/^	int			angle;$/;"	m	struct:s_player	typeref:typename:int
appid	mlx/mlx_int.h	/^  void			*appid;$/;"	m	struct:mlx_ptr_s	typeref:typename:void *
arRay	include/structs.h	/^	t_rayponse	arRay[CAM_QUALITY];$/;"	m	struct:s_cam	typeref:typename:t_rayponse[]
back	include/structs.h	/^	unsigned int back;$/;"	m	struct:s_menu	typeref:typename:unsigned int
background	include/structs.h	/^	t_img_data		*background[20];$/;"	m	struct:s_menu	typeref:typename:t_img_data * [20]
base	assets/meters_and_bars.svg	/^     fit-margin-bottom="0">$/;"	i
beam	include/structs.h	/^	t_ray		*beam;$/;"	m	struct:s_cam	typeref:typename:t_ray *
beam	src/raycasting.c	/^void	beam(t_data *data, t_rayponse *rayponse)$/;"	f	typeref:typename:void
blocks	include/structs.h	/^	char			*blocks;$/;"	m	struct:s_data	typeref:typename:char *
bonus_textures	include/structs.h	/^	t_img_data		*bonus_textures;$/;"	m	struct:s_data	typeref:typename:t_img_data *
bpp	include/structs.h	/^	int	bpp;$/;"	m	struct:s_img_data	typeref:typename:int
bpp	minilibx_linux/mlx_int.h	/^	int				bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp	mlx/mlx_png.c	/^  int		bpp;$/;"	m	struct:png_info_s	typeref:typename:int	file:
buffer	mlx/mlx_int.h	/^  char			*buffer;$/;"	m	struct:mlx_img_list_s	typeref:typename:char *
bytes_per_pixel	mlx/font.c	/^  unsigned int 	 bytes_per_pixel; \/* 2:RGB16, 3:RGB, 4:RGBA *\/ $/;"	m	struct:__anone97f5d2d0108	typeref:typename:unsigned int	file:
c_to_i	libft/ft_atoi.c	/^static long int	c_to_i(char c)$/;"	f	typeref:typename:long int	file:
c_to_i	libft/ft_atoi_err.c	/^static long int	c_to_i(char c)$/;"	f	typeref:typename:long int	file:
cam	include/structs.h	/^	t_cam			*cam;$/;"	m	struct:s_data	typeref:typename:t_cam *
carry_negative	libft/ft_itoa.c	/^static char	*carry_negative(int *n, char *n_strn, int *len)$/;"	f	typeref:typename:char *	file:
cc	assets/meters_and_bars.svg	/^   sodipodi:docname="meters_and_bars.svg">$/;"	n	uri:http://creativecommons.org/ns#
ceiling_color	include/structs.h	/^	unsigned int	ceiling_color;$/;"	m	struct:s_image	typeref:typename:unsigned int
check	minilibx_linux/Makefile	/^check: all$/;"	t
check_closest_box	src/move_to_corner.c	/^int	check_closest_box(t_player *player)$/;"	f	typeref:typename:int
check_map	src/parse_check_map.c	/^int	check_map(t_data *data)$/;"	f	typeref:typename:int
check_map_line	src/parse_check_map.c	/^void	check_map_line(t_data *data, int y, int *nb_player)$/;"	f	typeref:typename:void
check_param_not_missing	src/parse_import.c	/^void	check_param_not_missing(t_data *data)$/;"	f	typeref:typename:void
check_update_box_pos	src/move_player.c	/^int	check_update_box_pos(t_data *data)$/;"	f	typeref:typename:int
clean	libft/Makefile	/^clean:$/;"	t
clean	minilibx_linux/Makefile	/^clean	:$/;"	t
clean	mlx/Makefile	/^clean:$/;"	t
clean_exit	src/exit_ft.c	/^void	clean_exit(t_data *data, int exit_code)$/;"	f	typeref:typename:void
clean_obstacle_behind_wall	src/raycasting.c	/^void	clean_obstacle_behind_wall(t_list **list, double distance_max)$/;"	f	typeref:typename:void
clean_useless_empty_splace	src/parse_format_map.c	/^void	clean_useless_empty_splace(char	**map)$/;"	f	typeref:typename:void
clearWin	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
clear_img	src/render_menu.c	/^void	clear_img(t_img_data *img)$/;"	f	typeref:typename:void
closeNotification:	mlx/mlx_new_window.h	/^- (void) closeNotification:(NSNotification *)note;$/;"	m	interface:NSWindowEvent
closeNotification:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
closest_in_list	src/raycasting.c	/^t_list	*closest_in_list(t_list **lst)$/;"	f	typeref:typename:t_list *
cmap	minilibx_linux/mlx_int.h	/^	Colormap	cmap;$/;"	m	struct:s_xvar	typeref:typename:Colormap
col	minilibx_linux/mlx_int.h	/^	int		col;$/;"	m	struct:s_xpm_col	typeref:typename:int
col	mlx/mlx_xpm.c	/^  int           col;$/;"	m	struct:s_xpm_col	typeref:typename:int	file:
color	minilibx_linux/mlx_int.h	/^	int		color;$/;"	m	struct:s_col_name	typeref:typename:int
color	mlx/mlx_png.c	/^  int		color;$/;"	m	struct:png_info_s	typeref:typename:int	file:
color	mlx/mlx_xpm.c	/^  int   color;$/;"	m	struct:s_col_name	typeref:typename:int	file:
complete_line_to_width	src/parse_format_map.c	/^void	complete_line_to_width(t_data *data, char **line, int len)$/;"	f	typeref:typename:void
config	include/structs.h	/^	unsigned int	config;$/;"	m	struct:s_key_status	typeref:typename:unsigned int
content	include/structs.h	/^    void            *content;$/;"	m	struct:s_list	typeref:typename:void *
control_key_press	src/key_event.c	/^void	control_key_press(int key, t_data *data)$/;"	f	typeref:typename:void
controls	include/structs.h	/^	unsigned int controls;$/;"	m	struct:s_menu	typeref:typename:unsigned int
controls_state	include/structs.h	/^	unsigned int controls_state;$/;"	m	struct:s_menu	typeref:typename:unsigned int
conv_id_param	src/parse_params.c	/^int	conv_id_param(t_data *data, int identifier_len, char *str)$/;"	f	typeref:typename:int
convert_pt_to_vec	src/vector_ft.c	/^t_vector	convert_pt_to_vec(t_point p)$/;"	f	typeref:typename:t_vector
corner_crossing	src/move_to_corner.c	/^int	corner_crossing(t_data *data)$/;"	f	typeref:typename:int
crc_table	mlx/mlx_png.c	/^unsigned long crc_table[256] = { 0, 0x77073096, 0xee0e612c, 0x990951ba, 0x76dc419, 0x706af48f, 0/;"	v	typeref:typename:unsigned long[256]
ctags	libft/Makefile	/^ctags:$/;"	t
ctx	mlx/mlx_new_window.h	/^  NSOpenGLContext	*ctx;$/;"	E	interface:MlxWin
ctx	mlx/mlx_new_window.h	/^- (NSOpenGLContext *) ctx;$/;"	m	interface:MlxWin
ctx	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
ctxNeedsUpdate	mlx/mlx_new_window.h	/^- (void) ctxNeedsUpdate;$/;"	m	interface:MlxWin
ctxNeedsUpdate	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
cub3d_render	src/cub3d_render.c	/^int	cub3d_render(t_data *data)$/;"	f	typeref:typename:int
d	include/structs.h	/^	unsigned int	d;$/;"	m	struct:s_key_status	typeref:typename:unsigned int
data	minilibx_linux/mlx_int.h	/^	char			*data;$/;"	m	struct:s_img	typeref:typename:char *
dc	assets/meters_and_bars.svg	/^   sodipodi:docname="meters_and_bars.svg">$/;"	n	uri:http://purl.org/dc/elements/1.1/
debug	libft/Makefile	/^debug: ctags$/;"	t
decrgb	minilibx_linux/mlx_int.h	/^	int			decrgb[6];$/;"	m	struct:s_xvar	typeref:typename:int[6]
defs23483	assets/meters_and_bars.svg	/^     id="defs23483">$/;"	i
degree_to_radian	src/vector_ft.c	/^double	degree_to_radian(double degree_angle)$/;"	f	typeref:typename:double
delete_first_column	src/parse_format_map.c	/^void	delete_first_column(char **map)$/;"	f	typeref:typename:void
delta_distances	include/structs.h	/^	double		delta_distances[2];$/;"	m	struct:s_ray	typeref:typename:double[2]
deminiaturizeNotification:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
depth	minilibx_linux/mlx_int.h	/^	int			depth;$/;"	m	struct:s_xvar	typeref:typename:int
depth	mlx/mlx_png.c	/^  int		depth;$/;"	m	struct:png_info_s	typeref:typename:int	file:
destroyMe	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
destroyPixelManagement	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
direction	include/structs.h	/^	t_vector	direction;$/;"	m	struct:s_player	typeref:typename:t_vector
direction	include/structs.h	/^	t_vector	direction;$/;"	m	struct:s_ray	typeref:typename:t_vector
direction_len	include/structs.h	/^	double		direction_len;$/;"	m	struct:s_ray	typeref:typename:double
display	minilibx_linux/mlx_int.h	/^	Display		*display;$/;"	m	struct:s_xvar	typeref:typename:Display *
display_log	mlx/mlx_shaders.c	/^void display_log(GLuint object, void (*param_func)(), void (*getlog_func)())$/;"	f	typeref:typename:void
dist	include/structs.h	/^	double				dist;$/;"	m	struct:s_obstacle	typeref:typename:double
dist_from_plan	include/structs.h	/^	double		dist_from_plan;$/;"	m	struct:s_rayponse	typeref:typename:double
distance_line_to_point	src/vector_ft.c	/^double	distance_line_to_point(t_vector line[2], t_point p)$/;"	f	typeref:typename:double
distance_point_to_vector	src/vector_ft.c	/^double	distance_point_to_vector(t_point point, t_point v_p1, t_point v_p2)$/;"	f	typeref:typename:double
distance_points	src/vector_ft.c	/^double	distance_points(t_point p1, t_point p2)$/;"	f	typeref:typename:double
do_flush	minilibx_linux/mlx_int.h	/^	int			do_flush;$/;"	m	struct:s_xvar	typeref:typename:int
do_loop_flush	mlx/mlx_init_loop.m	/^void do_loop_flush(CFRunLoopObserverRef observer, CFRunLoopActivity activity, void * info)$/;"	f
do_loop_hook2	mlx/mlx_init_loop.m	/^void	do_loop_hook2(CFRunLoopTimerRef observer, void * info)$/;"	f
draw_ceiling_floor_mandatory	src/cub3d_render.c	/^void	draw_ceiling_floor_mandatory(t_data *data)$/;"	f	typeref:typename:void
draw_cube	src/draw_functions.c	/^void	draw_cube(t_data *data, int size, int pos_y, int pos_x, int color)$/;"	f	typeref:typename:void
draw_image	src/load_menu.c	/^void	draw_image(t_img_data *img1, t_img_data *img2, t_point pos, int color)$/;"	f	typeref:typename:void
draw_line	src/draw_line.c	/^void	draw_line(t_data *data, t_point	*start, t_point	*end, int color)$/;"	f	typeref:typename:void
draw_mini_map	src/draw_functions.c	/^void	draw_mini_map(t_data *data, int size)$/;"	f	typeref:typename:void
draw_obstacle_texture	src/wall_textured.c	/^void	draw_obstacle_texture(t_data *data, t_point start, t_point end, int line_height, t_obstacle/;"	f	typeref:typename:void
draw_obstacles	src/wall_textured.c	/^void	draw_obstacles(t_data *data, t_point *start, t_point *end, t_list *l_obstacles)$/;"	f	typeref:typename:void
draw_player	src/draw_functions.c	/^void	draw_player(t_data *data)$/;"	f	typeref:typename:void
draw_stamina_hud	src/cub3d_render.c	/^void	draw_stamina_hud(t_data *data)$/;"	f	typeref:typename:void
draw_texture	src/wall_textured.c	/^void	draw_texture(t_data *data, t_point start, t_point end, int line_height, t_rayponse *ray)$/;"	f	typeref:typename:void
draw_vision_field	src/draw_functions.c	/^void	draw_vision_field(t_data *data, t_point minimap_position)$/;"	f	typeref:typename:void
draw_wall_textured	src/wall_textured.c	/^void	draw_wall_textured(t_data *data, int i_ray)$/;"	f	typeref:typename:void
e_cardinal	include/structs.h	/^enum e_cardinal { NORTH, SOUTH, EAST, WEST };$/;"	g
e_direction	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW=12, SE=22, NE=21 };$/;"	g
e_identifiers	include/structs.h	/^enum e_identifiers { NO, SO, EA, WE, F, C };$/;"	g
e_others	include/structs.h	/^enum e_others {LINE_WIDTH = (int)SCREEN_WIDTH \/ (int)CAM_QUALITY, LINE_HEIGHT = (int)SCREEN_HEI/;"	g
e_player_direction	include/structs.h	/^enum e_player_direction{ FORWARD, BACKWARD, RIGHT, LEFT, NB_DIRECTION };$/;"	g
e_sprite	include/structs.h	/^enum e_sprite {SPRITE = -1};$/;"	g
east_crossing	src/move_crossing_box.c	/^int	east_crossing(t_data *data)$/;"	f	typeref:typename:int
end_loop	minilibx_linux/mlx_int.h	/^	int 		end_loop;$/;"	m	struct:s_xvar	typeref:typename:int
endian	include/structs.h	/^	int endian;$/;"	m	struct:s_img_data	typeref:typename:int
error_msg	libft/error_msg.c	/^void	error_msg(char *msg)$/;"	f	typeref:typename:void
event_funct	mlx/mlx_new_window.h	/^  func_t	event_funct[MAX_EVENT];$/;"	E	interface:NSWindowEvent
exit_game	src/exit_ft.c	/^int	exit_game(t_data *data)$/;"	f	typeref:typename:int
exit_msg	src/exit_ft.c	/^void	exit_msg(t_data *data, char *msg, int ret_exit)$/;"	f	typeref:typename:void
exposeNotification:	mlx/mlx_new_window.h	/^- (void) exposeNotification:(NSNotification *)note;$/;"	m	interface:NSWindowEvent
exposeNotification:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
expose_hook	minilibx_linux/mlx_int.h	/^	int					(*expose_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
expose_param	minilibx_linux/mlx_int.h	/^	void				*expose_param;$/;"	m	struct:s_win_list	typeref:typename:void *
extras	include/structs.h	/^	unsigned int extras;$/;"	m	struct:s_menu	typeref:typename:unsigned int
extras_state	include/structs.h	/^	unsigned int extras_state;$/;"	m	struct:s_menu	typeref:typename:unsigned int
f_is_box_crossed	src/move_player.c	/^int	f_is_box_crossed(t_player *player)$/;"	f	typeref:typename:int
fclean	libft/Makefile	/^fclean: clean$/;"	t
feGaussianBlur35653	assets/meters_and_bars.svg	/^         id="feGaussianBlur35653" \/>$/;"	i
file_extention_available	src/parse_init.c	/^void	file_extention_available(t_data *data, char *fname)$/;"	f	typeref:typename:void
filter35651	assets/meters_and_bars.svg	/^       color-interpolation-filters="sRGB">$/;"	d
filter35651	assets/meters_and_bars.svg	/^       color-interpolation-filters="sRGB">$/;"	i
fix_ang	src/key_event.c	/^int	fix_ang(int a)$/;"	f	typeref:typename:int
flagsChanged:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
floor_color	include/structs.h	/^	unsigned int	floor_color;$/;"	m	struct:s_image	typeref:typename:unsigned int
flushGLContext	mlx/mlx_new_window.h	/^- (void) flushGLContext;$/;"	m	interface:MlxWin
flushGLContext	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
font	mlx/mlx_int.h	/^  mlx_img_list_t	*font;$/;"	m	struct:mlx_ptr_s	typeref:typename:mlx_img_list_t *
font_atlas	mlx/font.c	/^} font_atlas = {$/;"	v	typeref:typename:const struct __anone97f5d2d0108
font_fshader	mlx/mlx_int.h	/^  GLuint	font_fshader;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
font_program	mlx/mlx_int.h	/^  GLuint	font_program;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
font_vshader	mlx/mlx_int.h	/^  GLuint	font_vshader;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
format	minilibx_linux/mlx_int.h	/^	int				format;$/;"	m	struct:s_img	typeref:typename:int
format_map	src/parse_format_map.c	/^void	format_map(t_data *data)$/;"	f	typeref:typename:void
ft_append_tab	src/matrix.c	/^char	**ft_append_tab(char **matrix, char *str)$/;"	f	typeref:typename:char **
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str0)$/;"	f	typeref:typename:int
ft_atoi_err	libft/ft_atoi_err.c	/^int	ft_atoi_err(char *str)$/;"	f	typeref:typename:int
ft_bzero	libft/ft_bzero.c	/^void	*ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void *
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f	typeref:typename:void *
ft_free_split	libft/ft_free_split.c	/^void	ft_free_split(char ***tab)$/;"	f	typeref:typename:void
ft_get_next_wd	libft/ft_get_next_wd.c	/^char	*ft_get_next_wd(char *sentence, char sep)$/;"	f	typeref:typename:char *
ft_intlen	libft/ft_itoa.c	/^static int	ft_intlen(int n)$/;"	f	typeref:typename:int	file:
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_isspace	libft/ft_atoi.c	/^static int	ft_isspace(const char c)$/;"	f	typeref:typename:int	file:
ft_isspace	libft/ft_atoi_err.c	/^static int	ft_isspace(const char c)$/;"	f	typeref:typename:int	file:
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	src/ft_list.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	src/ft_list.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	src/ft_list.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	src/ft_list.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstiter	src/ft_list.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	src/ft_list.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	src/ft_list.c	/^	*ft_lstmap(t_list *lst, void *(*f)(void*), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	src/ft_list.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	src/ft_list.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_matrixlen	src/matrix.c	/^int	ft_matrixlen(char **matrix)$/;"	f	typeref:typename:int
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *str0, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, unsigned int len)$/;"	f	typeref:typename:void *
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f	typeref:typename:void *
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f	typeref:typename:void *
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_realloc_cat	src/get_next_line.c	/^static char	*ft_realloc_cat(char *line, char c, int *len)$/;"	f	typeref:typename:char *	file:
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *str, int c)$/;"	f	typeref:typename:char *
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f	typeref:typename:char *
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f	typeref:typename:void
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dstsize)$/;"	f	typeref:typename:size_t
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t dstsize)$/;"	f	typeref:typename:size_t
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f	typeref:typename:size_t
ft_strlen_char	libft/ft_strlen_char.c	/^size_t	ft_strlen_char(char *str, char sep)$/;"	f	typeref:typename:size_t
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnlen	libft/ft_strlcat.c	/^static unsigned int	ft_strnlen(char *s, size_t max)$/;"	f	typeref:typename:unsigned int	file:
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *str, const char *ndl, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
ft_wd_count	libft/ft_wd_count.c	/^int	ft_wd_count(char *str, char sep)$/;"	f	typeref:typename:int
func_t	mlx/mlx_int.h	/^typedef int (*func_t)();$/;"	t	typeref:typename:int (*)()
g34605	assets/meters_and_bars.svg	/^         id="g34605">$/;"	i
g34670	assets/meters_and_bars.svg	/^         id="g34670">$/;"	i
g34684	assets/meters_and_bars.svg	/^         id="g34684">$/;"	i
g34691	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,0,75.97955)">$/;"	i
g34703	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,-2.1475938,85.218337)">$/;"	i
g34711	assets/meters_and_bars.svg	/^         transform="translate(-105.67679,89.218909)">$/;"	i
g34727	assets/meters_and_bars.svg	/^         id="g34727">$/;"	i
g34739	assets/meters_and_bars.svg	/^         id="g34739">$/;"	i
g34747	assets/meters_and_bars.svg	/^         id="g34747">$/;"	i
g34763	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,254.4406,70.63416)">$/;"	i
g34775	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,252.293,79.872946)">$/;"	i
g34783	assets/meters_and_bars.svg	/^         transform="translate(148.76381,83.873518)">$/;"	i
g34799	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-363.77558)">$/;"	i
g34819	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-366.98448)">$/;"	i
g34839	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-366.98448)">$/;"	i
g34859	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-373.40227)">$/;"	i
g34954	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-366.98448)">$/;"	i
g35606	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-366.98448)">$/;"	i
g35631	assets/meters_and_bars.svg	/^         id="g35631">$/;"	i
g35792	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-145.08274,-368.16003)">$/;"	i
g35831	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-369.12375)">$/;"	i
g35958	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-162.29492)">$/;"	i
g35960	assets/meters_and_bars.svg	/^         id="g35960">$/;"	i
g35970	assets/meters_and_bars.svg	/^         id="g35970">$/;"	i
g35978	assets/meters_and_bars.svg	/^         id="g35978">$/;"	i
g36004	assets/meters_and_bars.svg	/^       id="g36004">$/;"	i
g36006	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,0,75.97955)">$/;"	i
g36016	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,-2.1475938,85.218337)">$/;"	i
g36024	assets/meters_and_bars.svg	/^         transform="translate(-105.67679,89.218909)">$/;"	i
g49995	assets/meters_and_bars.svg	/^         id="g49995">$/;"	i
g49999	assets/meters_and_bars.svg	/^         id="g49999">$/;"	i
g50011	assets/meters_and_bars.svg	/^         id="g50011">$/;"	i
g50026	assets/meters_and_bars.svg	/^       id="g50026" \/>$/;"	i
g50032	assets/meters_and_bars.svg	/^       transform="matrix(-0.32233476,-0.94662575,0.94662575,-0.32233476,-1226.1524,686.46826)" \//;"	i
g50038	assets/meters_and_bars.svg	/^       id="g50038" \/>$/;"	i
g50044	assets/meters_and_bars.svg	/^       transform="matrix(0.73192899,-0.68138092,0.68138092,0.73192899,-631.15732,-40.702835)" \//;"	i
g50050	assets/meters_and_bars.svg	/^       id="g50050" \/>$/;"	i
g50065	assets/meters_and_bars.svg	/^       transform="matrix(1.8978933,0,0,1.8978933,-179.0731,-933.33386)">$/;"	i
g50084	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,371.67973,23.765885)">$/;"	i
g50086	assets/meters_and_bars.svg	/^         id="g50086">$/;"	i
g50096	assets/meters_and_bars.svg	/^         id="g50096">$/;"	i
g50104	assets/meters_and_bars.svg	/^         id="g50104">$/;"	i
g50130	assets/meters_and_bars.svg	/^       id="g50130">$/;"	i
g50132	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,0,75.97955)">$/;"	i
g50142	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,-2.1475938,85.218337)">$/;"	i
g50150	assets/meters_and_bars.svg	/^         transform="translate(-105.67679,89.218909)">$/;"	i
g50166	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-333.22883)">$/;"	i
g50211	assets/meters_and_bars.svg	/^         id="g50211">$/;"	i
g50216	assets/meters_and_bars.svg	/^         id="g50216">$/;"	i
g50224	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-142.8137,-634.25401)">$/;"	i
g50282-9	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,991.80955,-7.7865216)">$/;"	i
g50292-4	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,989.66196,1.4522654)">$/;"	i
g50300-3	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50333-5	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-923.12715,-361.59183)">$/;"	i
g50632-9	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50643-8	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50654-2	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50665-7	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50685-8	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50705-7	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50826-1	assets/meters_and_bars.svg	/^       transform="matrix(2.1731701,0,0,2.1731701,788.30626,-173.02033)">$/;"	i
g50842-0	assets/meters_and_bars.svg	/^       id="g50842-0">$/;"	i
g50856-5	assets/meters_and_bars.svg	/^       id="g50856-5">$/;"	i
g50870-4	assets/meters_and_bars.svg	/^       id="g50870-4">$/;"	i
g50884-4	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-938.87675,-273.86443)">$/;"	i
g50894-5	assets/meters_and_bars.svg	/^       transform="matrix(0.20136727,0,0,2.0010379,478.73103,-273.86443)">$/;"	i
g50904-4	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-698.50098,-273.86443)">$/;"	i
g50926-2	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50942-2	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50954-1	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50966-8	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50978-1	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50988-0	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g50998-3	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g51052	assets/meters_and_bars.svg	/^       transform="matrix(2.1731701,0,0,2.1731701,788.30626,241.069)">$/;"	i
g51068	assets/meters_and_bars.svg	/^       id="g51068">$/;"	i
g51080	assets/meters_and_bars.svg	/^       id="g51080">$/;"	i
g51092	assets/meters_and_bars.svg	/^       id="g51092">$/;"	i
g51104	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-938.87675,140.22486)">$/;"	i
g51114	assets/meters_and_bars.svg	/^       transform="matrix(0.20136727,0,0,2.0010379,478.73103,140.22486)">$/;"	i
g51124	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-698.50098,140.22486)">$/;"	i
g51142	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g51158	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g51170	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g51182	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g51194	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g51204	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g51214	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g52069	assets/meters_and_bars.svg	/^       transform="matrix(2.1731701,0,0,2.1731701,788.30626,617.22173)">$/;"	i
g52085	assets/meters_and_bars.svg	/^       id="g52085">$/;"	i
g52097	assets/meters_and_bars.svg	/^       id="g52097">$/;"	i
g52109	assets/meters_and_bars.svg	/^       id="g52109">$/;"	i
g52121	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-938.87675,516.37763)">$/;"	i
g52131	assets/meters_and_bars.svg	/^       transform="matrix(0.20136727,0,0,2.0010379,478.73103,516.37763)">$/;"	i
g52141	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-698.50098,516.37763)">$/;"	i
g52159	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g52175	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g52187	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g52199	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g52211	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g52221	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g52231	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g52249	assets/meters_and_bars.svg	/^       transform="matrix(2.1731701,0,0,2.1731701,788.30626,989.26092)">$/;"	i
g52265	assets/meters_and_bars.svg	/^       id="g52265">$/;"	i
g52277	assets/meters_and_bars.svg	/^       id="g52277">$/;"	i
g52289	assets/meters_and_bars.svg	/^       id="g52289">$/;"	i
g52301	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-938.87675,888.41682)">$/;"	i
g52311	assets/meters_and_bars.svg	/^       transform="matrix(0.20136727,0,0,2.0010379,478.73103,888.41682)">$/;"	i
g52321	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-698.50098,888.41682)">$/;"	i
g53131	assets/meters_and_bars.svg	/^       id="g53131">$/;"	i
g53133	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,0,-7.4085449)">$/;"	i
g53143	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,-2.1475938,1.8302416)">$/;"	i
g53151	assets/meters_and_bars.svg	/^         transform="translate(-105.67679,5.8308141)">$/;"	i
g53167	assets/meters_and_bars.svg	/^       id="g53167">$/;"	i
g53169	assets/meters_and_bars.svg	/^         id="g53169">$/;"	i
g53179	assets/meters_and_bars.svg	/^         id="g53179">$/;"	i
g53187	assets/meters_and_bars.svg	/^         id="g53187">$/;"	i
g53203	assets/meters_and_bars.svg	/^       id="g53203">$/;"	i
g53205	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,254.4406,-10.08124)">$/;"	i
g53215	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,252.293,-0.84245327)">$/;"	i
g53223	assets/meters_and_bars.svg	/^         transform="translate(148.76381,3.1581187)">$/;"	i
g53239	assets/meters_and_bars.svg	/^       id="g53239">$/;"	i
g53241	assets/meters_and_bars.svg	/^         id="g53241">$/;"	i
g53251	assets/meters_and_bars.svg	/^         id="g53251">$/;"	i
g53259	assets/meters_and_bars.svg	/^         id="g53259">$/;"	i
g53287	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g53295	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g53301	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g53305	assets/meters_and_bars.svg	/^         transform="matrix(1.01223,0,0,1.01223,1.3628116,-3.2609599)">$/;"	i
g53313	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g53331	assets/meters_and_bars.svg	/^       id="g53331">$/;"	i
g53333	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,0,75.97955)">$/;"	i
g53343	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,-2.1475938,85.218337)">$/;"	i
g53351	assets/meters_and_bars.svg	/^         transform="translate(-105.67679,89.218909)">$/;"	i
g53369	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-745.13553,-157.6177)">$/;"	i
g53371	assets/meters_and_bars.svg	/^         id="g53371">$/;"	i
g53381	assets/meters_and_bars.svg	/^         id="g53381">$/;"	i
g53389	assets/meters_and_bars.svg	/^         id="g53389">$/;"	i
g53405	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g53417	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g53431	assets/meters_and_bars.svg	/^         id="g53431">$/;"	i
g53437	assets/meters_and_bars.svg	/^         transform="matrix(0.01695772,-0.99985621,0.99985621,0.01695772,-1142.8225,401.30144)">$/;"	i
g53443	assets/meters_and_bars.svg	/^         transform="matrix(-0.87587129,-0.4825448,0.4825448,-0.87587129,-1066.5799,1290.0061)">$/;"	i
g53451	assets/meters_and_bars.svg	/^       id="g53451">$/;"	i
g53453	assets/meters_and_bars.svg	/^         transform="matrix(1,0,0,1.0262104,0,75.97955)">$/;"	i
g53463	assets/meters_and_bars.svg	/^         transform="matrix(0.9941126,0,0,0.99046005,-2.1475938,85.218337)">$/;"	i
g53471	assets/meters_and_bars.svg	/^         transform="translate(-105.67679,89.218909)">$/;"	i
g53489	assets/meters_and_bars.svg	/^       transform="matrix(2.0010379,0,0,2.0010379,-1258.5593,28.443102)">$/;"	i
g53491	assets/meters_and_bars.svg	/^         id="g53491">$/;"	i
g53501	assets/meters_and_bars.svg	/^         id="g53501">$/;"	i
g53509	assets/meters_and_bars.svg	/^         id="g53509">$/;"	i
g53525	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90">$/;"	i
g53527	assets/meters_and_bars.svg	/^         transform="matrix(0.89091046,0,0,1,9.6620507,99.653316)">$/;"	i
g53535	assets/meters_and_bars.svg	/^         transform="matrix(0.89091046,0,0,1,7.0428051,99.786951)">$/;"	i
game_state	include/structs.h	/^	unsigned int game_state;$/;"	m	struct:s_menu	typeref:typename:unsigned int
gc	minilibx_linux/mlx_int.h	/^	GC					gc;$/;"	m	struct:s_win_list	typeref:typename:GC
gc	minilibx_linux/mlx_int.h	/^	GC				gc;$/;"	m	struct:s_img	typeref:typename:GC
get_dist_from_plan	src/raycasting_utils.c	/^double	get_dist_from_plan(t_data *data, t_rayponse *rayponse)$/;"	f	typeref:typename:double
get_identifier	src/parse_params.c	/^int	get_identifier(t_data *data, char *str)$/;"	f	typeref:typename:int
get_identifiers_ls	src/parse_params.c	/^char	**get_identifiers_ls(int identifier_len)$/;"	f	typeref:typename:char **
get_img_size	src/load_menu.c	/^t_point get_img_size(char *path)$/;"	f	typeref:typename:t_point
get_map_width	src/parse_format_map.c	/^int	get_map_width(char **map)$/;"	f	typeref:typename:int
get_mouse_button	mlx/mlx_new_window.m	/^int get_mouse_button(NSEventType eventtype)$/;"	f
get_next_case	src/move_to_corner.c	/^char	get_next_case(char **map, t_point map_point, int direction)$/;"	f	typeref:typename:char
get_next_line	src/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_side_hit	src/raycasting_utils.c	/^int	get_side_hit(t_data *data, int index_closest)$/;"	f	typeref:typename:int
get_smallest_index	src/move_to_corner.c	/^int	get_smallest_index(double wall_distance[4])$/;"	f	typeref:typename:int
get_texture_pix	src/wall_textured.c	/^unsigned int	get_texture_pix(t_img_data *t, t_point pix)$/;"	f	typeref:typename:unsigned int
get_wallX	src/wall_textured.c	/^int	get_wallX(t_rayponse *ray)$/;"	f	typeref:typename:int
glsl	mlx/mlx_new_window.h	/^  glsl_info_t		glsl;$/;"	E	interface:MlxWin
glsl_info_s	mlx/mlx_int.h	/^typedef struct	glsl_info_s$/;"	s
glsl_info_t	mlx/mlx_int.h	/^} glsl_info_t;$/;"	t	typeref:struct:glsl_info_s
graphics_render	src/cub3d_render.c	/^int	graphics_render(t_data *data)$/;"	f	typeref:typename:int
grid24034	assets/meters_and_bars.svg	/^       originy="5102.4144px" \/>$/;"	i
height	include/structs.h	/^	int		height;$/;"	m	struct:s_window	typeref:typename:int
height	include/structs.h	/^	int height;$/;"	m	struct:s_img_data	typeref:typename:int
height	minilibx_linux/mlx_int.h	/^	int				height;$/;"	m	struct:s_img	typeref:typename:int
height	mlx/font.c	/^  unsigned int 	 height;$/;"	m	struct:__anone97f5d2d0108	typeref:typename:unsigned int	file:
height	mlx/mlx_int.h	/^  int			height;$/;"	m	struct:mlx_img_list_s	typeref:typename:int
height	mlx/mlx_png.c	/^  unsigned int	height;$/;"	m	struct:png_info_s	typeref:typename:unsigned int	file:
high_res	include/structs.h	/^	unsigned int high_res;$/;"	m	struct:s_menu	typeref:typename:unsigned int
highlight	include/structs.h	/^	unsigned int highlight;$/;"	m	struct:s_menu	typeref:typename:unsigned int
hit_point	include/structs.h	/^	t_point		hit_point;$/;"	m	struct:s_rayponse	typeref:typename:t_point
hook	minilibx_linux/mlx_int.h	/^	int		(*hook)();$/;"	m	struct:s_event_list	typeref:typename:int (*)()
hooks	minilibx_linux/mlx_int.h	/^	t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list	typeref:typename:t_event_list[]
image	include/structs.h	/^	t_image			*image;$/;"	m	struct:s_data	typeref:typename:t_image *
image	minilibx_linux/mlx_int.h	/^	XImage			*image;$/;"	m	struct:s_img	typeref:typename:XImage *
image_fshader	mlx/mlx_int.h	/^  GLuint	image_fshader;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
image_program	mlx/mlx_int.h	/^  GLuint	image_program;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
image_vshader	mlx/mlx_int.h	/^  GLuint	image_vshader;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
img	include/structs.h	/^	t_img_data		*img;$/;"	m	struct:s_data	typeref:typename:t_img_data *
img	include/structs.h	/^	void *img;$/;"	m	struct:s_img_data	typeref:typename:void *
img	mlx/mlx_int.h	/^  mlx_img_list_t	*img;$/;"	m	struct:mlx_img_ctx_s	typeref:typename:mlx_img_list_t *
img_list	mlx/mlx_int.h	/^  mlx_img_ctx_t		*img_list;$/;"	m	struct:mlx_win_list_s	typeref:typename:mlx_img_ctx_t *
img_list	mlx/mlx_int.h	/^  mlx_img_list_t	*img_list;$/;"	m	struct:mlx_ptr_s	typeref:typename:mlx_img_list_t *
import_bonus_textures	src/bonus_textures.c	/^void	import_bonus_textures(t_data *data)$/;"	f	typeref:typename:void
import_param	src/parse_import.c	/^void	import_param(t_data *data, int identifier, char *line)$/;"	f	typeref:typename:void
import_params	src/parse_import.c	/^int	import_params(t_data *data)$/;"	f	typeref:typename:int
import_sprites_textures	src/bonus_textures.c	/^void	import_sprites_textures(t_data *data)$/;"	f	typeref:typename:void
import_texture_path	src/parse_import.c	/^void	import_texture_path(t_data *data, int identifier, char *line)$/;"	f	typeref:typename:void
import_textures	src/parse_import.c	/^void	import_textures(t_data *data)$/;"	f	typeref:typename:void
init	include/structs.h	/^	void	*init;$/;"	m	struct:s_window	typeref:typename:void *
initWithContentRect:styleMask:backing:defer:	mlx/mlx_new_window.h	/^- (NSWindowEvent *) initWithContentRect:(NSRect)rect styleMask:(NSUInteger)winstyle backing:(NSB/;"	m	interface:NSWindowEvent
initWithContentRect:styleMask:backing:defer:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
initWithRect:andTitle:pfaAttrs:	mlx/mlx_new_window.h	/^- (id) initWithRect: (NSRect)rect andTitle: (NSString *)title pfaAttrs: (NSOpenGLPixelFormatAttr/;"	m	interface:MlxWin
initWithRect:andTitle:pfaAttrs:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
init_Xvar	src/wall_textured.c	/^void   init_Xvar(t_point *start, t_point *end, int *line_width, int i_ray)$/;"	f	typeref:typename:void
init_Yvar	src/wall_textured.c	/^void	init_Yvar(t_point *start, t_point *end, int *line_height, int distance)$/;"	f	typeref:typename:void
init_cam_vector	src/camera_ft.c	/^void	init_cam_vector(t_data *data)$/;"	f	typeref:typename:void
init_f_c_color	src/parse_file_colors.c	/^unsigned int	init_f_c_color(t_data *data, char *line)$/;"	f	typeref:typename:unsigned int
init_fd	src/parse_init.c	/^void	init_fd(t_data *data, int *fd, char *fname)$/;"	f	typeref:typename:void
init_key_status	src/key_event.c	/^void	init_key_status(t_data *data)$/;"	f	typeref:typename:void
init_null	src/parse_init.c	/^void	init_null(t_data *data, int *map_parse)$/;"	f	typeref:typename:void
init_player	src/parse_init.c	/^void	init_player(t_data *data, int x, int y, int *is_player)$/;"	f	typeref:typename:void
inkscape	assets/meters_and_bars.svg	/^   sodipodi:docname="meters_and_bars.svg">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
interlace	mlx/mlx_png.c	/^  int		interlace;$/;"	m	struct:png_info_s	typeref:typename:int	file:
is_NSEW	src/parse_check_map.c	/^int	is_NSEW(char c)$/;"	f	typeref:typename:int
is_blank_char	src/str_ft.c	/^int	is_blank_char(char c)$/;"	f	typeref:typename:int
is_blank_line	src/str_ft.c	/^int	is_blank_line(char *line)$/;"	f	typeref:typename:int
is_block	src/move_to_corner.c	/^int	is_block(t_data *data, char c)$/;"	f	typeref:typename:int
is_border	src/parse_check_map.c	/^int	is_border(t_data *data, int x, int y, int matrix_len)$/;"	f	typeref:typename:int
is_first_column_empty	src/parse_format_map.c	/^int	is_first_column_empty(char **map)$/;"	f	typeref:typename:int
is_map_line	src/str_ft.c	/^int	is_map_line(t_data *data, char *str)$/;"	f	typeref:typename:int
is_mapcase	src/parse_check_map.c	/^int	is_mapcase(t_data *data, char c)$/;"	f	typeref:typename:int
is_trimable	libft/ft_strtrim.c	/^static int	is_trimable(char c, char *trimset)$/;"	f	typeref:typename:int	file:
keyDown:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
keyUp:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
key_game	src/keys_game.c	/^int	key_game(int key, t_data *data)$/;"	f	typeref:typename:int
key_hook	minilibx_linux/mlx_int.h	/^	int					(*key_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
key_param	minilibx_linux/mlx_int.h	/^	void				*key_param;$/;"	m	struct:s_win_list	typeref:typename:void *
key_press	src/key_event.c	/^int	key_press(int key, t_data *data)$/;"	f	typeref:typename:int
key_realese	src/key_event.c	/^int	key_realese(int key, t_data *data)$/;"	f	typeref:typename:int
key_status	include/structs.h	/^	t_key_status	*key_status;$/;"	m	struct:s_data	typeref:typename:t_key_status *
keyflag	mlx/mlx_new_window.h	/^  int		keyflag;$/;"	E	interface:NSWindowEvent
keyrepeat	mlx/mlx_new_window.h	/^  int		keyrepeat;$/;"	E	interface:NSWindowEvent
layer1	assets/meters_and_bars.svg	/^     transform="translate(2063.3101,-97.134478)">$/;"	i
left	include/structs.h	/^	unsigned int	left;$/;"	m	struct:s_key_status	typeref:typename:unsigned int
len	include/structs.h	/^	double		len;$/;"	m	struct:s_rayponse	typeref:typename:double
len_overflow	src/raycasting_utils.c	/^int	len_overflow(int len)$/;"	f	typeref:typename:int
line	include/structs.h	/^	char			*line;$/;"	m	struct:s_data	typeref:typename:char *
line_height	include/structs.h	/^	int line_height;$/;"	m	struct:s_img_data	typeref:typename:int
line_len	include/structs.h	/^	int				line_len;$/;"	m	struct:s_image	typeref:typename:int
line_len	include/structs.h	/^	int line_len;$/;"	m	struct:s_img_data	typeref:typename:int
line_split	include/structs.h	/^	char			**line_split;$/;"	m	struct:s_data	typeref:typename:char **
load_images	src/load_menu.c	/^int	load_images(t_data *data, t_img_data *image, char *path)$/;"	f	typeref:typename:int
load_menu	src/load_menu.c	/^void load_menu(t_data *data)$/;"	f	typeref:typename:void
load_window	src/load_window.c	/^int	load_window(t_data *data)$/;"	f	typeref:typename:int
loc_font_atlassize	mlx/mlx_int.h	/^  GLint		loc_font_atlassize;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_font_color	mlx/mlx_int.h	/^  GLint		loc_font_color;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_font_posinatlas	mlx/mlx_int.h	/^  GLint		loc_font_posinatlas;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_font_posinwin	mlx/mlx_int.h	/^  GLint		loc_font_posinwin;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_font_position	mlx/mlx_int.h	/^  GLint		loc_font_position;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_font_texture	mlx/mlx_int.h	/^  GLint		loc_font_texture;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_font_winhalfsize	mlx/mlx_int.h	/^  GLint		loc_font_winhalfsize;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_image_pos	mlx/mlx_int.h	/^  GLint		loc_image_pos;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_image_position	mlx/mlx_int.h	/^  GLint		loc_image_position;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_image_size	mlx/mlx_int.h	/^  GLint		loc_image_size;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_image_texture	mlx/mlx_int.h	/^  GLint		loc_image_texture;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_image_winhalfsize	mlx/mlx_int.h	/^  GLint		loc_image_winhalfsize;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_pixel_position	mlx/mlx_int.h	/^  GLint		loc_pixel_position;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_pixel_texture	mlx/mlx_int.h	/^  GLint		loc_pixel_texture;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
loc_pixel_winhalfsize	mlx/mlx_int.h	/^  GLint		loc_pixel_winhalfsize;$/;"	m	struct:glsl_info_s	typeref:typename:GLint
log_type	include/structs.h	/^enum log_type { DATA, PARAM, CAM, PLAYER, MAP };$/;"	g
loop_hook	minilibx_linux/mlx_int.h	/^	int			(*loop_hook)();$/;"	m	struct:s_xvar	typeref:typename:int (*)()
loop_hook	mlx/mlx_int.h	/^  void			(*loop_hook)(void *);$/;"	m	struct:mlx_ptr_s	typeref:typename:void (*)(void *)
loop_hook_data	mlx/mlx_int.h	/^  void			*loop_hook_data;$/;"	m	struct:mlx_ptr_s	typeref:typename:void *
loop_param	minilibx_linux/mlx_int.h	/^	void		*loop_param;$/;"	m	struct:s_xvar	typeref:typename:void *
loop_timer	mlx/mlx_int.h	/^  void			*loop_timer;$/;"	m	struct:mlx_ptr_s	typeref:typename:void *
low_res	include/structs.h	/^	unsigned int low_res;$/;"	m	struct:s_menu	typeref:typename:unsigned int
magic	mlx/mlx_png.c	/^unsigned char magic[PNG_MAGIC_SIZE] = {137, 80, 78, 71, 13, 10, 26, 10};$/;"	v	typeref:typename:unsigned char[]
main	src/main.c	/^int	main(int argc, char *argv[])$/;"	f	typeref:typename:int
main_loop_active	mlx/mlx_int.h	/^  int			main_loop_active;$/;"	m	struct:mlx_ptr_s	typeref:typename:int
make_point	src/vector_ft.c	/^t_point	make_point(int x, int y)$/;"	f	typeref:typename:t_point
make_str	libft/ft_itoa.c	/^static void	make_str(int *n, char *n_str, int i)$/;"	f	typeref:typename:void	file:
make_tab	libft/ft_split.c	/^static char	**make_tab(char **returned, char const *s, char c, unsigned int nb_wd)$/;"	f	typeref:typename:char **	file:
malloc_data	src/main.c	/^ t_data	*malloc_data(void)$/;"	f	typeref:typename:t_data *
map	include/structs.h	/^	char			**map;$/;"	m	struct:s_data	typeref:typename:char **
map	include/structs.h	/^	int map;$/;"	m	struct:s_sprite	typeref:typename:int
map_cases	include/structs.h	/^	char			*map_cases;$/;"	m	struct:s_data	typeref:typename:char *
map_pos	include/structs.h	/^	t_vector	map_pos;$/;"	m	struct:s_player	typeref:typename:t_vector
map_position_in_front_of_player	src/bonus_utils.c	/^t_point	map_position_in_front_of_player(t_player *player)$/;"	f	typeref:typename:t_point
map_size_in_units	include/structs.h	/^	int			map_size_in_units[2];$/;"	m	struct:s_data	typeref:typename:int[2]
mask	minilibx_linux/mlx_int.h	/^	int		mask;$/;"	m	struct:s_event_list	typeref:typename:int
menu	include/structs.h	/^	t_menu			*menu;$/;"	m	struct:s_data	typeref:typename:t_menu *
menu_enter_key	src/keys_menu.c	/^void	menu_enter_key(t_data *data)$/;"	f	typeref:typename:void
menu_key_press	src/keys_menu.c	/^void	menu_key_press(int key, t_data *data)$/;"	f	typeref:typename:void
menu_s_key	src/keys_menu.c	/^void	menu_s_key(t_data *data)$/;"	f	typeref:typename:void
menu_state	include/structs.h	/^	unsigned int menu_state;$/;"	m	struct:s_menu	typeref:typename:unsigned int
menu_w_key	src/keys_menu.c	/^void	menu_w_key(t_data *data)$/;"	f	typeref:typename:void
metadata23486	assets/meters_and_bars.svg	/^     id="metadata23486">$/;"	i
mid_res	include/structs.h	/^	unsigned int mid_res;$/;"	m	struct:s_menu	typeref:typename:unsigned int
minimap	include/structs.h	/^	unsigned int minimap;$/;"	m	struct:s_menu	typeref:typename:unsigned int
minimap_render	src/cub3d_render.c	/^int	minimap_render(t_data *data)$/;"	f	typeref:typename:int
mipng_crc	mlx/mlx_png.c	/^int	mipng_crc(unsigned char *ptr, int len)$/;"	f	typeref:typename:int
mipng_data	mlx/mlx_png.c	/^int	mipng_data(mlx_img_list_t *img, unsigned char *dat, png_info_t *pi)$/;"	f	typeref:typename:int
mipng_defilter	mlx/mlx_png.c	/^unsigned char (*(mipng_defilter[]))(unsigned char *buff, int pos, int a, int b, int c) =$/;"	v	typeref:typename:unsigned char (* ([]))(unsigned char * buff,int pos,int a,int b,int c)
mipng_defilter_average	mlx/mlx_png.c	/^unsigned char mipng_defilter_average(unsigned char *buff, int pos, int a, int b, int c)$/;"	f	typeref:typename:unsigned char
mipng_defilter_none	mlx/mlx_png.c	/^unsigned char mipng_defilter_none(unsigned char *buff, int pos, int a, int b, int c)$/;"	f	typeref:typename:unsigned char
mipng_defilter_paeth	mlx/mlx_png.c	/^unsigned char mipng_defilter_paeth(unsigned char *buff, int pos, int a, int b, int c)$/;"	f	typeref:typename:unsigned char
mipng_defilter_sub	mlx/mlx_png.c	/^unsigned char mipng_defilter_sub(unsigned char *buff, int pos, int a, int b, int c)$/;"	f	typeref:typename:unsigned char
mipng_defilter_up	mlx/mlx_png.c	/^unsigned char mipng_defilter_up(unsigned char *buff, int pos, int a, int b, int c)$/;"	f	typeref:typename:unsigned char
mipng_err	mlx/mlx_png.c	/^char *(mipng_err[]) =$/;"	v	typeref:typename:char * ([])
mipng_fill_img	mlx/mlx_png.c	/^int	mipng_fill_img(mlx_img_list_t *img, unsigned char *buf, png_info_t *pi)$/;"	f	typeref:typename:int
mipng_is_type	mlx/mlx_png.c	/^int	mipng_is_type(unsigned char *ptr, char *type)$/;"	f	typeref:typename:int
mipng_magic	mlx/mlx_png.c	/^int	mipng_magic(unsigned char *ptr, int size)$/;"	f	typeref:typename:int
mipng_structure	mlx/mlx_png.c	/^int	mipng_structure(unsigned char *ptr, int size, unsigned char **hdr, unsigned char **dat)$/;"	f	typeref:typename:int
mipng_verif_hdr	mlx/mlx_png.c	/^int	mipng_verif_hdr(unsigned char *hdr, png_info_t *pi)$/;"	f	typeref:typename:int
mlx	include/structs.h	/^	void	*mlx;$/;"	m	struct:s_window	typeref:typename:void *
mlx_X_error	minilibx_linux/mlx_new_image.c	/^int	mlx_X_error;$/;"	v	typeref:typename:int
mlx_clear_window	minilibx_linux/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_clear_window	mlx/mlx_new_window.m	/^void mlx_clear_window(mlx_ptr_t *mlx_ptr, mlx_win_list_t *win_ptr)$/;"	f
mlx_col_name	minilibx_linux/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name[]
mlx_col_name	mlx/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name[]
mlx_destroy_display	minilibx_linux/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_destroy_image	minilibx_linux/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f	typeref:typename:int
mlx_destroy_image	mlx/mlx_new_image.m	/^int     mlx_destroy_image(mlx_ptr_t *mlx_ptr, mlx_img_list_t *img_todel)$/;"	f
mlx_destroy_window	minilibx_linux/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_destroy_window	mlx/mlx_new_window.m	/^int     mlx_destroy_window(mlx_ptr_t *mlx_ptr, mlx_win_list_t *win_to_del)$/;"	f
mlx_do_key_autorepeatoff	minilibx_linux/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_key_autorepeatoff	mlx/mlx_new_window.m	/^int     mlx_do_key_autorepeatoff(mlx_ptr_t *mlx_ptr)$/;"	f
mlx_do_key_autorepeaton	minilibx_linux/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_key_autorepeaton	mlx/mlx_new_window.m	/^int     mlx_do_key_autorepeaton(mlx_ptr_t *mlx_ptr)$/;"	f
mlx_do_sync	minilibx_linux/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_sync	mlx/mlx_init_loop.m	/^int     mlx_do_sync(mlx_ptr_t *mlx_ptr)$/;"	f
mlx_expose_hook	minilibx_linux/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_expose_hook	mlx/mlx_new_window.m	/^void mlx_expose_hook(mlx_win_list_t *win_ptr, int (*funct_ptr)(), void *param)$/;"	f
mlx_ext_fullscreen	minilibx_linux/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list *win, int fullscreen)$/;"	f	typeref:typename:int
mlx_flush_event	minilibx_linux/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_get_color_value	minilibx_linux/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_get_color_value	mlx/mlx_new_image.m	/^unsigned int    mlx_get_color_value(mlx_ptr_t *mlx_ptr, int color)$/;"	f
mlx_get_data_addr	minilibx_linux/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f	typeref:typename:char *
mlx_get_data_addr	mlx/mlx_new_image.m	/^char    *mlx_get_data_addr(mlx_img_list_t *img_ptr, int *bits_per_pixel, int *size_line, int *en/;"	f
mlx_get_screen_size	minilibx_linux/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex, int *sizey)$/;"	f	typeref:typename:int
mlx_gl_draw	mlx/mlx_new_window.h	/^- (void) mlx_gl_draw;$/;"	m	interface:MlxWin
mlx_gl_draw	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
mlx_gl_draw_font:andCtx:andX:andY:andColor:glyphX:glyphY:	mlx/mlx_new_window.h	/^- (void) mlx_gl_draw_font:(mlx_img_list_t *)img andCtx:(mlx_img_ctx_t *)imgctx andX:(int)x andY:/;"	m	interface:MlxWin
mlx_gl_draw_font:andCtx:andX:andY:andColor:glyphX:glyphY:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
mlx_gl_draw_img:andCtx:andX:andY:	mlx/mlx_new_window.h	/^- (void) mlx_gl_draw_img:(mlx_img_list_t *)img andCtx:(mlx_img_ctx_t *)imgctx andX:(int)x andY:(/;"	m	interface:MlxWin
mlx_gl_draw_img:andCtx:andX:andY:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
mlx_hook	minilibx_linux/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f	typeref:typename:int
mlx_hook	mlx/mlx_new_window.m	/^void mlx_hook(mlx_win_list_t *win_ptr, int x_event, int x_mask, int (*funct_ptr)(), void *param)$/;"	f
mlx_img_ctx_s	mlx/mlx_int.h	/^typedef struct	mlx_img_ctx_s$/;"	s
mlx_img_ctx_t	mlx/mlx_int.h	/^} mlx_img_ctx_t;$/;"	t	typeref:struct:mlx_img_ctx_s
mlx_img_list_s	mlx/mlx_int.h	/^typedef struct	mlx_img_list_s$/;"	s
mlx_img_list_t	mlx/mlx_int.h	/^} mlx_img_list_t;$/;"	t	typeref:struct:mlx_img_list_s
mlx_init	minilibx_linux/mlx_init.c	/^void	*mlx_init()$/;"	f	typeref:typename:void *
mlx_init	mlx/mlx_init_loop.m	/^void *mlx_init()$/;"	f
mlx_int_anti_resize_win	minilibx_linux/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f	typeref:typename:int
mlx_int_deal_shm	minilibx_linux/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_do_nothing	minilibx_linux/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f	typeref:typename:int
mlx_int_egal_img	minilibx_linux/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f	typeref:typename:int
mlx_int_file_get_rid_comment	minilibx_linux/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f	typeref:typename:int
mlx_int_file_get_rid_comment	mlx/mlx_xpm.c	/^void	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f	typeref:typename:void
mlx_int_get_col_name	minilibx_linux/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f	typeref:typename:int
mlx_int_get_col_name	mlx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f	typeref:typename:int
mlx_int_get_good_color	minilibx_linux/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_int_get_line	minilibx_linux/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_get_line	mlx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_get_text_rgb	minilibx_linux/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f	typeref:typename:int
mlx_int_get_text_rgb	mlx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f	typeref:typename:int
mlx_int_get_visual	minilibx_linux/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_loop_once	mlx/mlx_init_loop.m	/^void	mlx_int_loop_once()$/;"	f
mlx_int_new_image	minilibx_linux/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f	typeref:typename:void *
mlx_int_new_xshm_image	minilibx_linux/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f	typeref:typename:void *
mlx_int_param_ButtonPress	minilibx_linux/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_ButtonRelease	minilibx_linux/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_Expose	minilibx_linux/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyPress	minilibx_linux/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyRelease	minilibx_linux/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_MotionNotify	minilibx_linux/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_event	minilibx_linux/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v	typeref:typename:int (* ([]))()
mlx_int_param_generic	minilibx_linux/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_undef	minilibx_linux/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f	typeref:typename:int
mlx_int_parse_png	mlx/mlx_png.c	/^mlx_img_list_t	*mlx_int_parse_png(mlx_ptr_t *xvar, unsigned char *fptr, int size)$/;"	f	typeref:typename:mlx_img_list_t *
mlx_int_parse_xpm	minilibx_linux/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f	typeref:typename:void *
mlx_int_parse_xpm	mlx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(mlx_ptr_t *xvar,void *info,int info_size,char *(*f)())$/;"	f	typeref:typename:void *
mlx_int_rgb_conversion	minilibx_linux/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_set_win_event_mask	minilibx_linux/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_static_line	minilibx_linux/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_static_line	mlx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_str_str	minilibx_linux/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str	mlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str_cote	minilibx_linux/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str_cote	mlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_to_wordtab	minilibx_linux/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f	typeref:typename:char **
mlx_int_str_to_wordtab	mlx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f	typeref:typename:char **
mlx_int_wait_first_expose	minilibx_linux/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f	typeref:typename:int
mlx_int_xpm_f_image	minilibx_linux/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f	typeref:typename:void *
mlx_int_xpm_set_pixel	mlx/mlx_xpm.c	/^void	mlx_int_xpm_set_pixel(mlx_img_list_t *img, char *data, int opp, int col, int x)$/;"	f	typeref:typename:void
mlx_int_xpm_set_pointel	minilibx_linux/mlx_xpm.c	/^int	mlx_int_xpm_set_pointel(t_img *img, char *data, int opp, int col, int x)$/;"	f	typeref:typename:int
mlx_key_hook	minilibx_linux/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_key_hook	mlx/mlx_new_window.m	/^void mlx_key_hook(mlx_win_list_t *win_ptr, int (*funct_ptr)(), void *param)$/;"	f
mlx_loop	minilibx_linux/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop	mlx/mlx_init_loop.m	/^void mlx_loop(mlx_ptr_t *mlx_ptr)$/;"	f
mlx_loop_end	minilibx_linux/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_hook	minilibx_linux/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_loop_hook	mlx/mlx_init_loop.m	/^int mlx_loop_hook(mlx_ptr_t *mlx_ptr, void (*fct)(void *), void *param)$/;"	f
mlx_mouse_get_pos	minilibx_linux/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *win, \\$/;"	f	typeref:typename:int
mlx_mouse_get_pos	mlx/mlx_mouse.m	/^int	mlx_mouse_get_pos(mlx_win_list_t *win, int *x, int *y)$/;"	f
mlx_mouse_hide	minilibx_linux/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_mouse_hide	mlx/mlx_mouse.m	/^int	mlx_mouse_hide()$/;"	f
mlx_mouse_hook	minilibx_linux/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_hook	mlx/mlx_new_window.m	/^void mlx_mouse_hook(mlx_win_list_t *win_ptr, int (*funct_ptr)(), void *param)$/;"	f
mlx_mouse_move	minilibx_linux/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win, int x, int y)$/;"	f	typeref:typename:int
mlx_mouse_move	mlx/mlx_mouse.m	/^int	mlx_mouse_move(mlx_win_list_t *win, int x, int y)$/;"	f
mlx_mouse_show	minilibx_linux/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_mouse_show	mlx/mlx_mouse.m	/^int	mlx_mouse_show()$/;"	f
mlx_new_image	minilibx_linux/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_image	mlx/mlx_new_image.m	/^void    *mlx_new_image(mlx_ptr_t *mlx_ptr, int width, int height)$/;"	f
mlx_new_image2	minilibx_linux/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_opengl_window	mlx/mlx_opengl.m	/^void	*mlx_new_opengl_window(mlx_ptr_t *mlx_ptr, int size_x, int size_y, char *title)$/;"	f
mlx_new_window	minilibx_linux/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f	typeref:typename:void *
mlx_new_window	mlx/mlx_new_window.m	/^void *mlx_new_window(mlx_ptr_t *mlx_ptr, int size_x, int size_y, char *title)$/;"	f
mlx_opengl_swap_buffers	mlx/mlx_opengl.m	/^int	mlx_opengl_swap_buffers(mlx_win_list_t *win_ptr)$/;"	f
mlx_opengl_window_set_context	mlx/mlx_opengl.m	/^int	mlx_opengl_window_set_context(mlx_win_list_t *win_ptr)$/;"	f
mlx_pixel_put	minilibx_linux/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_pixel_put	mlx/mlx_init_loop.m	/^void mlx_pixel_put(mlx_ptr_t *mlx_ptr, mlx_win_list_t *win_ptr, int x, int y, int color)$/;"	f
mlx_png_file_to_image	mlx/mlx_png.c	/^void	*mlx_png_file_to_image(mlx_ptr_t *xvar, char *file, int *width, int *height)$/;"	f	typeref:typename:void *
mlx_ptr_s	mlx/mlx_int.h	/^typedef struct		mlx_ptr_s$/;"	s
mlx_ptr_t	mlx/mlx_int.h	/^} mlx_ptr_t;$/;"	t	typeref:struct:mlx_ptr_s
mlx_put_image_to_window	minilibx_linux/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f	typeref:typename:int
mlx_put_image_to_window	mlx/mlx_new_image.m	/^void    mlx_put_image_to_window(mlx_ptr_t *mlx_ptr, mlx_win_list_t *win_ptr, mlx_img_list_t *img/;"	f
mlx_set_font	minilibx_linux/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, char *name)$/;"	f	typeref:typename:void
mlx_shaders	mlx/mlx_shaders.c	/^int mlx_shaders(glsl_info_t *glsl)$/;"	f	typeref:typename:int
mlx_shaders_font	mlx/mlx_shaders.c	/^int mlx_shaders_font(glsl_info_t *glsl)$/;"	f	typeref:typename:int
mlx_shaders_image	mlx/mlx_shaders.c	/^int mlx_shaders_image(glsl_info_t *glsl)$/;"	f	typeref:typename:int
mlx_shaders_pixel	mlx/mlx_shaders.c	/^int mlx_shaders_pixel(glsl_info_t *glsl)$/;"	f	typeref:typename:int
mlx_string_put	minilibx_linux/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_string_put	mlx/mlx_new_image.m	/^int mlx_string_put(mlx_ptr_t *mlx_ptr, mlx_win_list_t *win_ptr, int x, int y, int color, unsigne/;"	f
mlx_win_list_s	mlx/mlx_int.h	/^typedef struct	mlx_win_list_s$/;"	s
mlx_win_list_t	mlx/mlx_int.h	/^} mlx_win_list_t;$/;"	t	typeref:struct:mlx_win_list_s
mlx_xpm_file_to_image	minilibx_linux/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f	typeref:typename:void *
mlx_xpm_file_to_image	minilibx_linux/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_file_to_image	mlx/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(mlx_ptr_t *xvar,char *file,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	minilibx_linux/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	minilibx_linux/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	mlx/mlx_xpm.c	/^void	*mlx_xpm_to_image(mlx_ptr_t *xvar,char **xpm_data,int *width,int *height)$/;"	f	typeref:typename:void *
mouse	include/structs.h	/^	int mouse;$/;"	m	struct:s_data	typeref:typename:int
mouseDown:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
mouseDragged:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
mouseMoved:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
mouseUp:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
mouse_event	src/cub3d_render.c	/^int mouse_event(t_data *data)$/;"	f	typeref:typename:int
mouse_hook	minilibx_linux/mlx_int.h	/^	int					(*mouse_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
mouse_param	minilibx_linux/mlx_int.h	/^	void				*mouse_param;$/;"	m	struct:s_win_list	typeref:typename:void *
mouse_rotate	src/cub3d_render.c	/^void		mouse_rotate(t_data *data)$/;"	f	typeref:typename:void
move_player	src/move_player.c	/^int	move_player(t_data *data, int move)$/;"	f	typeref:typename:int
my_loc	libft/ft_itoa.c	/^static char	*my_loc(int len)$/;"	f	typeref:typename:char *	file:
my_mlx_pixel_put	src/draw_line.c	/^void            my_mlx_pixel_put(t_img_data *img, int x, int y, unsigned int color)$/;"	f	typeref:typename:void
name	minilibx_linux/mlx_int.h	/^	char	*name;$/;"	m	struct:s_col_name	typeref:typename:char *
name	minilibx_linux/mlx_int.h	/^	int		name;$/;"	m	struct:s_xpm_col	typeref:typename:int
name	mlx/mlx_xpm.c	/^  char  *name;$/;"	m	struct:s_col_name	typeref:typename:char *	file:
name	mlx/mlx_xpm.c	/^  int           name;$/;"	m	struct:s_xpm_col	typeref:typename:int	file:
nb_flush	mlx/mlx_int.h	/^  int			nb_flush;$/;"	m	struct:mlx_win_list_s	typeref:typename:int
new_game	include/structs.h	/^	unsigned int new_game;$/;"	m	struct:s_menu	typeref:typename:unsigned int
next	include/structs.h	/^	struct s_sprite	*next;$/;"	m	struct:s_sprite	typeref:struct:s_sprite *
next	include/structs.h	/^    struct s_list   *next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	minilibx_linux/mlx_int.h	/^	struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list *
next	mlx/mlx_int.h	/^  struct mlx_img_ctx_s	*next;$/;"	m	struct:mlx_img_ctx_s	typeref:struct:mlx_img_ctx_s *
next	mlx/mlx_int.h	/^  struct mlx_img_list_s	*next;$/;"	m	struct:mlx_img_list_s	typeref:struct:mlx_img_list_s *
next	mlx/mlx_int.h	/^  struct mlx_win_list_s	*next;$/;"	m	struct:mlx_win_list_s	typeref:struct:mlx_win_list_s *
next_wall_dir	src/raycasting.c	/^t_rayponse	next_wall_dir(t_data *data, int dir, t_list **obstacles_ls)$/;"	f	typeref:typename:t_rayponse
north_crossing	src/move_crossing_box.c	/^int	north_crossing(t_data *data)$/;"	f	typeref:typename:int
nsfb59304e0101	assets/meters_and_bars.svg	/^   sodipodi:docname="meters_and_bars.svg">$/;"	n	uri:http://www.w3.org/2000/svg
obstacles_ls	include/structs.h	/^	t_list	*obstacles_ls;$/;"	m	struct:s_rayponse	typeref:typename:t_list *
one	include/structs.h	/^	unsigned int one;$/;"	m	struct:s_menu	typeref:typename:unsigned int
one_step_forward	src/bonus_utils.c	/^static int	one_step_forward(t_player *player_fictif)$/;"	f	typeref:typename:int	file:
openglwin	mlx/mlx_new_window.h	/^  int			openglwin;$/;"	E	interface:MlxWin
origin_plane	include/structs.h	/^	t_vector	origin_plane;$/;"	m	struct:s_cam	typeref:typename:t_vector
otherMouseDown:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
otherMouseDragged:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
otherMouseUp:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
param	minilibx_linux/mlx_int.h	/^	void	*param;$/;"	m	struct:s_event_list	typeref:typename:void *
parse_file	src/parse_import.c	/^void	parse_file(char *fname, t_data *data)$/;"	f	typeref:typename:void
parsing_loop	src/parse_import.c	/^int	parsing_loop(t_data *data, int *map_parse)$/;"	f	typeref:typename:int
path34579	assets/meters_and_bars.svg	/^           transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path34581	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path34583	assets/meters_and_bars.svg	/^           transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path34585	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34590	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path34600	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscscss" \/>$/;"	i
path34615	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#008080;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path34617	assets/meters_and_bars.svg	/^           id="path34617" \/>$/;"	i
path34639	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#00ffff;fill-opacity:1;fill-rule:nonzero/;"	i
path34646	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34662	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34693	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#370f0f;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path34695	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path34697	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34699	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#370f0f;fill-opacity:1;fill-rule:nonzero/;"	i
path34705	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path34707	assets/meters_and_bars.svg	/^           id="path34707" \/>$/;"	i
path34709	assets/meters_and_bars.svg	/^           id="path34709" \/>$/;"	i
path34713	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path34715	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path34717	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path34719	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#ff2a2a;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path34721	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34723	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path34725	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#370f0f;fill-opacity:1;fill-rule:nonzero/;"	i
path34729	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path34731	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#7ee51a;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path34733	assets/meters_and_bars.svg	/^           id="path34733" \/>$/;"	i
path34735	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path34741	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#7ee51a;fill-opacity:1;fill-rule:nonzero/;"	i
path34743	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34745	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34749	assets/meters_and_bars.svg	/^           transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path34751	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path34753	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path34755	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34757	assets/meters_and_bars.svg	/^           id="path34757" \/>$/;"	i
path34759	assets/meters_and_bars.svg	/^           transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path34761	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscscss" \/>$/;"	i
path34765	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#440055;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path34767	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path34769	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34771	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#440055;fill-opacity:1;fill-rule:nonzero/;"	i
path34777	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path34779	assets/meters_and_bars.svg	/^           id="path34779" \/>$/;"	i
path34781	assets/meters_and_bars.svg	/^           id="path34781" \/>$/;"	i
path34785	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path34787	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path34789	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path34791	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#d42aff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path34793	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path34795	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path34797	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#440055;fill-opacity:1;fill-rule:nonzero/;"	i
path34886	assets/meters_and_bars.svg	/^       style="opacity:0.70353986;color:#000000;fill:#36630b;fill-opacity:1;fill-rule:nonzero;str/;"	i
path34888	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="sssssssss" \/>$/;"	i
path34890	assets/meters_and_bars.svg	/^       style="opacity:0.70353986;color:#000000;fill:#370f0f;fill-opacity:1;fill-rule:nonzero;str/;"	i
path34900	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#00fbfb;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path34902	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#da2222;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path34942	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path34947	assets/meters_and_bars.svg	/^         style="opacity:0.06194691;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;s/;"	i
path35601	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path35616	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="ccccscccccc" \/>$/;"	i
path35625	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path35627	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path35637	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path35799	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#e5bdf0;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path35804	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="ccccccc" \/>$/;"	i
path35806	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path35811	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path35816	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path35841	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path35941	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ff6600;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path35956	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="sssssssss" \/>$/;"	i
path35962	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path35964	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#ffd42a;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path35966	assets/meters_and_bars.svg	/^           id="path35966" \/>$/;"	i
path35968	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path35972	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#ffcc00;fill-opacity:1;fill-rule:nonzero/;"	i
path35974	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path35976	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path35980	assets/meters_and_bars.svg	/^           transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path35982	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path35984	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path35986	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path35988	assets/meters_and_bars.svg	/^           id="path35988" \/>$/;"	i
path35990	assets/meters_and_bars.svg	/^           transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path35992	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscscss" \/>$/;"	i
path36002	assets/meters_and_bars.svg	/^       style="opacity:0.70353986;color:#000000;fill:#ff6600;fill-opacity:1;fill-rule:nonzero;str/;"	i
path36008	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#653515;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path36010	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path36012	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path36014	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#653515;fill-opacity:1;fill-rule:nonzero/;"	i
path36018	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path36020	assets/meters_and_bars.svg	/^           id="path36020" \/>$/;"	i
path36022	assets/meters_and_bars.svg	/^           id="path36022" \/>$/;"	i
path36026	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path36028	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path36030	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path36032	assets/meters_and_bars.svg	/^           style="opacity:0.12389383;color:#000000;fill:#ffff00;fill-opacity:1;fill-rule:nonzero/;"	i
path36034	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path36036	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path36038	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#653515;fill-opacity:1;fill-rule:nonzero/;"	i
path49968	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path49970	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ffff00;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path49975	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path49977	assets/meters_and_bars.svg	/^         style="opacity:0.1017699;color:#000000;fill:#433502;fill-opacity:1;fill-rule:nonzero;st/;"	i
path49986	assets/meters_and_bars.svg	/^         style="opacity:0.98000004;color:#000000;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;s/;"	i
path49991	assets/meters_and_bars.svg	/^         transform="matrix(0.34801052,0,0,0.34801052,112.58664,-1149.4405)" \/>$/;"	i
path50060	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#4f3b00;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path50082	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="sssssssss" \/>$/;"	i
path50088	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path50090	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#e13f80;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path50092	assets/meters_and_bars.svg	/^           id="path50092" \/>$/;"	i
path50094	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path50098	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#e13f80;fill-opacity:1;fill-rule:nonzero/;"	i
path50100	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path50102	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path50106	assets/meters_and_bars.svg	/^           transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path50108	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path50110	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path50112	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path50114	assets/meters_and_bars.svg	/^           id="path50114" \/>$/;"	i
path50116	assets/meters_and_bars.svg	/^           transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path50118	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscscss" \/>$/;"	i
path50128	assets/meters_and_bars.svg	/^       style="opacity:0.41150441;color:#000000;fill:#d40055;fill-opacity:1;fill-rule:nonzero;str/;"	i
path50134	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#392010;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path50136	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path50138	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path50140	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#392010;fill-opacity:1;fill-rule:nonzero/;"	i
path50144	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path50146	assets/meters_and_bars.svg	/^           id="path50146" \/>$/;"	i
path50148	assets/meters_and_bars.svg	/^           id="path50148" \/>$/;"	i
path50152	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path50154	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path50156	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path50158	assets/meters_and_bars.svg	/^           style="opacity:0.95132745;color:#000000;fill:#c46e36;fill-opacity:1;fill-rule:nonzero/;"	i
path50160	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path50162	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path50164	assets/meters_and_bars.svg	/^           style="opacity:0.16371681;color:#000000;fill:#392010;fill-opacity:1;fill-rule:nonzero/;"	i
path50174	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="scccscsscccscscccsc" \/>$/;"	i
path50179	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path50186	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscsscsssccsccc" \/>$/;"	i
path50191	assets/meters_and_bars.svg	/^           id="path50191" \/>$/;"	i
path50196	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#df5b90;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path50201	assets/meters_and_bars.svg	/^           id="path50201" \/>$/;"	i
path50206	assets/meters_and_bars.svg	/^           id="path50206" \/>$/;"	i
path50252-0	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path50257-8	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path50284-3	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#0d3c3c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path50286-2	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path50288-8	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path50290-7	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#0d3c3c;fill-opacity:1;fill-rule:nonzero/;"	i
path50294-8	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path50296-1	assets/meters_and_bars.svg	/^           id="path50296-1" \/>$/;"	i
path50298-4	assets/meters_and_bars.svg	/^           id="path50298-4" \/>$/;"	i
path50302-5	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path50304-5	assets/meters_and_bars.svg	/^         transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path50306-2	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path50308-6	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50310-8	assets/meters_and_bars.svg	/^         id="path50310-8" \/>$/;"	i
path50312-9	assets/meters_and_bars.svg	/^         transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path50314-2	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="sscscss" \/>$/;"	i
path50350-0	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50352-3	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50354-1	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50356-3	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50397-3	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50435-1	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50438-0	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50441-2	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50444-2	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50454-3	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50545-9	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50550-4	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50555-5	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50576-5	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50582-0	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50679-9	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50681-5	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50683-5	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50699-7	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50701-8	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50703-3	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50719-3	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#00ffff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path50721-9	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#00ffff;fill-opacity:1;fill-rule:nonzero;s/;"	i
path50723-1	assets/meters_and_bars.svg	/^         style="opacity:0.23893804;color:#000000;fill:#019f9f;fill-opacity:1;fill-rule:nonzero;s/;"	i
path50798-8	assets/meters_and_bars.svg	/^       style="opacity:0.7;color:#000000;fill:#4f1616;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
path50800-2	assets/meters_and_bars.svg	/^       style="opacity:0.7;color:#000000;fill:#4f1616;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
path50802-8	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="csssscc" \/>$/;"	i
path50804-0	assets/meters_and_bars.svg	/^       inkscape:connector-curvature="0" \/>$/;"	i
path50828-8	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path50830-4	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path50832-8	assets/meters_and_bars.svg	/^         transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path50834-6	assets/meters_and_bars.svg	/^         style="opacity:0.7477876;color:#000000;fill:#dd2b2b;fill-opacity:1;fill-rule:nonzero;st/;"	i
path50836-0	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50838-9	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path50840-3	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#370f0f;fill-opacity:1;fill-rule:nonzero;s/;"	i
path50846-8	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50848-7	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50850-6	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50852-3	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50860-5	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50862-8	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50864-3	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50866-9	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50874-3	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#370f0f;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path50876-9	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#a02c2c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path50878-7	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50880-6	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#370f0f;fill-opacity:1;fill-rule:nonzero;s/;"	i
path50888-8	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50890-6	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50892-1	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50898-1	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50900-9	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50902-6	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50908-4	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50910-2	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50912-5	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50918-3	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="ccccc" \/>$/;"	i
path50920-2	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path50922-6	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path50924-8	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path50928-6	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path50930-6	assets/meters_and_bars.svg	/^         transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path50932-3	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path50934-9	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50936-4	assets/meters_and_bars.svg	/^         id="path50936-4" \/>$/;"	i
path50938-5	assets/meters_and_bars.svg	/^         transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path50940-6	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="sscscss" \/>$/;"	i
path50946-3	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50948-5	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50950-6	assets/meters_and_bars.svg	/^         style="opacity:0.7477876;color:#000000;fill:#c6f920;fill-opacity:1;fill-rule:nonzero;st/;"	i
path50952-6	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50958-4	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50960-6	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50962-2	assets/meters_and_bars.svg	/^         style="opacity:0.7477876;color:#000000;fill:#c6f920;fill-opacity:1;fill-rule:nonzero;st/;"	i
path50964-6	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50970-5	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50972-5	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50974-1	assets/meters_and_bars.svg	/^         style="opacity:0.7477876;color:#000000;fill:#c6f920;fill-opacity:1;fill-rule:nonzero;st/;"	i
path50976-0	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path50982-1	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50984-7	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50986-6	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50992-2	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50994-4	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path50996-3	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51002-2	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#75d618;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51004-8	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#c6f920;fill-opacity:1;fill-rule:nonzero;s/;"	i
path51006-2	assets/meters_and_bars.svg	/^         style="opacity:0.13274339;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;s/;"	i
path51044	assets/meters_and_bars.svg	/^       style="opacity:0.4424779;color:#000000;fill:#440055;fill-opacity:1;fill-rule:nonzero;stro/;"	i
path51046	assets/meters_and_bars.svg	/^       style="opacity:0.4424779;color:#000000;fill:#440055;fill-opacity:1;fill-rule:nonzero;stro/;"	i
path51048	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="csssscc" \/>$/;"	i
path51050	assets/meters_and_bars.svg	/^       inkscape:connector-curvature="0" \/>$/;"	i
path51054	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path51056	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path51058	assets/meters_and_bars.svg	/^         transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path51060	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#d634ff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51062	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51064	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path51066	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#440055;fill-opacity:1;fill-rule:nonzero;s/;"	i
path51072	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51074	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51076	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51078	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51084	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51086	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51088	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51090	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51096	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#440055;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51098	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#bc53d6;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51100	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51102	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#50235b;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51108	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51110	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51112	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51118	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51120	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51122	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51128	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51130	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51132	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51134	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="ccccc" \/>$/;"	i
path51136	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path51138	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path51140	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path51144	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path51146	assets/meters_and_bars.svg	/^         transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path51148	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path51150	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51152	assets/meters_and_bars.svg	/^         id="path51152" \/>$/;"	i
path51154	assets/meters_and_bars.svg	/^         transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path51156	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="sscscss" \/>$/;"	i
path51162	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51164	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51166	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ff5a9c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51168	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51174	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51176	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51178	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ff5a9c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51180	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51186	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51188	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51190	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ff5a9c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51192	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path51198	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51200	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51202	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51208	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51210	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51212	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path51218	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#d03a76;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path51220	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#ff5a9c;fill-opacity:1;fill-rule:nonzero;s/;"	i
path51222	assets/meters_and_bars.svg	/^         style="opacity:0.13274339;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;s/;"	i
path52061	assets/meters_and_bars.svg	/^       style="opacity:0.58849553;color:#000000;fill:#6d5b12;fill-opacity:1;fill-rule:nonzero;str/;"	i
path52063	assets/meters_and_bars.svg	/^       style="opacity:0.58849553;color:#000000;fill:#6d5b12;fill-opacity:1;fill-rule:nonzero;str/;"	i
path52065	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="csssscc" \/>$/;"	i
path52067	assets/meters_and_bars.svg	/^       inkscape:connector-curvature="0" \/>$/;"	i
path52071	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path52073	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path52075	assets/meters_and_bars.svg	/^         transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path52077	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ffff00;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52079	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52081	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path52083	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#3c2f00;fill-opacity:1;fill-rule:nonzero;s/;"	i
path52089	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52091	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52093	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52095	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52101	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52103	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52105	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52107	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52113	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#3c2f00;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52115	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ffd42a;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52117	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52119	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#6d5b12;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52125	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52127	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52129	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52135	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52137	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52139	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52145	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52147	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52149	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52151	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="ccccc" \/>$/;"	i
path52153	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path52155	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path52157	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
path52161	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path52163	assets/meters_and_bars.svg	/^         transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path52165	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path52167	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52169	assets/meters_and_bars.svg	/^         id="path52169" \/>$/;"	i
path52171	assets/meters_and_bars.svg	/^         transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path52173	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="sscscss" \/>$/;"	i
path52179	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52181	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52183	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#fa9a1f;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52185	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52191	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52193	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52195	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#fa9a1f;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52197	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52203	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52205	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52207	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#fa9a1f;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52209	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52215	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52217	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52219	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52225	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52227	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52229	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52235	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#ed7f02;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52237	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#fa9a1f;fill-opacity:1;fill-rule:nonzero;s/;"	i
path52239	assets/meters_and_bars.svg	/^         style="opacity:0.13274339;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;s/;"	i
path52241	assets/meters_and_bars.svg	/^       style="opacity:0.60619465;color:#000000;fill:#482814;fill-opacity:1;fill-rule:nonzero;str/;"	i
path52243	assets/meters_and_bars.svg	/^       style="opacity:0.60619465;color:#000000;fill:#482814;fill-opacity:1;fill-rule:nonzero;str/;"	i
path52245	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="csssscc" \/>$/;"	i
path52247	assets/meters_and_bars.svg	/^       inkscape:connector-curvature="0" \/>$/;"	i
path52251	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path52253	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path52255	assets/meters_and_bars.svg	/^         transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path52257	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#c26d36;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52259	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52261	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path52263	assets/meters_and_bars.svg	/^         style="opacity:0.86283133;color:#000000;fill:#392010;fill-opacity:1;fill-rule:nonzero;s/;"	i
path52269	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52271	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52273	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52275	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52281	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52283	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52285	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52287	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,-5e-5,-1025.9167)" \/>$/;"	i
path52293	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#392010;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52295	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#a05a2c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52297	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52299	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#392010;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path52305	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52307	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52309	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52315	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52317	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52319	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52325	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52327	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path52329	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path53123	assets/meters_and_bars.svg	/^       style="opacity:0.70353986;color:#000000;fill:#440055;fill-opacity:1;fill-rule:nonzero;str/;"	i
path53125	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53127	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53129	assets/meters_and_bars.svg	/^       style="opacity:0.70353986;color:#000000;fill:#1d5959;fill-opacity:1;fill-rule:nonzero;str/;"	i
path53135	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#0d3c3c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53137	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53139	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53141	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#0d3c3c;fill-opacity:1;fill-rule:nonzero/;"	i
path53145	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53147	assets/meters_and_bars.svg	/^           id="path53147" \/>$/;"	i
path53149	assets/meters_and_bars.svg	/^           id="path53149" \/>$/;"	i
path53153	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53155	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53157	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path53159	assets/meters_and_bars.svg	/^           style="opacity:0.70353986;color:#000000;fill:#00ffff;fill-opacity:1;fill-rule:nonzero/;"	i
path53161	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53163	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53165	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#004949;fill-opacity:1;fill-rule:nonzero/;"	i
path53171	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53173	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#a02c2c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53175	assets/meters_and_bars.svg	/^           id="path53175" \/>$/;"	i
path53177	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53181	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#a02c2c;fill-opacity:1;fill-rule:nonzero/;"	i
path53183	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53185	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53189	assets/meters_and_bars.svg	/^           transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path53191	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path53193	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53195	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53197	assets/meters_and_bars.svg	/^           id="path53197" \/>$/;"	i
path53199	assets/meters_and_bars.svg	/^           transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path53201	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscscss" \/>$/;"	i
path53207	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#36630b;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53209	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53211	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53213	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#36630b;fill-opacity:1;fill-rule:nonzero/;"	i
path53217	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53219	assets/meters_and_bars.svg	/^           id="path53219" \/>$/;"	i
path53221	assets/meters_and_bars.svg	/^           id="path53221" \/>$/;"	i
path53225	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53227	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53229	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path53231	assets/meters_and_bars.svg	/^           style="opacity:0.70353986;color:#000000;fill:#ccff00;fill-opacity:1;fill-rule:nonzero/;"	i
path53233	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53235	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53237	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#36630b;fill-opacity:1;fill-rule:nonzero/;"	i
path53243	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53245	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#bc53d6;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53247	assets/meters_and_bars.svg	/^           id="path53247" \/>$/;"	i
path53249	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53253	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#bc53d6;fill-opacity:1;fill-rule:nonzero/;"	i
path53255	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53257	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53261	assets/meters_and_bars.svg	/^           transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path53263	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path53265	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53267	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53269	assets/meters_and_bars.svg	/^           id="path53269" \/>$/;"	i
path53271	assets/meters_and_bars.svg	/^           transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path53273	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscscss" \/>$/;"	i
path53289	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="scccscs" \/>$/;"	i
path53291	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="sccscsccscs" \/>$/;"	i
path53293	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="cccsc" \/>$/;"	i
path53297	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="cccssssc" \/>$/;"	i
path53299	assets/meters_and_bars.svg	/^         id="path53299" \/>$/;"	i
path53303	assets/meters_and_bars.svg	/^         transform="matrix(0.26458334,0,0,0.26458334,3.474454,-1023.3776)" \/>$/;"	i
path53307	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#7ee51a;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53309	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#c6f920;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53311	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="ccscc" \/>$/;"	i
path53315	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="ccccccc" \/>$/;"	i
path53317	assets/meters_and_bars.svg	/^         id="path53317" \/>$/;"	i
path53319	assets/meters_and_bars.svg	/^         style="color:#000000;fill:#a42ec1;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-w/;"	i
path53321	assets/meters_and_bars.svg	/^         id="path53321" \/>$/;"	i
path53323	assets/meters_and_bars.svg	/^         id="path53323" \/>$/;"	i
path53325	assets/meters_and_bars.svg	/^         id="path53325" \/>$/;"	i
path53327	assets/meters_and_bars.svg	/^         style="opacity:0.11504427;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;s/;"	i
path53329	assets/meters_and_bars.svg	/^       style="opacity:0.70353986;color:#000000;fill:#ffcc00;fill-opacity:1;fill-rule:nonzero;str/;"	i
path53335	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#3c2f00;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53337	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53339	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53341	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#3c2f00;fill-opacity:1;fill-rule:nonzero/;"	i
path53345	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53347	assets/meters_and_bars.svg	/^           id="path53347" \/>$/;"	i
path53349	assets/meters_and_bars.svg	/^           id="path53349" \/>$/;"	i
path53353	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53355	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53357	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path53359	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#ffff00;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53361	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53363	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53365	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#3c2f00;fill-opacity:1;fill-rule:nonzero/;"	i
path53367	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53373	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53375	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#ff6600;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53377	assets/meters_and_bars.svg	/^           id="path53377" \/>$/;"	i
path53379	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53383	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#ff8a00;fill-opacity:1;fill-rule:nonzero/;"	i
path53385	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53387	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53391	assets/meters_and_bars.svg	/^           transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path53393	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path53395	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53397	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53399	assets/meters_and_bars.svg	/^           id="path53399" \/>$/;"	i
path53401	assets/meters_and_bars.svg	/^           transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path53403	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscscss" \/>$/;"	i
path53407	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="cssccscccscsssssccccscccsssccccc" \/>$/;"	i
path53409	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="sssssss" \/>$/;"	i
path53411	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="sssssss" \/>$/;"	i
path53413	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="sssssss" \/>$/;"	i
path53415	assets/meters_and_bars.svg	/^         style="opacity:0.42035397;color:#000000;fill:#ffcc00;fill-opacity:1;fill-rule:nonzero;s/;"	i
path53419	assets/meters_and_bars.svg	/^         sodipodi:type="arc" \/>$/;"	i
path53421	assets/meters_and_bars.svg	/^         transform="matrix(0.34801052,0,0,0.34801052,112.58664,-1151.8973)" \/>$/;"	i
path53423	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path53425	assets/meters_and_bars.svg	/^         transform="matrix(0.31947031,0,0,0.31947031,74.015845,-990.11572)" \/>$/;"	i
path53427	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path53429	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path53445	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sccccccccccsccccccccccccccccccccccccccccccccccccccccccccccccccccc/;"	i
path53447	assets/meters_and_bars.svg	/^         sodipodi:nodetypes="cccccccc" \/>$/;"	i
path53449	assets/meters_and_bars.svg	/^       style="opacity:0.41150441;color:#000000;fill:#d40055;fill-opacity:1;fill-rule:nonzero;str/;"	i
path53455	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#50162d;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53457	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53459	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53461	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#50162d;fill-opacity:1;fill-rule:nonzero/;"	i
path53465	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53467	assets/meters_and_bars.svg	/^           id="path53467" \/>$/;"	i
path53469	assets/meters_and_bars.svg	/^           id="path53469" \/>$/;"	i
path53473	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53475	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53477	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-886.40363)" \/>$/;"	i
path53479	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#ff5a9c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53481	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53483	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53485	assets/meters_and_bars.svg	/^           style="opacity:0.16371681;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero/;"	i
path53487	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53493	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53495	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#a05a2c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53497	assets/meters_and_bars.svg	/^           id="path53497" \/>$/;"	i
path53499	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
path53503	assets/meters_and_bars.svg	/^           style="opacity:0.86283133;color:#000000;fill:#a05a2c;fill-opacity:1;fill-rule:nonzero/;"	i
path53505	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53507	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53511	assets/meters_and_bars.svg	/^           transform="matrix(0.26458334,0,0,0.26600583,-53.672671,-1026.0294)" \/>$/;"	i
path53513	assets/meters_and_bars.svg	/^           transform="matrix(0.2389785,0,0,0.23707681,-73.717599,-884.04132)" \/>$/;"	i
path53515	assets/meters_and_bars.svg	/^           sodipodi:type="arc" \/>$/;"	i
path53517	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53519	assets/meters_and_bars.svg	/^           id="path53519" \/>$/;"	i
path53521	assets/meters_and_bars.svg	/^           transform="matrix(0.19488128,0,0,0.1933305,-108.23942,-673.7028)" \/>$/;"	i
path53523	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sscscss" \/>$/;"	i
path53529	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="cccsccsscccccc" \/>$/;"	i
path53531	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53533	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53537	assets/meters_and_bars.svg	/^           style="color:#000000;fill:#d03a76;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke/;"	i
path53539	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
path53541	assets/meters_and_bars.svg	/^           inkscape:connector-curvature="0" \/>$/;"	i
pix	minilibx_linux/mlx_int.h	/^	Pixmap			pix;$/;"	m	struct:s_img	typeref:typename:Pixmap
pix_pos_to_map_case	src/map_ft.c	/^char	pix_pos_to_map_case(t_data *data, t_point absolute_pos)$/;"	f	typeref:typename:char
pix_pos_to_map_pos	src/map_ft.c	/^t_point	pix_pos_to_map_pos(t_point absolute_pos)$/;"	f	typeref:typename:t_point
pixelPutColor:X:Y:	mlx/mlx_new_window.h	/^- (void) pixelPutColor: (int)color X:(int)x Y:(int)y;$/;"	m	interface:MlxWin
pixelPutColor:X:Y:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
pixel_data	mlx/font.c	/^  unsigned char	 pixel_data[1140 * 20 * 4 + 1];$/;"	m	struct:__anone97f5d2d0108	typeref:typename:unsigned char[]	file:
pixel_fshader	mlx/mlx_int.h	/^  GLuint	pixel_fshader;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
pixel_management	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
pixel_nb	mlx/mlx_new_window.h	/^  int			pixel_nb;$/;"	E	interface:MlxWin
pixel_program	mlx/mlx_int.h	/^  GLuint	pixel_program;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
pixel_texture	mlx/mlx_new_window.h	/^  GLuint		pixel_texture;$/;"	E	interface:MlxWin
pixel_vbuffer	mlx/mlx_new_window.h	/^  GLuint		pixel_vbuffer;$/;"	E	interface:MlxWin
pixel_vshader	mlx/mlx_int.h	/^  GLuint	pixel_vshader;$/;"	m	struct:glsl_info_s	typeref:typename:GLuint
pixmgt	mlx/mlx_int.h	/^  int			pixmgt;$/;"	m	struct:mlx_win_list_s	typeref:typename:int
pixtexbuff	mlx/mlx_new_window.h	/^  unsigned int		*pixtexbuff;$/;"	E	interface:MlxWin
plane_dir	include/structs.h	/^	t_vector	plane_dir;$/;"	m	struct:s_cam	typeref:typename:t_vector
plane_size	include/structs.h	/^	double		plane_size;$/;"	m	struct:s_cam	typeref:typename:double
player	include/structs.h	/^	t_player		*player;$/;"	m	struct:s_data	typeref:typename:t_player *
player_init	src/ft_player_init.c	/^int	player_init(char **map, t_player *player)$/;"	f	typeref:typename:int
player_smoth_move	src/move_player.c	/^void	player_smoth_move(t_data *data)$/;"	f	typeref:typename:void
png_info_s	mlx/mlx_png.c	/^typedef struct png_info_s$/;"	s	file:
png_info_t	mlx/mlx_png.c	/^} png_info_t;$/;"	t	typeref:struct:png_info_s	file:
pop_closest	src/raycasting.c	/^void	pop_closest(t_list **lst, t_list *closest)$/;"	f	typeref:typename:void
pos	include/structs.h	/^	t_point	pos;$/;"	m	struct:s_sprite	typeref:typename:t_point
pos_box	include/structs.h	/^	t_point		pos_box;$/;"	m	struct:s_player	typeref:typename:t_point
pos_in_pix	include/structs.h	/^	t_point		pos_in_pix;$/;"	m	struct:s_player	typeref:typename:t_point
pos_in_step	include/structs.h	/^	t_point		pos_in_step;$/;"	m	struct:s_player	typeref:typename:t_point
pos_map	include/structs.h	/^	t_point		pos_map;$/;"	m	struct:s_player	typeref:typename:t_point
private_cmap	minilibx_linux/mlx_int.h	/^	int			private_cmap;$/;"	m	struct:s_xvar	typeref:typename:int
pshm_format	minilibx_linux/mlx_int.h	/^	int			pshm_format;$/;"	m	struct:s_xvar	typeref:typename:int
quit	include/structs.h	/^	unsigned int quit;$/;"	m	struct:s_menu	typeref:typename:unsigned int
rdf	assets/meters_and_bars.svg	/^   sodipodi:docname="meters_and_bars.svg">$/;"	n	uri:http://www.w3.org/1999/02/22-rdf-syntax-ns#
re	libft/Makefile	/^re: fclean all$/;"	t
re	mlx/Makefile	/^re: clean all$/;"	t
rect34577	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
rect34592	assets/meters_and_bars.svg	/^           id="rect34592" \/>$/;"	i
rect34624	assets/meters_and_bars.svg	/^           sodipodi:nodetypes="sssssssss" \/>$/;"	i
rect34879	assets/meters_and_bars.svg	/^       sodipodi:nodetypes="csssscc" \/>$/;"	i
rect34879-5-2	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
rect34879-5-3-5	assets/meters_and_bars.svg	/^       inkscape:export-ydpi="90" \/>$/;"	i
rect35823	assets/meters_and_bars.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
rect36040	assets/meters_and_bars.svg	/^         style="opacity:0.71681417;color:#000000;fill:#ff6600;fill-opacity:1;fill-rule:nonzero;s/;"	i
rect36042	assets/meters_and_bars.svg	/^         style="opacity:0.71681417;color:#000000;fill:#ff6600;fill-opacity:1;fill-rule:nonzero;s/;"	i
rect36044	assets/meters_and_bars.svg	/^         style="opacity:0.71681417;color:#000000;fill:#ff6600;fill-opacity:1;fill-rule:nonzero;s/;"	i
rect49989	assets/meters_and_bars.svg	/^           ry="0.75595242" \/>$/;"	i
rect49993	assets/meters_and_bars.svg	/^           style="opacity:0.67699118;color:#000000;fill:#080600;fill-opacity:1;fill-rule:nonzero/;"	i
rect50001	assets/meters_and_bars.svg	/^           style="opacity:0.67699118;color:#000000;fill:#080600;fill-opacity:1;fill-rule:nonzero/;"	i
rect50003	assets/meters_and_bars.svg	/^           ry="0.75595242" \/>$/;"	i
rect50013	assets/meters_and_bars.svg	/^           style="opacity:0.67699118;color:#000000;fill:#080600;fill-opacity:1;fill-rule:nonzero/;"	i
rect50410-5	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50412-8	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50414-7	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50667-0	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect50687-3	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect50707-9	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect50844-0	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect50858-6	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect50872-8	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect50886-5	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50896-5	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50906-5	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50944-5	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50956-4	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50968-2	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect50980-5	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect50990-0	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect51000-6	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect51070	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect51082	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect51094	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect51106	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect51116	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect51126	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect51160	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect51172	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect51184	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect51196	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect51206	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect51216	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52087	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52099	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52111	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52123	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect52133	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect52143	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect52177	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect52189	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect52201	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect52213	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52223	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52233	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52267	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52279	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52291	assets/meters_and_bars.svg	/^         style="opacity:0;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:non/;"	i
rect52303	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect52313	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect52323	assets/meters_and_bars.svg	/^         ry="0.0081343427" \/>$/;"	i
rect53433	assets/meters_and_bars.svg	/^           style="opacity:0.67699118;color:#000000;fill:#080600;fill-opacity:1;fill-rule:nonzero/;"	i
rect53435	assets/meters_and_bars.svg	/^           ry="0.75595242" \/>$/;"	i
rect53439	assets/meters_and_bars.svg	/^           ry="0.75595242" \/>$/;"	i
rect53441	assets/meters_and_bars.svg	/^           style="opacity:0.67699118;color:#000000;fill:#080600;fill-opacity:1;fill-rule:nonzero/;"	i
rectangle_map	src/parse_format_map.c	/^void	rectangle_map(t_data *data, char **map)$/;"	f	typeref:typename:void
refresh_ret_if_is_param	src/parse_params.c	/^static int	refresh_ret_if_is_param(char **identifiers, \\$/;"	f	typeref:typename:int	file:
remove_char	src/load_menu.c	/^char *remove_char(char *str, char c)$/;"	f	typeref:typename:char *
render_menu	src/render_menu.c	/^int	render_menu(t_data *data)$/;"	f	typeref:typename:int
res_enter_key	src/keys_resolution.c	/^void	res_enter_key(t_data *data)$/;"	f	typeref:typename:void
res_s_key	src/keys_resolution.c	/^void	res_s_key(t_data *data)$/;"	f	typeref:typename:void
res_w_key	src/keys_resolution.c	/^void	res_w_key(t_data *data)$/;"	f	typeref:typename:void
resolution	include/structs.h	/^	unsigned int resolution;$/;"	m	struct:s_menu	typeref:typename:unsigned int
resolution_key_press	src/keys_resolution.c	/^void	resolution_key_press(int key, t_data *data)$/;"	f	typeref:typename:void
resolution_state	include/structs.h	/^	unsigned int resolution_state;$/;"	m	struct:s_menu	typeref:typename:unsigned int
rgb_conv	src/parse_file_colors.c	/^unsigned int	rgb_conv(int R, int G, int B)$/;"	f	typeref:typename:unsigned int
right	include/structs.h	/^	unsigned int	right;$/;"	m	struct:s_key_status	typeref:typename:unsigned int
rightMouseDown:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
rightMouseDragged:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
rightMouseUp:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
root	minilibx_linux/mlx_int.h	/^	Window		root;$/;"	m	struct:s_xvar	typeref:typename:Window
rotate_player	src/rotate_player.c	/^void	rotate_player(t_player *player, int move)$/;"	f	typeref:typename:void
rotate_speed	include/structs.h	/^	double		rotate_speed;$/;"	m	struct:s_player	typeref:typename:double
rotate_vector	src/vector_ft.c	/^void	rotate_vector(t_vector *vector, double radian_angle)$/;"	f	typeref:typename:void
s	include/structs.h	/^	unsigned int	s;$/;"	m	struct:s_key_status	typeref:typename:unsigned int
s_cam	include/structs.h	/^typedef struct	s_cam$/;"	s
s_col_name	minilibx_linux/mlx_int.h	/^struct	s_col_name$/;"	s
s_col_name	mlx/mlx_xpm.c	/^struct  s_col_name$/;"	s	file:
s_data	include/structs.h	/^typedef struct s_data$/;"	s
s_event_list	minilibx_linux/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_image	include/structs.h	/^typedef struct s_image$/;"	s
s_img	minilibx_linux/mlx_int.h	/^typedef struct	s_img$/;"	s
s_img_data	include/structs.h	/^typedef struct s_img_data$/;"	s
s_key_status	include/structs.h	/^typedef struct s_key_status$/;"	s
s_list	include/structs.h	/^typedef struct  s_list {$/;"	s
s_menu	include/structs.h	/^typedef struct s_menu$/;"	s
s_obstacle	include/structs.h	/^typedef struct	s_obstacle$/;"	s
s_player	include/structs.h	/^typedef struct s_player$/;"	s
s_point	include/structs.h	/^typedef struct s_point$/;"	s
s_ray	include/structs.h	/^typedef struct	s_ray$/;"	s
s_rayponse	include/structs.h	/^typedef struct	s_rayponse$/;"	s
s_sprite	include/structs.h	/^typedef struct	s_sprite$/;"	s
s_vector	include/structs.h	/^typedef struct s_vector$/;"	s
s_win_list	minilibx_linux/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_window	include/structs.h	/^typedef struct s_window$/;"	s
s_xpm_col	minilibx_linux/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xpm_col	mlx/mlx_xpm.c	/^typedef struct  s_xpm_col$/;"	s	file:
s_xvar	minilibx_linux/mlx_int.h	/^typedef struct	s_xvar$/;"	s
saved_mode	minilibx_linux/mlx_ext_randr.c	/^RRMode	saved_mode = 0;$/;"	v	typeref:typename:RRMode
screen	minilibx_linux/mlx_int.h	/^	int			screen;$/;"	m	struct:s_xvar	typeref:typename:int
scrollWheel:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
selectGLContext	mlx/mlx_new_window.h	/^- (void) selectGLContext;$/;"	m	interface:MlxWin
selectGLContext	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
sensivity	include/structs.h	/^	unsigned int sensivity;$/;"	m	struct:s_menu	typeref:typename:unsigned int
setEvent:andFunc:andParam:	mlx/mlx_new_window.h	/^- (void) setEvent:(int)event andFunc:(func_t)func andParam:(void *)param;$/;"	m	interface:MlxWin
setEvent:andFunc:andParam:	mlx/mlx_new_window.h	/^- (void) setEvent:(int)event andFunc:(func_t)func andParam:(void *)param;$/;"	m	interface:NSWindowEvent
setEvent:andFunc:andParam:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
setEvent:andFunc:andParam:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
setKeyRepeat:	mlx/mlx_new_window.h	/^- (void) setKeyRepeat:(int)mode;$/;"	m	interface:MlxWin
setKeyRepeat:	mlx/mlx_new_window.h	/^- (void) setKeyRepeat:(int)mode;$/;"	m	interface:NSWindowEvent
setKeyRepeat:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
setKeyRepeat:	mlx/mlx_new_window.m	/^{$/;"	m	implementation:NSWindowEvent
set_arRay	src/raycasting.c	/^void	set_arRay(t_data *data)$/;"	f	typeref:typename:void
set_beam	src/raycasting_utils.c	/^void	set_beam(t_data *data, t_list **obstacles_ls)$/;"	f	typeref:typename:void
set_delta_distance	src/ray_set_distances.c	/^void	set_delta_distance(t_data *data)$/;"	f	typeref:typename:void
set_plane_dir	src/camera_ft.c	/^void	set_plane_dir(t_data *data, double plane_size)$/;"	f	typeref:typename:void
set_plane_origin	src/camera_ft.c	/^void	set_plane_origin(t_data *data)$/;"	f	typeref:typename:void
set_side_distance	src/ray_set_distances.c	/^void	set_side_distance(t_data *data)$/;"	f	typeref:typename:void
settings	include/structs.h	/^	unsigned int settings;$/;"	m	struct:s_menu	typeref:typename:unsigned int
settings_enter_key	src/keys_settings.c	/^void	settings_enter_key(t_data *data)$/;"	f	typeref:typename:void
settings_key_press	src/keys_settings.c	/^void	settings_key_press(int key, t_data *data)$/;"	f	typeref:typename:void
settings_s_key	src/keys_settings.c	/^void	settings_s_key(t_data *data)$/;"	f	typeref:typename:void
settings_state	include/structs.h	/^	unsigned int settings_state;$/;"	m	struct:s_menu	typeref:typename:unsigned int
settings_w_key	src/keys_settings.c	/^void	settings_w_key(t_data *data)$/;"	f	typeref:typename:void
shift_line_left	src/parse_format_map.c	/^void	shift_line_left(char *line)$/;"	f	typeref:typename:void
shm	minilibx_linux/mlx_int.h	/^	XShmSegmentInfo	shm;$/;"	m	struct:s_img	typeref:typename:XShmSegmentInfo
shm_att_pb	minilibx_linux/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f	typeref:typename:int
show	minilibx_linux/Makefile	/^show:$/;"	t
side	include/structs.h	/^	int			side;$/;"	m	struct:s_rayponse	typeref:typename:int
side_distances	include/structs.h	/^	double		side_distances[2];$/;"	m	struct:s_ray	typeref:typename:double[2]
size_line	minilibx_linux/mlx_int.h	/^	int				size_line;$/;"	m	struct:s_img	typeref:typename:int
size_x	mlx/mlx_new_window.h	/^  int			size_x;$/;"	E	interface:MlxWin
size_x	mlx/mlx_new_window.h	/^  int		size_x;$/;"	E	interface:NSWindowEvent
size_y	mlx/mlx_new_window.h	/^  int			size_y;$/;"	E	interface:MlxWin
size_y	mlx/mlx_new_window.h	/^  int		size_y;$/;"	E	interface:NSWindowEvent
slide_closest_box	src/move_to_corner.c	/^void	slide_closest_box(t_player *p, int closest_box)$/;"	f	typeref:typename:void
sodipodi	assets/meters_and_bars.svg	/^   sodipodi:docname="meters_and_bars.svg">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
sort_obstacle	src/raycasting.c	/^void	sort_obstacle(t_list **lst)$/;"	f	typeref:typename:void
south_crossing	src/move_crossing_box.c	/^int	south_crossing(t_data *data)$/;"	f	typeref:typename:int
speed	include/structs.h	/^	int		speed;$/;"	m	struct:s_player	typeref:typename:int
sprint	include/structs.h	/^	unsigned int	sprint;$/;"	m	struct:s_key_status	typeref:typename:unsigned int
sprite_ls	include/structs.h	/^	t_sprite		*sprite_ls;$/;"	m	struct:s_image	typeref:typename:t_sprite *
stamina	include/structs.h	/^	unsigned 	int stamina;$/;"	m	struct:s_player	typeref:typename:unsigned int
state	include/structs.h	/^	int state;$/;"	m	struct:s_sprite	typeref:typename:int
still_in_map	src/map_ft.c	/^int	still_in_map(t_data *data, t_point pt)$/;"	f	typeref:typename:int
strlcpy_is_not_posix	minilibx_linux/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char *src, unsigned int size)$/;"	f	typeref:typename:unsigned int
svg	assets/meters_and_bars.svg	/^   sodipodi:docname="meters_and_bars.svg">$/;"	n	uri:http://www.w3.org/2000/svg
svg23489	assets/meters_and_bars.svg	/^   sodipodi:docname="meters_and_bars.svg">$/;"	i
t_cam	include/structs.h	/^}	t_cam;$/;"	t	typeref:struct:s_cam
t_data	include/structs.h	/^}	t_data;$/;"	t	typeref:struct:s_data
t_event_list	minilibx_linux/mlx_int.h	/^}				t_event_list;$/;"	t	typeref:struct:s_event_list
t_image	include/structs.h	/^}	t_image;$/;"	t	typeref:struct:s_image
t_img	minilibx_linux/mlx_int.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_img_data	include/structs.h	/^}	t_img_data;$/;"	t	typeref:struct:s_img_data
t_key_status	include/structs.h	/^}	t_key_status;$/;"	t	typeref:struct:s_key_status
t_list	include/structs.h	/^}   t_list;$/;"	t	typeref:struct:s_list
t_menu	include/structs.h	/^} t_menu;$/;"	t	typeref:struct:s_menu
t_obstacle	include/structs.h	/^}	t_obstacle;$/;"	t	typeref:struct:s_obstacle
t_player	include/structs.h	/^}	t_player;$/;"	t	typeref:struct:s_player
t_point	include/structs.h	/^}	t_point;$/;"	t	typeref:struct:s_point
t_ray	include/structs.h	/^}	t_ray;$/;"	t	typeref:struct:s_ray
t_rayponse	include/structs.h	/^}	t_rayponse;$/;"	t	typeref:struct:s_rayponse
t_sprite	include/structs.h	/^}	t_sprite;$/;"	t	typeref:struct:s_sprite
t_vector	include/structs.h	/^}	t_vector;$/;"	t	typeref:struct:s_vector
t_win_list	minilibx_linux/mlx_int.h	/^}				t_win_list;$/;"	t	typeref:struct:s_win_list
t_window	include/structs.h	/^}	t_window;$/;"	t	typeref:struct:s_window
t_xpm_col	minilibx_linux/mlx_int.h	/^}				t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xpm_col	mlx/mlx_xpm.c	/^} t_xpm_col;$/;"	t	typeref:struct:s_xpm_col	file:
t_xvar	minilibx_linux/mlx_int.h	/^}				t_xvar;$/;"	t	typeref:struct:s_xvar
test	libft/Makefile	/^test: ctags$/;"	t
text34882	assets/meters_and_bars.svg	/^       transform="scale(1.1518027,0.86820426)"><tspan$/;"	i
text34892	assets/meters_and_bars.svg	/^       xml:space="preserve"><tspan$/;"	i
text34896	assets/meters_and_bars.svg	/^       transform="scale(1.1518027,0.86820426)"><tspan$/;"	i
texture	include/structs.h	/^	t_img_data			texture;$/;"	m	struct:s_obstacle	typeref:typename:t_img_data
texture	mlx/mlx_int.h	/^  GLuint		texture;$/;"	m	struct:mlx_img_ctx_s	typeref:typename:GLuint
textureX	include/structs.h	/^	int				textureX;$/;"	m	struct:s_obstacle	typeref:typename:int
texture_path	include/structs.h	/^	char			*texture_path[NB_TEXTURES];$/;"	m	struct:s_image	typeref:typename:char * []
three	include/structs.h	/^	unsigned int three;$/;"	m	struct:s_menu	typeref:typename:unsigned int
translate_pt	src/vector_ft.c	/^t_point	translate_pt(t_vector vector, t_point pt)$/;"	f	typeref:typename:t_point
translate_pt_inplace	src/vector_ft.c	/^t_point	translate_pt_inplace(t_vector vector, t_point *pt)$/;"	f	typeref:typename:t_point
translate_vector_as_pt	src/vector_ft.c	/^void	translate_vector_as_pt(t_vector vector, t_vector *pt)$/;"	f	typeref:typename:void
tspan34884	assets/meters_and_bars.svg	/^         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;fil/;"	i
tspan34894	assets/meters_and_bars.svg	/^         sodipodi:role="line">195 \/ 200<\/tspan><\/text>$/;"	i
tspan34898	assets/meters_and_bars.svg	/^         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;fil/;"	i
two	include/structs.h	/^	unsigned int two;$/;"	m	struct:s_menu	typeref:typename:unsigned int
type	include/structs.h	/^	int type;$/;"	m	struct:s_sprite	typeref:typename:int
type	minilibx_linux/mlx_int.h	/^	int				type;$/;"	m	struct:s_img	typeref:typename:int
units_pos_to_minimap_pos	src/load_window.c	/^t_point	units_pos_to_minimap_pos(t_data *data, t_point absolute_position)$/;"	f	typeref:typename:t_point
update_pos_if_wall	src/move_player.c	/^int	update_pos_if_wall(t_data *data, int crossover_direction)$/;"	f	typeref:typename:int
update_pos_in_pix	src/pos_update.c	/^t_point	update_pos_in_pix(t_player *player)$/;"	f	typeref:typename:t_point
update_pos_in_step	src/pos_update.c	/^t_point	update_pos_in_step(t_player *player)$/;"	f	typeref:typename:t_point
use_xshm	minilibx_linux/mlx_int.h	/^	int			use_xshm;$/;"	m	struct:s_xvar	typeref:typename:int
vbuffer	mlx/mlx_int.h	/^  GLuint		vbuffer;$/;"	m	struct:mlx_img_ctx_s	typeref:typename:GLuint
vec_len	src/vector_ft.c	/^double	vec_len(t_vector vector)$/;"	f	typeref:typename:double
vec_scale	src/vector_ft.c	/^t_vector	vec_scale(t_vector vector, double scale)$/;"	f	typeref:typename:t_vector
vector_dot_product	src/vector_ft.c	/^double	vector_dot_product(t_vector v1, t_vector v2)$/;"	f	typeref:typename:double
vertexes	mlx/mlx_int.h	/^  GLfloat		vertexes[8];$/;"	m	struct:mlx_img_list_s	typeref:typename:GLfloat[8]
visual	minilibx_linux/mlx_int.h	/^	Visual		*visual;$/;"	m	struct:s_xvar	typeref:typename:Visual *
void	mlx/mlx_new_window.h	/^  void		*(event_param[MAX_EVENT]);$/;"	E	interface:NSWindowEvent
w	include/structs.h	/^	unsigned int	w;$/;"	m	struct:s_key_status	typeref:typename:unsigned int
wall_textures	include/structs.h	/^	t_img_data		*wall_textures[NB_TEXTURES];$/;"	m	struct:s_data	typeref:typename:t_img_data * []
west_crossing	src/move_crossing_box.c	/^int	west_crossing(t_data *data)$/;"	f	typeref:typename:int
width	include/structs.h	/^	int		width;$/;"	m	struct:s_window	typeref:typename:int
width	include/structs.h	/^	int width;$/;"	m	struct:s_img_data	typeref:typename:int
width	minilibx_linux/mlx_int.h	/^	int				width;$/;"	m	struct:s_img	typeref:typename:int
width	mlx/font.c	/^  unsigned int 	 width;$/;"	m	struct:__anone97f5d2d0108	typeref:typename:unsigned int	file:
width	mlx/mlx_int.h	/^  int			width;$/;"	m	struct:mlx_img_list_s	typeref:typename:int
width	mlx/mlx_png.c	/^  unsigned int	width;$/;"	m	struct:png_info_s	typeref:typename:unsigned int	file:
win	mlx/mlx_new_window.h	/^  NSWindowEvent		*win;$/;"	E	interface:MlxWin
win	mlx/mlx_new_window.h	/^- (NSWindowEvent *) win;$/;"	m	interface:MlxWin
win	mlx/mlx_new_window.m	/^{$/;"	m	implementation:MlxWin
win_count	minilibx_linux/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/;"	f	typeref:typename:int	file:
win_list	minilibx_linux/mlx_int.h	/^	t_win_list	*win_list;$/;"	m	struct:s_xvar	typeref:typename:t_win_list *
win_list	mlx/mlx_int.h	/^  mlx_win_list_t	*win_list;$/;"	m	struct:mlx_ptr_s	typeref:typename:mlx_win_list_t *
window	include/structs.h	/^	t_window		*window;$/;"	m	struct:s_data	typeref:typename:t_window *
window	minilibx_linux/mlx_int.h	/^	Window				window;$/;"	m	struct:s_win_list	typeref:typename:Window
winid	mlx/mlx_int.h	/^  void			*winid;$/;"	m	struct:mlx_win_list_s	typeref:typename:void *
wm_delete_window	minilibx_linux/mlx_int.h	/^	Atom		wm_delete_window;$/;"	m	struct:s_xvar	typeref:typename:Atom
wm_protocols	minilibx_linux/mlx_int.h	/^	Atom		wm_protocols;$/;"	m	struct:s_xvar	typeref:typename:Atom
world_render	src/cub3d_render.c	/^void	world_render(t_data *data)$/;"	f	typeref:typename:void
wrong_color	src/parse_file_colors.c	/^void	wrong_color(t_data *data, char *color_strimed)$/;"	f	typeref:typename:void
x	include/structs.h	/^	double	x;$/;"	m	struct:s_vector	typeref:typename:double
x	include/structs.h	/^	int	x;$/;"	m	struct:s_point	typeref:typename:int
x	include/structs.h	/^	int x;$/;"	m	struct:s_sprite	typeref:typename:int
x_or_y	include/structs.h	/^enum x_or_y { _x, _y };$/;"	g
y	include/structs.h	/^	double	y;$/;"	m	struct:s_vector	typeref:typename:double
y	include/structs.h	/^	int	y;$/;"	m	struct:s_point	typeref:typename:int
y	include/structs.h	/^	int y;$/;"	m	struct:s_sprite	typeref:typename:int
y_x	src/utils.c	/^t_point	y_x(int y, int x)$/;"	f	typeref:typename:t_point
z	include/structs.h	/^	int z;$/;"	m	struct:s_sprite	typeref:typename:int
