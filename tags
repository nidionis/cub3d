Mmain	src/main.c	/^int	main(int argc, char *argv[])$/
check_closest_box	src/move_to_corner.c	/^int	check_closest_box(t_player *player)$/
check_map	src/parse_check_map.c	/^int	check_map(t_data *data)$/
check_map_line	src/parse_check_map.c	/^void	check_map_line(t_data *data, int y, int *nb_p/
check_param_not_missing	src/parse_import.c	/^void	check_param_not_missing(t_data *data)$/
check_update_box_pos	src/move_player.c	/^int	check_update_box_pos(t_data *data)$/
clean_exit	src/exit_ft.c	/^void	clean_exit(t_data *data, int exit_code)$/
clean_useless_empty_splace	src/parse_format_map.c	/^void	clean_useless_empty_splace(char	**map)$/
complete_line_to_width	src/parse_format_map.c	/^void	complete_line_to_width(t_data *data, char **l/
conv_id_param	src/parse_params.c	/^int	conv_id_param(t_data *data, int identifier_len/
corner_crossing	src/move_to_corner.c	/^int	corner_crossing(t_data *data)$/
degree_to_radian	src/vector_ft.c	/^double	degree_to_radian(double degree_angle)$/
delete_first_column	src/parse_format_map.c	/^void	delete_first_column(char **map)$/
distance_point_to_vector	src/vector_ft.c	/^double	distance_point_to_vector(t_point point, t_p/
draw_cube	src/ft_window_init.c	/^void	draw_cube(t_window *window, int size, int pos/
draw_line	src/ft_window_init.c	/^void	draw_line(t_data *data, t_point	*start, t_poi/
draw_mini_map	src/ft_window_init.c	/^void	draw_mini_map(t_data *data)$/
draw_player	src/ft_window_init.c	/^void	draw_player(t_data *data)$/
e_cardinal	include/cub3d.h	/^enum e_cardinal { NORTH, SOUTH, EAST, WEST };$/
e_direction	include/cub3d.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW/
e_identifiers	include/cub3d.h	/^enum e_identifiers { NO, SO, WE, EA, F, C };$/
e_player_directio	include/cub3d.h	/^enum e_player_direction{ FORWARD, BACKWARD, RIGHT,/
east_crossing	src/move_crossing_box.c	/^int	east_crossing(t_data *data)$/
exit_game	src/ft_key_event.c	/^int exit_game(t_data *data)$/
exit_msg	src/exit_ft.c	/^void	exit_msg(t_data *data, char *msg, int ret_exi/
f_is_box_crossed	src/move_player.c	/^static int	f_is_box_crossed(t_player *player)$/
file_extention_available	src/parse_init.c	/^void	file_extention_available(t_data *data, char */
fix_ang	src/ft_key_event.c	/^int fix_ang(int a)$/
format_map	src/parse_format_map.c	/^void	format_map(t_data *data)$/
ft_append_tab	src/matrix.c	/^char	**ft_append_tab(char **matrix, char *str)$/
ft_matrixlen	src/matrix.c	/^int	ft_matrixlen(char **matrix)$/
ft_realloc_cat	src/get_next_line.c	/^static char	*ft_realloc_cat(char *line, char c, in/
get_identifier	src/parse_params.c	/^int	get_identifier(t_data *data, char *str)$/
get_identifiers_ls	src/parse_params.c	/^char	**get_identifiers_ls(int identifier_len)$/
get_map_width	src/parse_format_map.c	/^int	get_map_width(char **map)$/
get_next_case	src/move_to_corner.c	/^char	get_next_case(char **map, t_point map_point, /
get_next_line	src/get_next_line.c	/^char	*get_next_line(int fd)$/
get_smallest_index	src/move_to_corner.c	/^int	get_smallest_index(double wall_distance[4])$/
import_param	src/parse_import.c	/^void	import_param(t_data *data, int identifier, ch/
import_params	src/parse_import.c	/^int	import_params(t_data *data)$/
import_texture_path	src/parse_import.c	/^void	import_texture_path(t_data *data, int identif/
init_cam_vector	src/rayparsing.c	/^void	init_cam_vector(t_data *data)$/
init_f_c_color	src/parse_file_colors.c	/^unsigned int	init_f_c_color(t_data *data, char *li/
init_fd	src/parse_init.c	/^void	init_fd(t_data *data, int *fd, char *fname)$/
init_null	src/parse_init.c	/^void	init_null(t_data *data, int *map_parse)$/
init_player	src/parse_init.c	/^void	init_player(t_data *data, int x, int y, int */
is_NSEW	src/parse_check_map.c	/^int	is_NSEW(char c)$/
is_blank_char	src/str_ft.c	/^int	is_blank_char(char c)$/
is_blank_line	src/str_ft.c	/^int	is_blank_line(char *line)$/
is_block	src/move_to_corner.c	/^int	is_block(t_data *data, char c)$/
is_border	src/parse_check_map.c	/^int	is_border(t_data *data, int x, int y, int matr/
is_first_column_empty	src/parse_format_map.c	/^int	is_first_column_empty(char **map)$/
is_map_line	src/str_ft.c	/^int	is_map_line(t_data *data, char *str)$/
is_mapcase	src/parse_check_map.c	/^int	is_mapcase(t_data *data, char c)$/
key_event	src/ft_key_event.c	/^int	key_event(int key, t_data *data)$/
log_type	include/cub3d.h	/^enum log_type { DATA, PARAM, CAM, PLAYER, MAP };$/
make_point	src/vector_ft.c	/^t_point	make_point(int x, int y)$/
malloc_data	src/main.c	/^ t_data	*malloc_data(void)$/
move_player	src/move_player.c	/^int	move_player(t_data *data, int move)$/
north_crossing	src/move_crossing_box.c	/^int	north_crossing(t_data *data)$/
parse_file	src/parse_import.c	/^void	parse_file(char *fname, t_data *data)$/
parsing_loop	src/parse_import.c	/^int	parsing_loop(t_data *data, int *map_parse)$/
pix_pos_in_box	src/pos_update.c	/^static t_point	pix_pos_in_box(t_point pos_box)$/
pix_pos_to_map_case	src/map_ft.c	/^char	pix_pos_to_map_case(t_point absolute_pos, cha/
pix_pos_to_map_pos	src/map_ft.c	/^t_point	pix_pos_to_map_pos(t_point absolute_pos)$/
player_init	src/ft_player_init.c	/^int	player_init(char **map, t_player *player)$/
print_cam	src/debug_ft.c	/^void	print_cam(t_data *data, int fd)$/
print_data	src/debug_ft.c	/^void	print_data(t_data *data, int fd)$/
print_map	src/debug_ft.c	/^void	print_map(t_data *data, int fd)$/
print_params	src/debug_ft.c	/^void	print_params(t_data *data, int fd)$/
print_player	src/debug_ft.c	/^void	print_player(t_data *data, int fd)$/
ray_cast	src/ft_window_init.c	/^int	ray_cast(t_data *data)$/
rectangle_map	src/parse_format_map.c	/^void	rectangle_map(t_data *data, char **map)$/
redir_debug_file_logs	src/debug_ft.c	/^void	redir_debug_file_logs(t_data *data, char *fna/
redir_debug_file_msg	src/debug_ft.c	/^void	redir_debug_file_msg(char *fname, char *msg)$/
refresh_ret_if_is_param	src/parse_params.c	/^static int	refresh_ret_if_is_param(char **identifi/
render_map_2d	src/ft_window_init.c	/^int	render_map_2d(t_data *data)$/
rgb_conv	src/parse_file_colors.c	/^unsigned int	rgb_conv(int R, int G, int B)$/
rotate_vector	src/vector_ft.c	/^void	rotate_vector(t_vector *vector, double radian/
set_arRay	src/rayparsing.c	/^void	set_arRay(t_data *data)$/
set_delta_distance	src/rayparsing.c	/^void	set_delta_distance(t_data *data)$/
set_plane_dir	src/rayparsing.c	/^void	set_plane_dir(t_data *data, double plan_size)/
set_plane_origin	src/rayparsing.c	/^void	set_plane_origin(t_data *data)$/
set_side_distance	src/rayparsing.c	/^void	set_side_distance(t_data *data)$/
shift_line_left	src/parse_format_map.c	/^void	shift_line_left(char *line)$/
slide_closest_box	src/move_to_corner.c	/^void	slide_closest_box(t_player *p, int closest_bo/
south_crossing	src/move_crossing_box.c	/^int	south_crossing(t_data *data)$/
t_cam	include/cub3d.h	/^}	t_cam;$/
t_data	include/cub3d.h	/^}	t_data;$/
t_image	include/cub3d.h	/^}	t_image;$/
t_player	include/cub3d.h	/^}	t_player;$/
t_point	include/cub3d.h	/^}	t_point;$/
t_ray	include/cub3d.h	/^}	t_ray;$/
t_ray_casting	include/cub3d.h	/^\/\/ }	t_ray_casting;$/
t_vector	include/cub3d.h	/^}	t_vector;$/
t_window	include/cub3d.h	/^}	t_window;$/
test_function	src/main.c	/^void	test_function(t_data *data)$/
translate_pt	src/vector_ft.c	/^void	translate_pt(t_vector vector, t_point *pt)$/
translate_vector_as_pt	src/vector_ft.c	/^void	translate_vector_as_pt(t_vector vector, t_vec/
update_pos_if_wall	src/move_player.c	/^int	update_pos_if_wall(t_data *data, int crossover/
update_pos_in_pix	src/pos_update.c	/^t_point	update_pos_in_pix(t_player *player)$/
update_pos_in_step	src/pos_update.c	/^t_point	update_pos_in_step(t_player *player)$/
vec_scale	src/vector_ft.c	/^t_vector	vec_scale(t_vector vector, double scale)$/
west_crossing	src/move_crossing_box.c	/^int	west_crossing(t_data *data)$/
window_init	src/ft_window_init.c	/^int	window_init(t_window *window)$/
wrong_color	src/parse_file_colors.c	/^void	wrong_color(t_data *data, char *color_strimed/
