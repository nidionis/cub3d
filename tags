Copyright	libmlx/LICENSE	/^Copyright (c) 2021, Ecole 42$/
I	sounds/menu.wav	/^‰-ÉV0:ƒ2ﬂ!5zW7¸T9L';Y’<H>ãv?º q@ø!NAè"B/
L	obj_bonus/ft_list2.o	/^/
Mconfigure	libmlx/configure	/^main(){$/
Mmain	src/main.c	/^int	main(int argc, char *argv[])$/
P	obj_bonus/raycasting_utils.o	/^/
STREQ	SDL-release-2.26.1/libtool	/^#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)$/
T	sounds/gameover.wav	/^µÈ%Z~Õ‰ e"Úr"KÙâı ÷$ñ'O#É(¨qöi/
U	sounds/gameover.wav	/^∏ˇ´	˝§w˚'Î∫ÌsˆÁˇ–·‡ÛDıE·Ë¬°ÏbÈ ‡Ã/
W	sounds/menu.wav	/^€ˇ¥4woS¨JÒQ?t°•⁄ò.9ï/
Window	libmlx/README.md	/^This is the MinilibX, a simple X-Window (X11R6) pr/
X	mlx/mlx_new_window.h	/^- (void) pixelPutColor: (int)color X:(int)x Y:(int/
XFREE	SDL-release-2.26.1/libtool	/^#define XFREE(stale) do { \\$/
XMALLOC	SDL-release-2.26.1/libtool	/^#define XMALLOC(type, num)      ((type *) xmalloc /
add_img_to_ctx	mlx/mlx_new_image.m	/^mlx_img_ctx_t	*add_img_to_ctx(mlx_img_list_t *img,/
alloc_mem	src/utils.c	/^char	**alloc_mem(int size_y, int size_x)$/
alloc_menu	src_bonus/load_menu.c	/^void	alloc_menu(t_data *data)$/
as_fn_arith	SDL-release-2.26.1/config.status	/^  eval 'as_fn_arith ()$/
as_fn_executable_p	SDL-release-2.26.1/config.status	/^as_fn_executable_p ()$/
back_track_door	src/check_path_door.c	/^int	back_track_door(t_data *data, char **map, int /
back_track_map	src/check_path_map.c	/^int	back_track_map(t_data *data, char **map, int r/
back_track_switch	src/check_path_switch.c	/^int	back_track_switch(t_data *data, char **map, in/
beam	src/raycasting.c	/^void	beam(t_data *data, t_rayponse *rayponse)$/
brackets	SDL-release-2.26.1/config.log	/^conftest.cpp:200:36: error: a space is required be/
c_to_i	libft/ft_atoi.c	/^static long int	c_to_i(char c)$/
carry_negative	libft/ft_itoa.c	/^static char	*carry_negative(int *n, char *n_strn, /
change	src/utils.c	/^void	change(t_data *data, t_img_data *img)$/
change_to_black	src/utils.c	/^void	change_to_black(t_data *data, t_img_data *img/
check_closest_box	src/move_to_corner.c	/^int	check_closest_box(t_player *player)$/
check_content_side	src/generate_map.c	/^void	check_content_side(t_data *data, int *wall_si/
check_dx_value	src/draw_line.c	/^void	check_dx_value(t_line *line, t_point	*start, /
check_dy_value	src/draw_line.c	/^void	check_dy_value(t_line *line, t_point	*start, /
check_map	src/parse_check_map.c	/^int	check_map(t_data *data)$/
check_map_line	src/parse_check_map.c	/^void	check_map_line(t_data *data, int y, int *nb_p/
check_north_south	src/end_game.c	/^int	check_north_south(t_player *player, t_assets */
check_param_not_missing	src/parse_import.c	/^void	check_param_not_missing(t_data *data)$/
check_path_door	src/check_path_door.c	/^int	check_path_door(t_data *data, int row, int col/
check_path_map	src/check_path_map.c	/^int	check_path_map(t_data *data, int row, int col)/
check_path_switch	src/check_path_switch.c	/^int	check_path_switch(t_data *data, int row, int c/
check_update_box_pos	src/move_player.c	/^int	check_update_box_pos(t_data *data)$/
check_wall_side	src_bonus/generate_map.c	/^void	check_wall_side(t_data *data, int *wall_side,/
clean	libmlx/configure	/^clean(){$/
clean_exit	src/exit_ft.c	/^void	clean_exit(t_data *data, int exit_code)$/
clean_obstacle_behind_wall	src/bonus_raycasting.c	/^void	clean_obstacle_behind_wall(t_list **list, dou/
clean_useless_empty_splace	src/parse_format_map.c	/^void	clean_useless_empty_splace(char	**map)$/
clear_img	src/render_menu.c	/^void	clear_img(t_img_data *img)$/
closeNotification	mlx/mlx_new_window.m	/^- (void) closeNotification:(NSNotification *)note$/
closest_in_list	src/bonus_raycasting.c	/^static t_list	*closest_in_list(t_list **lst)$/
complete	src_bonus/draw_map_border.c	/^void	complete(t_point *new, t_point *old, int size/
complete_line_to_width	src/parse_format_map.c	/^void	complete_line_to_width(t_data *data, char **l/
control_key_press	src_bonus/key_event.c	/^void	control_key_press(int key, t_data *data)$/
controls	src/keys_game.c	/^void controls(t_data *data, int key)$/
conv_id_param	src/parse_params.c	/^int	conv_id_param(t_data *data, int identifier_len/
convert_pt_to_vec	src/vector_ft.c	/^t_vector	convert_pt_to_vec(t_point p)$/
corner_crossing	src/move_to_corner.c	/^int	corner_crossing(t_data *data)$/
cub3d_render	src/cub3d_render.c	/^int	cub3d_render(t_data *data)$/
d	sounds/gameover.wav	/^a	˘ôV+H1<›As,q6gõ(%?'e+;2≥0	E8K"4Œ<’+32\\0q/
degree_to_radian	src/vector_ft.c	/^double	degree_to_radian(double degree_angle)$/
delegate	SDL-release-2.26.1/config.log	/^    delegate(): delegate(2354) {}$/
delete_first_column	src/parse_format_map.c	/^void	delete_first_column(char **map)$/
deminiaturizeNotification	mlx/mlx_new_window.m	/^- (void) deminiaturizeNotification:(NSNotification/
direction_move	src/move_player.c	/^void	direction_move(t_data *data)$/
display_log	mlx/mlx_shaders.c	/^void display_log(GLuint object, void (*param_func)/
distance_line_to_point	src/vector_ft.c	/^double	distance_line_to_point(t_vector line[2], t_/
distance_point_to_vector	src/vector_ft.c	/^double	distance_point_to_vector(t_point point, t_p/
distance_points	src/vector_ft.c	/^double	distance_points(t_point p1, t_point p2)$/
do_loop_flush	mlx/mlx_init_loop.m	/^void do_loop_flush(CFRunLoopObserverRef observer, /
do_loop_hook2	mlx/mlx_init_loop.m	/^void	do_loop_hook2(CFRunLoopTimerRef observer, voi/
draw_ceiling_floor_mandatory	src/draw_functions.c	/^void	draw_ceiling_floor_mandatory(t_data *data)$/
draw_cube	src/draw_functions.c	/^void	draw_cube(t_data *data, int size, t_point pos/
draw_image	src/load_menu.c	/^void	draw_image(t_img_data *img1, t_img_data *img2/
draw_interface	src/draw_interface.c	/^void	draw_interface(t_data *data)$/
draw_line	src/draw_line.c	/^void	draw_line(t_data *data, t_point	*start, t_poi/
draw_map	src/draw_functions.c	/^void	draw_map(t_data *data)$/
draw_map_border	src/generate_map.c	/^void	draw_map_border(t_data *data, int size_y, int/
draw_menu_controls	src_bonus/keys_menu_utils.c	/^void	draw_menu_controls(t_data *data)$/
draw_menu_extras	src_bonus/keys_menu_utils.c	/^void	draw_menu_extras(t_data *data)$/
draw_mini_map	src/draw_functions.c	/^void	draw_mini_map(t_data *data)$/
draw_obstacle_texture	src/bonus_render.c	/^void	draw_obstacle_texture(t_data *data, t_point p/
draw_obstacles	src/bonus_render.c	/^void	draw_obstacles(t_data *data, t_point pts[2]$/
draw_player	src/draw_functions.c	/^void	draw_player(t_data *data)$/
draw_rain	src/draw_functions2.c	/^void	draw_rain(t_data *data, int lines)$/
draw_stamina_hud	src/draw_functions2.c	/^void	draw_stamina_hud(t_data *data)$/
draw_string	src/game_event.c	/^void	draw_string(t_data *data)$/
draw_texture	src/bonus_render2.c	/^void	draw_texture(t_data *data, t_point pts[2], \\/
draw_vision_field	src/draw_functions.c	/^void	draw_vision_field(t_data *data, t_point minim/
draw_wall_textured	src/bonus_render.c	/^void	draw_wall_textured(t_data *data, int i_ray)$/
draw_x_line	src/draw_line.c	/^void	draw_x_line(t_data *data, t_line *line, int c/
draw_y_line	src/draw_line.c	/^void	draw_y_line(t_data *data, t_line *line, int c/
e_cardinal	include/structs.h	/^enum e_cardinal { NORTH, SOUTH, EAST, WEST };$/
e_direction	include/structs.h	/^enum e_direction { N=1, S=2, W=10, E=20, NW=11, SW/
e_identifiers	include/structs.h	/^enum e_identifiers { NO, SO, EA, WE, F, C };$/
e_log_type	include_bonus/structs_bonus.h	/^enum e_log_type { DATA, PARAM, CAM, PLAYER, MAP};$/
e_others	include/structs.h	/^enum e_others {LINE_WIDTH = (int)SCREEN_WIDTH \/ (/
e_player_directio	include/structs.h	/^enum e_player_direction{ FORWARD, BACKWARD, RIGHT,/
e_sprite	include/structs.h	/^enum e_sprite {SPRITE = -1};$/
e_x_or_y	include_bonus/structs_bonus.h	/^enum e_x_or_y { _x, _y };$/
east_crossing	src/move_crossing_box.c	/^int	east_crossing(t_data *data)$/
end_game	src/end_game.c	/^int	end_game(t_data *data, t_assets *asset)$/
error_msg	libft/error_msg.c	/^void	error_msg(char *msg)$/
exit_game	src/exit_ft.c	/^int	exit_game(t_data *data)$/
exit_msg	src/exit_ft.c	/^void	exit_msg(t_data *data, char *msg, int ret_exi/
exposeNotification	mlx/mlx_new_window.m	/^- (void) exposeNotification:(NSNotification *)note/
f_is_box_crossed	src/move_player.c	/^int	f_is_box_crossed(t_player *player)$/
file_extention_available	src/parse_init.c	/^void	file_extention_available(t_data *data, char */
fix_ang	src/key_event.c	/^int	fix_ang(int a)$/
flagsChanged	mlx/mlx_new_window.m	/^- (void) flagsChanged:(NSEvent *)theEvent$/
for	SDL-release-2.26.1/config.log	/^  for (auto i = a3; *i; ++i) { total += *i; }$/
format_map	src/parse_format_map.c	/^void	format_map(t_data *data)$/
free_bonus_textures	src/free_functions.c	/^void	free_bonus_textures(t_data *data)$/
free_data	src/free_functions.c	/^void free_data(t_data *data)$/
free_everything	src/free_functions.c	/^void	free_everything(t_data *data)$/
free_menu	src/free_functions.c	/^void	free_menu(t_data *data)$/
free_test	src/free_functions.c	/^void	free_test(t_data *data)$/
free_texture_path	src/free_functions.c	/^void free_texture_path(t_data *data)$/
free_wall_textures	src/free_functions.c	/^void free_wall_textures(t_data *data)$/
ft_append_tab	src/matrix.c	/^char	**ft_append_tab(char **matrix, char *str)$/
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str0)$/
ft_atoi_err	libft/ft_atoi_err.c	/^int	ft_atoi_err(char *str)$/
ft_bzero	libft/ft_bzero.c	/^void	*ft_bzero(void *s, size_t n)$/
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/
ft_free_split	libft/ft_free_split.c	/^void	ft_free_split(char ***tab)$/
ft_get_next_wd	libft/ft_get_next_wd.c	/^char	*ft_get_next_wd(char *sentence, char sep)$/
ft_intlen	libft/ft_itoa.c	/^static int	ft_intlen(int n)$/
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/
ft_isspace	libft/ft_atoi.c	/^static int	ft_isspace(const char c)$/
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/
ft_lstadd_back	src/ft_list.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/
ft_lstadd_front	src/ft_list.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/
ft_lstclear	src/ft_list.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *)/
ft_lstdelone	src/ft_list.c	/^void	ft_lstdelone(t_list **lst, void (*del)(void */
ft_lstiter	src/ft_list.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/
ft_lstlast	src/ft_list.c	/^t_list	*ft_lstlast(t_list *lst)$/
ft_lstmap	src/ft_list.c	/^	*ft_lstmap(t_list *lst, void *(*f)(void*), void (/
ft_lstnew	src/ft_list.c	/^t_list	*ft_lstnew(void *content)$/
ft_lstsize	src/ft_list.c	/^int	ft_lstsize(t_list *lst)$/
ft_matrixlen	src/matrix.c	/^int	ft_matrixlen(char **matrix)$/
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *str0, int c, size_t n)/
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size/
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, unsign/
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_/
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/
ft_realloc_cat	src/get_next_line.c	/^static char	*ft_realloc_cat(char *line, char c, in/
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *str, int c)$/
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, /
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size/
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size/
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/
ft_strlen_char	libft/ft_strlen_char.c	/^size_t	ft_strlen_char(char *str, char sep)$/
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned/
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, siz/
ft_strnlen	libft/ft_strlcat.c	/^static unsigned int	ft_strnlen(char *s, size_t max/
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *str, const char *ndl,/
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(char *s, int c)$/
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start,/
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/
ft_wd_count	libft/ft_wd_count.c	/^int	ft_wd_count(char *str, char sep)$/
func_munge_path_list	SDL-release-2.26.1/config.status	/^func_munge_path_list ()$/
game_event	src/game_event.c	/^int	game_event(t_data *data)$/
generate_map	src/generate_map.c	/^int	generate_map(t_data *data)$/
generate_map_content	src/generate_map.c	/^void	generate_map_content(t_data *data, t_assets */
get_dist_from_plan	src/raycasting_utils.c	/^double	get_dist_from_plan(t_data *data, t_rayponse/
get_identifier	src/parse_params.c	/^int	get_identifier(t_data *data, char *str)$/
get_identifiers_ls	src/parse_params.c	/^char	**get_identifiers_ls(int identifier_len)$/
get_img_size	src/load_menu.c	/^t_point	get_img_size(t_data *data, char *path)$/
get_map_size	src/utils.c	/^void	get_map_size(t_data *data)$/
get_map_width	src/parse_format_map.c	/^int	get_map_width(char **map)$/
get_mouse_button	mlx/mlx_new_window.m	/^int get_mouse_button(NSEventType eventtype)$/
get_next_case	src/move_to_corner.c	/^char	get_next_case(char **map, t_point map_point, /
get_next_line	src/get_next_line.c	/^char	*get_next_line(int fd)$/
get_res_height	src/utils2.c	/^int	get_res_height(void)$/
get_res_width	src/utils2.c	/^int	get_res_width(void)$/
get_side_hit	src/raycasting_utils.c	/^int	get_side_hit(t_data *data, int index_closest)$/
get_smallest_index	src/move_to_corner.c	/^int	get_smallest_index(double wall_distance[4])$/
get_string_pos	src_bonus/draw_interface.c	/^t_point	get_string_pos(void)$/
get_texture_pix	src/bonus_render2.c	/^unsigned int	get_texture_pix(t_img_data *t, t_poin/
get_wallx	src/bonus_render2.c	/^int	get_wallx(t_rayponse *ray)$/
get_xlib_include_path	libmlx/configure	/^get_xlib_include_path(){$/
getval	SDL-release-2.26.1/config.log	/^    virtual int getval() override final { return t/
glsl_info_t	mlx/mlx_int.h	/^} glsl_info_t;$/
graphics_render	src/cub3d_render.c	/^int	graphics_render(t_data *data)$/
if	SDL-release-2.26.1/config.status	/^if (exec 3>&0) 2>\/dev\/null; then :; else exec 0</
ifeq	libmlx/Makefile	/^ifeq ($(UNAME),FreeBSD)$/
ifneq	SDL-release-2.26.1/Makefile	/^ifneq ($V,1)$/
import_bonus_textures	src/bonus_textures.c	/^void	import_bonus_textures(t_data *data)$/
import_param	src/parse_import.c	/^void	import_param(t_data *data, int identifier, ch/
import_params	src/parse_import.c	/^int	import_params(t_data *data)$/
import_texture_path	src/parse_import.c	/^void	import_texture_path(t_data *data, int identif/
import_textures	src/parse_import.c	/^void	import_textures(t_data *data)$/
include	SDL-release-2.26.1/sdl2-config.cmake	/^include(FeatureSummary)$/
initWithContentRect	mlx/mlx_new_window.h	/^- (NSWindowEvent *) initWithContentRect:(NSRect)re/
init_cam_vector	src/camera_ft.c	/^void	init_cam_vector(t_data *data)$/
init_f_c_color	src/parse_file_colors.c	/^unsigned int	init_f_c_color(t_data *data, char *li/
init_fd	src/parse_init.c	/^void	init_fd(t_data *data, int *fd, char *fname)$/
init_gameplay_var	src_bonus/main.c	/^void	init_gameplay_var(t_data *data)$/
init_key_status	src/key_event.c	/^void	init_key_status(t_data *data)$/
init_line_values	src/draw_line_utils.c	/^void	init_line_values(t_line *line, t_point	*start/
init_menu_var	src_bonus/load_menu.c	/^void	init_menu_var(t_data *data)$/
init_new_old_map	src/generate_map.c	/^void	init_new_old_map(t_point *new, t_point *old)$/
init_null	src/parse_init.c	/^void	init_null(t_data *data, int *map_parse)$/
init_player	src/parse_init.c	/^void	init_player(t_data *data, int x, int y, int */
init_player_direction	src/parse_init.c	/^void	init_player_direction(t_data *data, char c)$/
init_pos	src_bonus/minimap.c	/^t_point	init_pos(t_data *data)$/
init_pos2	src_bonus/minimap.c	/^t_point	init_pos2(void)$/
init_stamina_coord	src/draw_functions2.c	/^t_point	init_stamina_coord(t_data *data)$/
init_window_size	src_bonus/load_window.c	/^void	init_window_size(t_data *data)$/
initxvar	src/bonus_render2.c	/^void	initxvar(t_point *start, t_point *end, int *l/
inityvar	src/bonus_render2.c	/^void	inityvar(t_point *start, t_point *end, int *l/
int	mlx/mlx_int.h	/^typedef int (*func_t)();$/
is_blank_char	src/str_ft.c	/^int	is_blank_char(char c)$/
is_blank_line	src/str_ft.c	/^int	is_blank_line(char *line)$/
is_block	src/move_to_corner.c	/^int	is_block(t_data *data, char c)$/
is_border	src/parse_check_map.c	/^int	is_border(t_data *data, int x, int y, int matr/
is_cardinal	src/parse_check_map.c	/^int	is_cardinal(char c)$/
is_first_column_empty	src/parse_format_map.c	/^int	is_first_column_empty(char **map)$/
is_map_line	src/str_ft.c	/^int	is_map_line(t_data *data, char *str)$/
is_mapcase	src/parse_check_map.c	/^int	is_mapcase(t_data *data, char c)$/
is_trimable	libft/ft_strtrim.c	/^static int	is_trimable(char c, char *trimset)$/
j	sounds/menu.wav	/^ª˚¬	s˚j	(˚	Á˙Ωß˙d[˙˙ï∑˘(h˘¿˘Y¿¯Èv¯n'¯/
k6	sounds/gameover.wav	/^/
keyDown	mlx/mlx_new_window.m	/^- (void) keyDown:(NSEvent *)theEvent$/
keyUp	mlx/mlx_new_window.m	/^- (void) keyUp:(NSEvent *)theEvent$/
key_game	src/keys_game.c	/^int	key_game(int key, t_data *data)$/
key_press	src/key_event.c	/^int	key_press(int key, t_data *data)$/
key_realese	src/key_event.c	/^int	key_realese(int key, t_data *data)$/
len_overflow	src/raycasting_utils.c	/^int	len_overflow(int len)$/
linker	SDL-release-2.26.1/config.log	/^configure:14598: checking if the linker (\/Library/
list	SDL-release-2.26.1/sdl2-config.cmake	/^list(REMOVE_ITEM _sdl2_link_libraries SDL2 SDL2mai/
load_images	src/load_menu.c	/^int	load_images(t_data *data, t_img_data *image, c/
load_menu	src/load_menu.c	/^void load_menu(t_data *data)$/
load_window	src/load_window.c	/^int	load_window(t_data *data)$/
log_error	libmlx/configure	/^log_error(){$/
log_info	libmlx/configure	/^log_info(){$/
log_type	include/structs.h	/^enum log_type { DATA, PARAM, CAM, PLAYER, MAP };$/
logging	libmlx/configure	/^logging(){$/
m	sounds/gameover.wav	/^	BËDÙˆÈÙ‹ÛE˛ÜÚ?Û¿ı—Ù∑¸í“˙ßåÙ·˛}ÍÑÚÁ‚éﬁ=Ë.ÿlÔ”Ÿë/
make_obstacle	src/raycasting.c	/^t_list	*make_obstacle(t_data *data, t_rayponse ray/
make_point	src/vector_ft.c	/^t_point	make_point(int x, int y)$/
make_str	libft/ft_itoa.c	/^static void	make_str(int *n, char *n_str, int i)$/
make_tab	libft/ft_split.c	/^static char	**make_tab(char **returned, char const/
malloc_data	src/main.c	/^t_data	*malloc_data(void)$/
map_position_in_front_of_players	src/end_game.c	/^int	map_position_in_front_of_players(t_player *pla/
menu_enter_key	src/keys_menu.c	/^void	menu_enter_key(t_data *data)$/
menu_enter_key2	src/keys_menu.c	/^void	menu_enter_key2(t_data *data)$/
menu_highlight	src_bonus/render_menu.c	/^static void	menu_highlight(t_data *data, t_img_dat/
menu_key_press	src/keys_menu.c	/^void	menu_key_press(int key, t_data *data)$/
menu_s_key	src/keys_menu.c	/^void	menu_s_key(t_data *data)$/
menu_w_key	src/keys_menu.c	/^void	menu_w_key(t_data *data)$/
minimap_render	src/cub3d_render.c	/^int	minimap_render(t_data *data)$/
mipng_crc	mlx/mlx_png.c	/^int	mipng_crc(unsigned char *ptr, int len)$/
mipng_data	mlx/mlx_png.c	/^int	mipng_data(mlx_img_list_t *img, unsigned char /
mipng_defilter_average	mlx/mlx_png.c	/^unsigned char mipng_defilter_average(unsigned char/
mipng_defilter_none	mlx/mlx_png.c	/^unsigned char mipng_defilter_none(unsigned char *b/
mipng_defilter_paeth	mlx/mlx_png.c	/^unsigned char mipng_defilter_paeth(unsigned char */
mipng_defilter_sub	mlx/mlx_png.c	/^unsigned char mipng_defilter_sub(unsigned char *bu/
mipng_defilter_up	mlx/mlx_png.c	/^unsigned char mipng_defilter_up(unsigned char *buf/
mipng_fill_img	mlx/mlx_png.c	/^int	mipng_fill_img(mlx_img_list_t *img, unsigned c/
mipng_is_type	mlx/mlx_png.c	/^int	mipng_is_type(unsigned char *ptr, char *type)$/
mipng_magic	mlx/mlx_png.c	/^int	mipng_magic(unsigned char *ptr, int size)$/
mipng_structure	mlx/mlx_png.c	/^int	mipng_structure(unsigned char *ptr, int size, /
mipng_verif_hdr	mlx/mlx_png.c	/^int	mipng_verif_hdr(unsigned char *hdr, png_info_t/
mlx_clear_window	libmlx/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win/
mlx_destroy_display	libmlx/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/
mlx_destroy_image	libmlx/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/
mlx_destroy_window	libmlx/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *wi/
mlx_do_key_autorepeatoff	libmlx/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/
mlx_do_key_autorepeaton	libmlx/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/
mlx_do_sync	libmlx/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/
mlx_expose_hook	libmlx/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(/
mlx_ext_fullscreen	libmlx/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list /
mlx_flush_event	libmlx/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/
mlx_get_color_value	libmlx/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,i/
mlx_get_data_addr	libmlx/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_p/
mlx_get_screen_size	libmlx/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex/
mlx_gl_draw_font	mlx/mlx_new_window.m	/^- (void) mlx_gl_draw_font:(mlx_img_list_t *)img an/
mlx_gl_draw_img	mlx/mlx_new_window.m	/^- (void) mlx_gl_draw_img:(mlx_img_list_t *)img and/
mlx_hook	libmlx/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_m/
mlx_img_ctx_t	mlx/mlx_int.h	/^} mlx_img_ctx_t;$/
mlx_img_list_t	mlx/mlx_int.h	/^} mlx_img_list_t;$/
mlx_init	libmlx/mlx_init.c	/^void	*mlx_init()$/
mlx_int_anti_resize_win	libmlx/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window wi/
mlx_int_deal_shm	libmlx/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/
mlx_int_do_nothing	libmlx/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/
mlx_int_egal_img	libmlx/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/
mlx_int_file_get_rid_comment	libmlx/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int si/
mlx_int_get_col_name	libmlx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/
mlx_int_get_good_color	libmlx/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color/
mlx_int_get_line	libmlx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size/
mlx_int_get_text_rgb	libmlx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/
mlx_int_get_visual	libmlx/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/
mlx_int_loop_once	mlx/mlx_init_loop.m	/^void	mlx_int_loop_once()$/
mlx_int_new_image	libmlx/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, in/
mlx_int_new_xshm_image	libmlx/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int widt/
mlx_int_param_ButtonPress	libmlx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent/
mlx_int_param_ButtonRelease	libmlx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEve/
mlx_int_param_Expose	libmlx/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev,/
mlx_int_param_KeyPress	libmlx/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *e/
mlx_int_param_KeyRelease	libmlx/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent /
mlx_int_param_MotionNotify	libmlx/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEven/
mlx_int_param_generic	libmlx/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev/
mlx_int_param_undef	libmlx/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/
mlx_int_parse_png	mlx/mlx_png.c	/^mlx_img_list_t	*mlx_int_parse_png(mlx_ptr_t *xvar,/
mlx_int_parse_xpm	libmlx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,in/
mlx_int_rgb_conversion	libmlx/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/
mlx_int_set_win_event_mask	libmlx/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/
mlx_int_static_line	libmlx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos/
mlx_int_str_str	libmlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/
mlx_int_str_str_cote	libmlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int /
mlx_int_str_to_wordtab	libmlx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/
mlx_int_wait_first_expose	libmlx/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window /
mlx_int_xpm_f_image	libmlx/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width/
mlx_int_xpm_set_pixel	mlx/mlx_xpm.c	/^void	mlx_int_xpm_set_pixel(mlx_img_list_t *img, ch/
mlx_int_xpm_set_pointel	libmlx/mlx_xpm.c	/^int	mlx_int_xpm_set_pointel(t_img *img, char *data/
mlx_key_hook	libmlx/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),v/
mlx_loop	libmlx/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/
mlx_loop_end	libmlx/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/
mlx_loop_hook	libmlx/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void/
mlx_mouse_get_pos	libmlx/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *w/
mlx_mouse_hide	libmlx/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)/
mlx_mouse_hook	libmlx/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)()/
mlx_mouse_move	libmlx/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win,/
mlx_mouse_show	libmlx/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)/
mlx_new_image	libmlx/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int he/
mlx_new_image2	libmlx/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int h/
mlx_new_opengl_window	mlx/mlx_opengl.m	/^void	*mlx_new_opengl_window(mlx_ptr_t *mlx_ptr, in/
mlx_new_window	libmlx/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int s/
mlx_opengl_swap_buffers	mlx/mlx_opengl.m	/^int	mlx_opengl_swap_buffers(mlx_win_list_t *win_pt/
mlx_opengl_window_set_context	mlx/mlx_opengl.m	/^int	mlx_opengl_window_set_context(mlx_win_list_t */
mlx_pixel_put	libmlx/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/
mlx_png_file_to_image	mlx/mlx_png.c	/^void	*mlx_png_file_to_image(mlx_ptr_t *xvar, char /
mlx_ptr_t	mlx/mlx_int.h	/^} mlx_ptr_t;$/
mlx_put_image_to_window	libmlx/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_lis/
mlx_set_font	libmlx/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, c/
mlx_shaders	mlx/mlx_shaders.c	/^int mlx_shaders(glsl_info_t *glsl)$/
mlx_shaders_font	mlx/mlx_shaders.c	/^int mlx_shaders_font(glsl_info_t *glsl)$/
mlx_shaders_image	mlx/mlx_shaders.c	/^int mlx_shaders_image(glsl_info_t *glsl)$/
mlx_shaders_pixel	mlx/mlx_shaders.c	/^int mlx_shaders_pixel(glsl_info_t *glsl)$/
mlx_string_put	libmlx/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/
mlx_win_list_t	mlx/mlx_int.h	/^} mlx_win_list_t;$/
mlx_xpm_file_to_image	libmlx/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *fil/
mlx_xpm_to_image	libmlx/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,in/
mouseDown	mlx/mlx_new_window.m	/^- (void) mouseDown:(NSEvent *)theEvent$/
mouseDragged	mlx/mlx_new_window.m	/^- (void) mouseDragged:(NSEvent *)theEvent$/
mouseMoved	mlx/mlx_new_window.m	/^- (void) mouseMoved:(NSEvent *)theEvent$/
mouseUp	mlx/mlx_new_window.m	/^- (void) mouseUp:(NSEvent *)theEvent$/
mouse_event	src/mouse.c	/^int	mouse_event(t_data *data)$/
mouse_rotate	src/mouse.c	/^void	mouse_rotate(t_data *data)$/
move_player	src/move_player.c	/^int	move_player(t_data *data, int move)$/
movement	src/keys_game.c	/^void	movement(t_data *data, int key)$/
my_loc	libft/ft_itoa.c	/^static char	*my_loc(int len)$/
my_mlx_pixel_put	src/draw_line_utils.c	/^void	my_mlx_pixel_put(t_img_data *img, int x, int /
next_wall_dir	src/raycasting.c	/^t_rayponse	next_wall_dir(t_data *data, int dir, t_/
north_crossing	src/move_crossing_box.c	/^int	north_crossing(t_data *data)$/
one_step_forward	src/end_game.c	/^static int	one_step_forward(t_player *player_ficti/
otherMouseDown	mlx/mlx_new_window.m	/^- (void) otherMouseDown:(NSEvent *)theEvent$/
otherMouseDragged	mlx/mlx_new_window.m	/^- (void) otherMouseDragged:(NSEvent *)theEvent$/
otherMouseUp	mlx/mlx_new_window.m	/^- (void) otherMouseUp:(NSEvent *)theEvent$/
parse_args	libmlx/configure	/^parse_args(){$/
parse_file	src/parse_import.c	/^void	parse_file(char *fname, t_data *data)$/
parsing_loop	src/parse_import.c	/^int	parsing_loop(t_data *data, int *map_parse)$/
pix_pos_to_map_case	src/map_ft.c	/^char	pix_pos_to_map_case(t_data *data, t_point abs/
pix_pos_to_map_pos	src/map_ft.c	/^t_point	pix_pos_to_map_pos(t_point absolute_pos)$/
player_smoth_move	src/move_player.c	/^void	player_smoth_move(t_data *data)$/
png_info_t	mlx/mlx_png.c	/^} png_info_t;$/
pop_closest	src/bonus_raycasting.c	/^static void	pop_closest(t_list **lst, t_list *clos/
put_cube_map	src_bonus/map.c	/^void	put_cube_map(t_data *data, t_point pos, int w/
put_cube_minimap	src_bonus/minimap.c	/^void	put_cube_minimap(t_data *data, t_point pos, t/
q	sounds/gameover.wav	/^˚ÚÛ˚0¸qˇ(ˇdËÊÓ‚˝Œ°πæ–›Ω‘ﬂöÿFÔ˝Ó™¯E˜?˜øÈJÙå€ﬂÙ»ﬂ•ı/
rand_bg_color	src_bonus/render_menu.c	/^static int	rand_bg_color(t_data *data, t_img_data /
rand_index	src_bonus/generate_map.c	/^static int	rand_index(t_data *data)$/
re_generate_map	src_bonus/main.c	/^void	re_generate_map(t_data *data)$/
re_run_game	src/main.c	/^int re_run_game(t_data *data, char *argv)$/
rectangle_map	src/parse_format_map.c	/^void	rectangle_map(t_data *data, char **map)$/
refresh_hit_point	src/raycasting.c	/^t_point	refresh_hit_point(t_data *data, t_rayponse/
refresh_ret_if_is_param	src/parse_params.c	/^static int	refresh_ret_if_is_param(char **identifi/
remove_char	src/load_menu.c	/^char	*remove_char(char *str, char c)$/
render_game	src/game_event.c	/^int	render_game(t_data *data)$/
render_game2	src/game_event.c	/^int	render_game2(t_data *data)$/
render_menu	src/render_menu.c	/^int	render_menu(t_data *data)$/
res_enter_key	src/keys_resolution.c	/^void	res_enter_key(t_data *data)$/
res_s_key	src/keys_resolution.c	/^void	res_s_key(t_data *data)$/
res_w_key	src/keys_resolution.c	/^void	res_w_key(t_data *data)$/
resolution_key_press	src/keys_resolution.c	/^void	resolution_key_press(int key, t_data *data)$/
rgb_conv	src/parse_file_colors.c	/^unsigned int	rgb_conv(int R, int G, int B)$/
rightMouseDown	mlx/mlx_new_window.m	/^- (void) rightMouseDown:(NSEvent *)theEvent$/
rightMouseDragged	mlx/mlx_new_window.m	/^- (void) rightMouseDragged:(NSEvent *)theEvent$/
rightMouseUp	mlx/mlx_new_window.m	/^- (void) rightMouseUp:(NSEvent *)theEvent$/
rotate_player	src/rotate_player.c	/^void	rotate_player(t_player *player, int move)$/
rotate_vector	src/vector_ft.c	/^void	rotate_vector(t_vector *vector, double radian/
scrollWheel	mlx/mlx_new_window.m	/^- (void) scrollWheel:(NSEvent *)theEvent$/
set	SDL-release-2.26.1/sdl2-config-version.cmake	/^set(PACKAGE_VERSION "2.26.1")$/
setEvent	mlx/mlx_new_window.m	/^- (void) setEvent:(int)event andFunc:(func_t)func /
setKeyRepeat	mlx/mlx_new_window.m	/^- (void) setKeyRepeat:(int)mode$/
set_array	src/raycasting.c	/^void	set_array(t_data *data)$/
set_beam	src/raycasting_utils.c	/^void	set_beam(t_data *data, t_list **obstacles_ls)/
set_black_to_max	src/utils.c	/^int	set_black_to_max(int color)$/
set_delta_distance	src/ray_set_distances.c	/^void	set_delta_distance(t_data *data)$/
set_map	src_bonus/parse_import.c	/^static void	set_map(t_data *data)$/
set_plane_dir	src/camera_ft.c	/^void	set_plane_dir(t_data *data, double plane_size/
set_plane_origin	src/camera_ft.c	/^void	set_plane_origin(t_data *data)$/
set_red_to_max	src/utils.c	/^int	set_red_to_max(int color)$/
set_side_distance	src/ray_set_distances.c	/^void	set_side_distance(t_data *data)$/
settings_enter_key	src/keys_settings.c	/^void	settings_enter_key(t_data *data)$/
settings_key_press	src/keys_settings.c	/^void	settings_key_press(int key, t_data *data)$/
settings_s_key	src/keys_settings.c	/^void	settings_s_key(t_data *data)$/
settings_w_key	src/keys_settings.c	/^void	settings_w_key(t_data *data)$/
shift_line_left	src/parse_format_map.c	/^void	shift_line_left(char *line)$/
shm_att_pb	libmlx/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/
show_help	libmlx/configure	/^show_help(){$/
slide_closest_box	src/move_to_corner.c	/^void	slide_closest_box(t_player *p, int closest_bo/
sort_obstacles	src/bonus_raycasting.c	/^t_list	*sort_obstacles(t_list **lst)$/
south_crossing	src/move_crossing_box.c	/^int	south_crossing(t_data *data)$/
still_in_map	src/map_ft.c	/^int	still_in_map(t_data *data, t_point pt)$/
strlcpy_is_not_posix	libmlx/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char/
symbol	SDL-release-2.26.1/config.log	/^ld: symbol(s) not found for architecture x86_64$/
t_assets	include/structs.h	/^}	t_assets;$/
t_audio	include/structs.h	/^\/\/ }t_audio;$/
t_cam	include/structs.h	/^}	t_cam;$/
t_data	include/structs.h	/^}	t_data;$/
t_event_list	libmlx/mlx_int.h	/^}				t_event_list;$/
t_image	include/structs.h	/^}	t_image;$/
t_img	libmlx/mlx_int.h	/^}				t_img;$/
t_img_data	include/structs.h	/^}	t_img_data;$/
t_key_status	include/structs.h	/^}	t_key_status;$/
t_line	include/structs.h	/^}	t_line;$/
t_list	include/structs.h	/^}	t_list;$/
t_menu	include/structs.h	/^}	t_menu;$/
t_obstacle	include/structs.h	/^}	t_obstacle;$/
t_player	include/structs.h	/^}	t_player;$/
t_point	include/structs.h	/^}	t_point;$/
t_ray	include/structs.h	/^}	t_ray;$/
t_rayponse	include/structs.h	/^}	t_rayponse;$/
t_vector	include/structs.h	/^}	t_vector;$/
t_win_list	libmlx/mlx_int.h	/^}				t_win_list;$/
t_window	include/structs.h	/^}	t_window;$/
t_xpm_col	libmlx/mlx_int.h	/^}				t_xpm_col;$/
t_xvar	libmlx/mlx_int.h	/^}				t_xvar;$/
test	src_bonus/draw_image.c	/^void	test(t_point *img, t_img_data *img1, t_img_da/
test_template	SDL-release-2.26.1/config.log	/^| template <typename T> struct test_template$/
testinit	SDL-release-2.26.1/config.log	/^|   struct testinit$/
translate_pt	src/vector_ft.c	/^t_point	translate_pt(t_vector vector, t_point pt)$/
translate_pt_inplace	src/vector_ft.c	/^t_point	translate_pt_inplace(t_vector vector, t_po/
translate_vector_as_pt	src/vector_ft.c	/^void	translate_vector_as_pt(t_vector vector, t_vec/
units_pos_to_minimap_pos	src/load_window.c	/^t_point	units_pos_to_minimap_pos(t_data *data, t_p/
update_player	src/player_init.c	/^void	update_player(char **map, t_player *player)$/
update_pos_if_wall	src/move_player.c	/^int	update_pos_if_wall(t_data *data, int crossover/
update_pos_in_pix	src/pos_update.c	/^t_point	update_pos_in_pix(t_player *player)$/
update_pos_in_step	src/pos_update.c	/^t_point	update_pos_in_step(t_player *player)$/
v	sounds/gameover.wav	/^‰dÒ7’√⁄ÿﬂëÏ÷‰®Ù‚wÏò„rÿÂ’“¨Ÿ ÿª‡Õ¡—r√K¬•»ó…‹¡ﬁ/
vec_len	src/vector_ft.c	/^double	vec_len(t_vector vector)$/
vec_scale	src/vector_ft.c	/^t_vector	vec_scale(t_vector vector, double scale)$/
vector_dot_product	src/vector_ft.c	/^double	vector_dot_product(t_vector v1, t_vector v2/
verify_fd	src_bonus/load_menu_utils.c	/^void	verify_fd(int fd, char *path)$/
w	sounds/gameover.wav	/^ä-ï0^íS´O¢F:Ò:6TkTZZÏV»9§<∂=Ë@°eUâgsHË>Ü,:1:3/
west_crossing	src/move_crossing_box.c	/^int	west_crossing(t_data *data)$/
while	libmlx/rgb2c.pl	/^while (<RGB>)$/
win_count	libmlx/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/
world_render	src/cub3d_render.c	/^void	world_render(t_data *data)$/
wrong_color	src/parse_file_colors.c	/^void	wrong_color(t_data *data, char *color_strimed/
x	sounds/gameover.wav	/^Y¯Â	Æ˜z¨˘{˙.	Âˆ	ËÛUD˘	 \\›/
x86_64h	SDL-release-2.26.1/config.log	/^Processor type: x86_64h (Intel x86-64h Haswell)$/
x_or_y	include/structs.h	/^enum x_or_y { _x, _y };$/
y_x	src/utils.c	/^t_point	y_x(int y, int x)$/
z	sounds/gameover.wav	/^»h]%U`T%SG"ıhfÌòA™Í%"„%z(h$O\/V%/
