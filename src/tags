!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/dusseche/cub3d/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220828.0/
add_obstacle	bonus_raycasting.c	/^void	add_obstacle(t_data *data, t_rayponse ray, char map_case, int dir, t_list **obstacles_ls)$/;"	f	typeref:typename:void
back_track_finder	check_path.c	/^int	back_track_finder(t_data *data, char **map, int row, int col)$/;"	f	typeref:typename:int
beam	bonus_raycasting.c	/^void	beam(t_data *data, t_rayponse *rayponse)$/;"	f	typeref:typename:void
beam	raycasting.c	/^void	beam(t_data *data, t_rayponse *rayponse)$/;"	f	typeref:typename:void
check_closest_box	move_to_corner.c	/^int	check_closest_box(t_player *player)$/;"	f	typeref:typename:int
check_map	parse_check_map.c	/^int	check_map(t_data *data)$/;"	f	typeref:typename:int
check_map_line	parse_check_map.c	/^void	check_map_line(t_data *data, int y, int *nb_player)$/;"	f	typeref:typename:void
check_param_not_missing	parse_import.c	/^void	check_param_not_missing(t_data *data)$/;"	f	typeref:typename:void
check_path	check_path.c	/^int	check_path(t_data *data, int row, int col)$/;"	f	typeref:typename:int
check_update_box_pos	move_player.c	/^int	check_update_box_pos(t_data *data)$/;"	f	typeref:typename:int
clean_exit	exit_ft.c	/^void	clean_exit(t_data *data, int exit_code)$/;"	f	typeref:typename:void
clean_obstacle_behind_wall	bonus_raycasting.c	/^void	clean_obstacle_behind_wall(t_list **list, double distance_max)$/;"	f	typeref:typename:void
clean_useless_empty_splace	parse_format_map.c	/^void	clean_useless_empty_splace(char	**map)$/;"	f	typeref:typename:void
clear_img	render_menu.c	/^void	clear_img(t_img_data *img)$/;"	f	typeref:typename:void
closest_in_list	bonus_raycasting.c	/^t_list	*closest_in_list(t_list **lst)$/;"	f	typeref:typename:t_list *
complete_line_to_width	parse_format_map.c	/^void	complete_line_to_width(t_data *data, char **line, int len)$/;"	f	typeref:typename:void
control_key_press	key_event.c	/^void	control_key_press(int key, t_data *data)$/;"	f	typeref:typename:void
conv_id_param	parse_params.c	/^int	conv_id_param(t_data *data, int identifier_len, char *str)$/;"	f	typeref:typename:int
convert_pt_to_vec	vector_ft.c	/^t_vector	convert_pt_to_vec(t_point p)$/;"	f	typeref:typename:t_vector
corner_crossing	move_to_corner.c	/^int	corner_crossing(t_data *data)$/;"	f	typeref:typename:int
cub3d_render	cub3d_render.c	/^int	cub3d_render(t_data *data)$/;"	f	typeref:typename:int
degree_to_radian	vector_ft.c	/^double	degree_to_radian(double degree_angle)$/;"	f	typeref:typename:double
delete_first_column	parse_format_map.c	/^void	delete_first_column(char **map)$/;"	f	typeref:typename:void
distance_line_to_point	vector_ft.c	/^double	distance_line_to_point(t_vector line[2], t_point p)$/;"	f	typeref:typename:double
distance_point_to_vector	vector_ft.c	/^double	distance_point_to_vector(t_point point, t_point v_p1, t_point v_p2)$/;"	f	typeref:typename:double
distance_points	vector_ft.c	/^double	distance_points(t_point p1, t_point p2)$/;"	f	typeref:typename:double
draw_ceiling_floor_mandatory	draw_functions.c	/^void	draw_ceiling_floor_mandatory(t_data *data)$/;"	f	typeref:typename:void
draw_cube	draw_functions.c	/^void	draw_cube(t_data *data, int size, int pos_y, int pos_x, int color)$/;"	f	typeref:typename:void
draw_image	load_menu.c	/^void	draw_image(t_img_data *img1, t_img_data *img2, t_point pos, int color)$/;"	f	typeref:typename:void
draw_line	draw_line.c	/^void	draw_line(t_data *data, t_point	*start, t_point	*end, int color)$/;"	f	typeref:typename:void
draw_mini_map	draw_functions.c	/^void	draw_mini_map(t_data *data)$/;"	f	typeref:typename:void
draw_obstacle_texture	bonus_render.c	/^void	draw_obstacle_texture(t_data *data, t_point start, t_point end, int line_height, t_obstacle/;"	f	typeref:typename:void
draw_obstacle_texture	bonus_textures.c	/^void	draw_obstacle_texture(t_data *data, t_point start, t_point end, int line_height, t_obstacle/;"	f	typeref:typename:void
draw_obstacles	bonus_render.c	/^void	draw_obstacles(t_data *data, t_point *start, t_point *end, t_list *l_obstacles)$/;"	f	typeref:typename:void
draw_obstacles	bonus_textures.c	/^void	draw_obstacles(t_data *data, t_point *start, t_point *end, t_list *l_obstacles)$/;"	f	typeref:typename:void
draw_player	draw_functions.c	/^void	draw_player(t_data *data)$/;"	f	typeref:typename:void
draw_rain	cub3d_render.c	/^void draw_rain(t_data *data, int lines)$/;"	f	typeref:typename:void
draw_stamina_hud	cub3d_render.c	/^void	draw_stamina_hud(t_data *data)$/;"	f	typeref:typename:void
draw_texture	bonus_render.c	/^void	draw_texture(t_data *data, t_point start, t_point end, int line_height, t_rayponse *ray)$/;"	f	typeref:typename:void
draw_texture	wall_textured.c	/^void	draw_texture(t_data *data, t_point start, t_point end, int line_height, t_rayponse *ray)$/;"	f	typeref:typename:void
draw_vision_field	draw_functions.c	/^void	draw_vision_field(t_data *data, t_point minimap_position)$/;"	f	typeref:typename:void
draw_wall_textured	bonus_render.c	/^void	draw_wall_textured(t_data *data, int i_ray)$/;"	f	typeref:typename:void
draw_wall_textured	bonus_textures.c	/^void	draw_wall_textured(t_data *data, int i_ray)$/;"	f	typeref:typename:void
draw_wall_textured	wall_textured.c	/^void	draw_wall_textured(t_data *data, int i_ray)$/;"	f	typeref:typename:void
east_crossing	move_crossing_box.c	/^int	east_crossing(t_data *data)$/;"	f	typeref:typename:int
exit_game	exit_ft.c	/^int	exit_game(t_data *data)$/;"	f	typeref:typename:int
exit_msg	exit_ft.c	/^void	exit_msg(t_data *data, char *msg, int ret_exit)$/;"	f	typeref:typename:void
f_is_box_crossed	move_player.c	/^int	f_is_box_crossed(t_player *player)$/;"	f	typeref:typename:int
file_extention_available	parse_init.c	/^void	file_extention_available(t_data *data, char *fname)$/;"	f	typeref:typename:void
fix_ang	key_event.c	/^int	fix_ang(int a)$/;"	f	typeref:typename:int
format_map	parse_format_map.c	/^void	format_map(t_data *data)$/;"	f	typeref:typename:void
ft_append_tab	matrix.c	/^char	**ft_append_tab(char **matrix, char *str)$/;"	f	typeref:typename:char **
ft_lstadd_back	ft_list.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	ft_list.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	ft_list.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	ft_list.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstiter	ft_list.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	ft_list.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	ft_list.c	/^	*ft_lstmap(t_list *lst, void *(*f)(void*), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	ft_list.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	ft_list.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_matrixlen	matrix.c	/^int	ft_matrixlen(char **matrix)$/;"	f	typeref:typename:int
ft_realloc_cat	get_next_line.c	/^static char	*ft_realloc_cat(char *line, char c, int *len)$/;"	f	typeref:typename:char *	file:
generate_map	generate_map.c	/^int	generate_map(t_data *data)$/;"	f	typeref:typename:int
generate_map_content	main.c	/^void generate_map_content(t_data *data, char c)$/;"	f	typeref:typename:void
get_dist_from_plan	raycasting_utils.c	/^double	get_dist_from_plan(t_data *data, t_rayponse *rayponse)$/;"	f	typeref:typename:double
get_identifier	parse_params.c	/^int	get_identifier(t_data *data, char *str)$/;"	f	typeref:typename:int
get_identifiers_ls	parse_params.c	/^char	**get_identifiers_ls(int identifier_len)$/;"	f	typeref:typename:char **
get_img_size	load_menu.c	/^t_point get_img_size(char *path)$/;"	f	typeref:typename:t_point
get_map_size	main.c	/^void get_map_size(t_data *data)$/;"	f	typeref:typename:void
get_map_width	parse_format_map.c	/^int	get_map_width(char **map)$/;"	f	typeref:typename:int
get_next_case	move_to_corner.c	/^char	get_next_case(char **map, t_point map_point, int direction)$/;"	f	typeref:typename:char
get_next_line	get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_side_hit	raycasting_utils.c	/^int	get_side_hit(t_data *data, int index_closest)$/;"	f	typeref:typename:int
get_smallest_index	move_to_corner.c	/^int	get_smallest_index(double wall_distance[4])$/;"	f	typeref:typename:int
get_texture_pix	bonus_render.c	/^unsigned int	get_texture_pix(t_img_data *t, t_point pix)$/;"	f	typeref:typename:unsigned int
get_texture_pix	wall_textured.c	/^unsigned int	get_texture_pix(t_img_data *t, t_point pix)$/;"	f	typeref:typename:unsigned int
get_wallX	bonus_render.c	/^int	get_wallX(t_rayponse *ray)$/;"	f	typeref:typename:int
get_wallX	wall_textured.c	/^int	get_wallX(t_rayponse *ray)$/;"	f	typeref:typename:int
graphics_render	cub3d_render.c	/^int	graphics_render(t_data *data)$/;"	f	typeref:typename:int
import_bonus_textures	bonus_textures.c	/^void	import_bonus_textures(t_data *data)$/;"	f	typeref:typename:void
import_param	parse_import.c	/^void	import_param(t_data *data, int identifier, char *line)$/;"	f	typeref:typename:void
import_params	parse_import.c	/^int	import_params(t_data *data)$/;"	f	typeref:typename:int
import_sprites_textures	bonus_textures.c	/^void	import_sprites_textures(t_data *data)$/;"	f	typeref:typename:void
import_texture_path	parse_import.c	/^void	import_texture_path(t_data *data, int identifier, char *line)$/;"	f	typeref:typename:void
import_textures	parse_import.c	/^void	import_textures(t_data *data)$/;"	f	typeref:typename:void
init_Xvar	bonus_render.c	/^void   init_Xvar(t_point *start, t_point *end, int *line_width, int i_ray)$/;"	f	typeref:typename:void
init_Yvar	bonus_render.c	/^void	init_Yvar(t_point *start, t_point *end, int *line_height, int distance)$/;"	f	typeref:typename:void
init_cam_vector	camera_ft.c	/^void	init_cam_vector(t_data *data)$/;"	f	typeref:typename:void
init_f_c_color	parse_file_colors.c	/^unsigned int	init_f_c_color(t_data *data, char *line)$/;"	f	typeref:typename:unsigned int
init_fd	parse_init.c	/^void	init_fd(t_data *data, int *fd, char *fname)$/;"	f	typeref:typename:void
init_key_status	key_event.c	/^void	init_key_status(t_data *data)$/;"	f	typeref:typename:void
init_null	parse_init.c	/^void	init_null(t_data *data, int *map_parse)$/;"	f	typeref:typename:void
init_player	parse_init.c	/^void	init_player(t_data *data, int x, int y, int *is_player)$/;"	f	typeref:typename:void
init_vars	wall_textured.c	/^void   init_vars(t_point *start, t_point *end, int *line_width, int i_ray)$/;"	f	typeref:typename:void
init_vars2	wall_textured.c	/^void	init_vars2(t_point *start, t_point *end, int *line_height, t_rayponse *ray)$/;"	f	typeref:typename:void
is_NSEW	parse_check_map.c	/^int	is_NSEW(char c)$/;"	f	typeref:typename:int
is_blank_char	str_ft.c	/^int	is_blank_char(char c)$/;"	f	typeref:typename:int
is_blank_line	str_ft.c	/^int	is_blank_line(char *line)$/;"	f	typeref:typename:int
is_block	move_to_corner.c	/^int	is_block(t_data *data, char c)$/;"	f	typeref:typename:int
is_border	parse_check_map.c	/^int	is_border(t_data *data, int x, int y, int matrix_len)$/;"	f	typeref:typename:int
is_first_column_empty	parse_format_map.c	/^int	is_first_column_empty(char **map)$/;"	f	typeref:typename:int
is_map_line	str_ft.c	/^int	is_map_line(t_data *data, char *str)$/;"	f	typeref:typename:int
is_mapcase	parse_check_map.c	/^int	is_mapcase(t_data *data, char c)$/;"	f	typeref:typename:int
key_game	keys_game.c	/^int	key_game(int key, t_data *data)$/;"	f	typeref:typename:int
key_press	key_event.c	/^int	key_press(int key, t_data *data)$/;"	f	typeref:typename:int
key_realese	key_event.c	/^int	key_realese(int key, t_data *data)$/;"	f	typeref:typename:int
len_overflow	raycasting_utils.c	/^int	len_overflow(int len)$/;"	f	typeref:typename:int
load_images	load_menu.c	/^int	load_images(t_data *data, t_img_data *image, char *path)$/;"	f	typeref:typename:int
load_menu	load_menu.c	/^void load_menu(t_data *data)$/;"	f	typeref:typename:void
load_window	load_window.c	/^int	load_window(t_data *data)$/;"	f	typeref:typename:int
main	main.c	/^int	main(int argc, char *argv[])$/;"	f	typeref:typename:int
make_point	vector_ft.c	/^t_point	make_point(int x, int y)$/;"	f	typeref:typename:t_point
malloc_data	main.c	/^ t_data	*malloc_data(void)$/;"	f	typeref:typename:t_data *
menu_enter_key	keys_menu.c	/^void	menu_enter_key(t_data *data)$/;"	f	typeref:typename:void
menu_key_press	keys_menu.c	/^void	menu_key_press(int key, t_data *data)$/;"	f	typeref:typename:void
menu_s_key	keys_menu.c	/^void	menu_s_key(t_data *data)$/;"	f	typeref:typename:void
menu_w_key	keys_menu.c	/^void	menu_w_key(t_data *data)$/;"	f	typeref:typename:void
minimap_render	cub3d_render.c	/^int	minimap_render(t_data *data)$/;"	f	typeref:typename:int
mouse_event	cub3d_render.c	/^int mouse_event(t_data *data)$/;"	f	typeref:typename:int
mouse_rotate	cub3d_render.c	/^void		mouse_rotate(t_data *data)$/;"	f	typeref:typename:void
move_player	move_player.c	/^int	move_player(t_data *data, int move)$/;"	f	typeref:typename:int
my_mlx_pixel_put	draw_line.c	/^void            my_mlx_pixel_put(t_img_data *img, int x, int y, unsigned int color)$/;"	f	typeref:typename:void
next_wall_dir	bonus_raycasting.c	/^t_rayponse	next_wall_dir(t_data *data, int dir, t_list **obstacles_ls)$/;"	f	typeref:typename:t_rayponse
next_wall_dir	raycasting.c	/^t_rayponse	next_wall_dir(t_data *data, int dir, t_obstacle **obstacles_ls)$/;"	f	typeref:typename:t_rayponse
north_crossing	move_crossing_box.c	/^int	north_crossing(t_data *data)$/;"	f	typeref:typename:int
parse_file	parse_import.c	/^void	parse_file(char *fname, t_data *data)$/;"	f	typeref:typename:void
parsing_loop	parse_import.c	/^int	parsing_loop(t_data *data, int *map_parse)$/;"	f	typeref:typename:int
pix_pos_to_map_case	map_ft.c	/^char	pix_pos_to_map_case(t_data *data, t_point absolute_pos)$/;"	f	typeref:typename:char
pix_pos_to_map_pos	map_ft.c	/^t_point	pix_pos_to_map_pos(t_point absolute_pos)$/;"	f	typeref:typename:t_point
player_init	ft_player_init.c	/^int	player_init(char **map, t_player *player)$/;"	f	typeref:typename:int
player_smoth_move	move_player.c	/^void	player_smoth_move(t_data *data)$/;"	f	typeref:typename:void
pop_closest	bonus_raycasting.c	/^void	pop_closest(t_list **lst, t_list *closest)$/;"	f	typeref:typename:void
rectangle_map	parse_format_map.c	/^void	rectangle_map(t_data *data, char **map)$/;"	f	typeref:typename:void
refresh_ret_if_is_param	parse_params.c	/^static int	refresh_ret_if_is_param(char **identifiers, \\$/;"	f	typeref:typename:int	file:
remove_char	load_menu.c	/^char *remove_char(char *str, char c)$/;"	f	typeref:typename:char *
render_menu	render_menu.c	/^int	render_menu(t_data *data)$/;"	f	typeref:typename:int
res_enter_key	keys_resolution.c	/^void	res_enter_key(t_data *data)$/;"	f	typeref:typename:void
res_s_key	keys_resolution.c	/^void	res_s_key(t_data *data)$/;"	f	typeref:typename:void
res_w_key	keys_resolution.c	/^void	res_w_key(t_data *data)$/;"	f	typeref:typename:void
resolution_key_press	keys_resolution.c	/^void	resolution_key_press(int key, t_data *data)$/;"	f	typeref:typename:void
rgb_conv	parse_file_colors.c	/^unsigned int	rgb_conv(int R, int G, int B)$/;"	f	typeref:typename:unsigned int
rotate_player	rotate_player.c	/^void	rotate_player(t_player *player, int move)$/;"	f	typeref:typename:void
rotate_vector	vector_ft.c	/^void	rotate_vector(t_vector *vector, double radian_angle)$/;"	f	typeref:typename:void
set_arRay	bonus_raycasting.c	/^void	set_arRay(t_data *data)$/;"	f	typeref:typename:void
set_arRay	raycasting.c	/^void	set_arRay(t_data *data)$/;"	f	typeref:typename:void
set_beam	raycasting_utils.c	/^void	set_beam(t_data *data, t_obstacle **obstacles_ls)$/;"	f	typeref:typename:void
set_delta_distance	ray_set_distances.c	/^void	set_delta_distance(t_data *data)$/;"	f	typeref:typename:void
set_plane_dir	camera_ft.c	/^void	set_plane_dir(t_data *data, double plane_size)$/;"	f	typeref:typename:void
set_plane_origin	camera_ft.c	/^void	set_plane_origin(t_data *data)$/;"	f	typeref:typename:void
set_side_distance	ray_set_distances.c	/^void	set_side_distance(t_data *data)$/;"	f	typeref:typename:void
settings_enter_key	keys_settings.c	/^void	settings_enter_key(t_data *data)$/;"	f	typeref:typename:void
settings_key_press	keys_settings.c	/^void	settings_key_press(int key, t_data *data)$/;"	f	typeref:typename:void
settings_s_key	keys_settings.c	/^void	settings_s_key(t_data *data)$/;"	f	typeref:typename:void
settings_w_key	keys_settings.c	/^void	settings_w_key(t_data *data)$/;"	f	typeref:typename:void
shift_line_left	parse_format_map.c	/^void	shift_line_left(char *line)$/;"	f	typeref:typename:void
slide_closest_box	move_to_corner.c	/^void	slide_closest_box(t_player *p, int closest_box)$/;"	f	typeref:typename:void
sort_obstacle	bonus_raycasting.c	/^void	sort_obstacle(t_list **lst)$/;"	f	typeref:typename:void
south_crossing	move_crossing_box.c	/^int	south_crossing(t_data *data)$/;"	f	typeref:typename:int
still_in_map	map_ft.c	/^int	still_in_map(t_data *data, t_point pt)$/;"	f	typeref:typename:int
translate_pt	vector_ft.c	/^t_point	translate_pt(t_vector vector, t_point pt)$/;"	f	typeref:typename:t_point
translate_pt_inplace	vector_ft.c	/^t_point	translate_pt_inplace(t_vector vector, t_point *pt)$/;"	f	typeref:typename:t_point
translate_vector_as_pt	vector_ft.c	/^void	translate_vector_as_pt(t_vector vector, t_vector *pt)$/;"	f	typeref:typename:void
units_pos_to_minimap_pos	load_window.c	/^t_point	units_pos_to_minimap_pos(t_data *data, t_point absolute_position)$/;"	f	typeref:typename:t_point
update_pos_if_wall	move_player.c	/^int	update_pos_if_wall(t_data *data, int crossover_direction)$/;"	f	typeref:typename:int
update_pos_in_pix	pos_update.c	/^t_point	update_pos_in_pix(t_player *player)$/;"	f	typeref:typename:t_point
update_pos_in_step	pos_update.c	/^t_point	update_pos_in_step(t_player *player)$/;"	f	typeref:typename:t_point
vec_len	vector_ft.c	/^double	vec_len(t_vector vector)$/;"	f	typeref:typename:double
vec_scale	vector_ft.c	/^t_vector	vec_scale(t_vector vector, double scale)$/;"	f	typeref:typename:t_vector
vector_dot_product	vector_ft.c	/^double	vector_dot_product(t_vector v1, t_vector v2)$/;"	f	typeref:typename:double
west_crossing	move_crossing_box.c	/^int	west_crossing(t_data *data)$/;"	f	typeref:typename:int
world_render	cub3d_render.c	/^void	world_render(t_data *data)$/;"	f	typeref:typename:void
wrong_color	parse_file_colors.c	/^void	wrong_color(t_data *data, char *color_strimed)$/;"	f	typeref:typename:void
y_x	utils.c	/^t_point	y_x(int y, int x)$/;"	f	typeref:typename:t_point
